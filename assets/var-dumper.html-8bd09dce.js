import{_ as o,M as l,p as c,q as i,R as n,t as s,N as e,a1 as t}from"./framework-96b046e1.js";const r={},u=n("h1",{id:"vardumper-组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vardumper-组件","aria-hidden":"true"},"#"),s(" VarDumper 组件")],-1),d=n("p",null,"VarDumper 组件提供了从任何 PHP 变量中提取状态的机制。",-1),k={href:"https://github.com/symfony/var-dumper/blob/v6.0.2/Resources/functions/dump.php#L14",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/symfony/var-dumper/blob/v6.0.2/Resources/functions/dump.php#L34",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.php.net/manual/zh/function.var-dump.php",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="安装前的准备" tabindex="-1"><a class="header-anchor" href="#安装前的准备" aria-hidden="true">#</a> 安装前的准备</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>mkdir symfony<span class="token operator">-</span>components <span class="token comment"># 创建目录</span>
cd symfony<span class="token operator">-</span>components <span class="token comment"># 进入到工作目录 </span>

composer init <span class="token comment"># 初始化 Composer 信息</span>

mkdir src<span class="token operator">/</span> <span class="token comment"># 创建源代码目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>composer.json</code> 文件如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;curder/symfony-components&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Discover Symfony Components for VarDumper&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;authors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;curder&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;q.curder@gmail.com&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;php&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt;=8.0.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;symfony/var-dumper&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@stable&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;autoload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;psr-4&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;Curder\\\\&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require <span class="token parameter variable">--dev</span> symfony/var-dumper @stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>如果在 <code>Symfony</code> 应用程序之外安装这个组件，必须在代码中包含 <code>vendor/autoload.php</code> 文件来启用 Composer 提供的类的自动加载机制。</p></blockquote><h2 id="dump-函数" tabindex="-1"><a class="header-anchor" href="#dump-函数" aria-hidden="true">#</a> <code>dump()</code> 函数</h2><p>首先在 <code>src/</code> 目录下创建一个 User 类，如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// src/User.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">namespace</span> <span class="token package">Curder</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword type-declaration">int</span> <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$hobbies</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string double-quoted-string">&quot;music&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;coding&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目的根目录下创建一个 index.php 的入口文件，并使用 var-dumper 。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// index.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Curder<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>

<span class="token keyword">require</span> <span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/vendor/autoload.php&#39;</span><span class="token punctuation">;</span>

<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token function">dump</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 或者 dd($user);</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看效果" tabindex="-1"><a class="header-anchor" href="#查看效果" aria-hidden="true">#</a> 查看效果</h2><p>可以在命令行执行 <code>php index.php</code> 在终端输出中查看。</p><p>也可以执行<code>php -S 0.0.0.0:8888</code>，然后在浏览器中输入<code>http://localhost:8888</code> 查看。</p>`,15),h=["src"],g=t(`<h2 id="自定义输出样式" tabindex="-1"><a class="header-anchor" href="#自定义输出样式" aria-hidden="true">#</a> 自定义输出样式</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// index.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Curder<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>VarDumper<span class="token punctuation">\\</span>VarDumper</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>VarDumper<span class="token punctuation">\\</span>Cloner<span class="token punctuation">\\</span>VarCloner</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> Symfony\\Component\\VarDumper\\Dumper\\<span class="token punctuation">{</span>CliDumper<span class="token punctuation">,</span> HtmlDumper<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">require</span> <span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/vendor/autoload.php&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 设置自定义的处理方式</span>
<span class="token class-name static-context">VarDumper</span><span class="token operator">::</span><span class="token function">setHandler</span><span class="token punctuation">(</span><span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$cloner</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VarCloner</span><span class="token punctuation">;</span>

    <span class="token variable">$htmlDumper</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HtmlDumper</span><span class="token punctuation">;</span> <span class="token comment">// 自定义 HTML 处理</span>

    <span class="token variable">$htmlDumper</span><span class="token operator">-&gt;</span><span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;light&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 自定义设置主题</span>

    <span class="token variable">$dumper</span> <span class="token operator">=</span> <span class="token constant">PHP_SAPI</span> <span class="token operator">===</span> <span class="token string single-quoted-string">&#39;cli&#39;</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">CliDumper</span> <span class="token punctuation">:</span> <span class="token variable">$htmlDumper</span><span class="token punctuation">;</span> <span class="token comment">// 指定对应 dumper 实例</span>

    <span class="token variable">$dumper</span><span class="token operator">-&gt;</span><span class="token function">dump</span><span class="token punctuation">(</span><span class="token variable">$cloner</span><span class="token operator">-&gt;</span><span class="token function">cloneVar</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行 dump</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>

<span class="token function">dd</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),y=["src"],f=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),q={href:"https://symfony.com/doc/current/components/var-dumper.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/curder/symfony-components/tree/var-dumper",target:"_blank",rel:"noopener noreferrer"};function w(p,x){const a=l("ExternalLinkIcon");return c(),i("div",null,[u,d,n("p",null,[s("它提供了一个更好的 "),n("a",k,[s("dump()"),e(a)]),s(" 和 "),n("a",m,[s("dd()"),e(a)]),s(" 函数，可以使用它来代替PHP内建的 "),n("a",v,[s("var_dump"),e(a)]),s("。")]),b,n("img",{src:p.$withBase("/images/languages/symfony-components/var-dumper/default-style-for-heml-render.png"),alt:""},null,8,h),g,n("img",{src:p.$withBase("/images/languages/symfony-components/var-dumper/custom-light-theme-style-for-heml-render.png"),alt:""},null,8,y),f,n("ul",null,[n("li",null,[n("a",q,[s("The VarDumper Component 文档"),e(a)])]),n("li",null,[n("a",_,[s("curder/symfony-components"),e(a)])])])])}const $=o(r,[["render",w],["__file","var-dumper.html.vue"]]);export{$ as default};
