import{_ as e,p as t,q as p,R as n,a1 as o,t as s}from"./framework-7e09d608.js";const c={},i=o(`<h1 id="分离项目代码和组件代码" tabindex="-1"><a class="header-anchor" href="#分离项目代码和组件代码" aria-hidden="true">#</a> 分离项目代码和组件代码</h1><p>在实际开发项目中会引入很多的第三方包，比如：<code>bootstrap</code>、<code>vue</code>、<code>react</code>等等。</p><p>通常他们的体积都会比较大，在开发环境下，又不会经常更新而我们又不想在每次打包代码的时候都将他们进行打包。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>修改<code>webpack.config.js</code>文件内容：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token literal-property property">vendor</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&#39;react&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 配置共同的代码块进行压缩</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>CommonsChunkPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;vendor&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> config<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>将第三方组件代码和本地编写的代码分离后可以看到新生成了一个<code>vendor.js</code>文件,如下：</p>`,8),l=["src"],r=n("p",null,[s("如果是自己编写html的话，需要注意在引入"),n("code",null,"app.js"),n("strong",null,"之前"),s("引入"),n("code",null,"vendor.js"),s("文件。")],-1);function d(a,u){return t(),p("div",null,[i,n("img",{src:a.$withBase("/images/languages/javascript/webpack2/separate-project-code-and-component-code/separate-project-code-and-component-code.png"),alt:""},null,8,l),r])}const v=e(c,[["render",d],["__file","separate-project-code-and-component-code.html.vue"]]);export{v as default};
