import{_ as p,r as o,o as c,c as l,b as n,a as e,F as i,d as s,e as t}from"./app.597d8cd2.js";const u={},r=n("h1",{id:"eloquent-\u6A21\u578B\u6280\u5DE7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eloquent-\u6A21\u578B\u6280\u5DE7","aria-hidden":"true"},"#"),s(" Eloquent \u6A21\u578B\u6280\u5DE7")],-1),d=s("\u82F1\u6587\u539F\u6587\uFF1A"),k={href:"https://laravel-news.com/eloquent-tips-tricks",target:"_blank",rel:"noopener noreferrer"},v=s("20 Laravel Eloquent Tips and Tricks"),g=t(`<p>Laravel Eloquent \u7684ORM\u770B\u8D77\u6765\u50CF\u4E00\u4E2A\u7B80\u5355\u7684\u673A\u5236\u3002</p><p>\u4F46\u662F\u6709\u5F88\u591A\u534A\u9690\u85CF\u7684\u529F\u80FD\u548C\u4E0D\u592A\u77E5\u540D\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u66F4\u591A\u3002\u5728\u8FD9\u7BC7\u6587\u7AE0\u4E2D\uFF0C\u6211\u4EEC\u6765\u56DE\u987E\u4E00\u4E0B\u8FD9\u4E9B\u6280\u5DE7\u3002</p><h2 id="\u589E\u91CF\u548C\u51CF\u91CF" tabindex="-1"><a class="header-anchor" href="#\u589E\u91CF\u548C\u51CF\u91CF" aria-hidden="true">#</a> \u589E\u91CF\u548C\u51CF\u91CF</h2><ul><li>\u60A8\u4E4B\u524D\u53EF\u80FD\u8FD9\u6837\u5199</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$article</span> <span class="token operator">=</span> <span class="token class-name static-context">Article</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$article_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$article</span><span class="token operator">-&gt;</span><span class="token property">read_count</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token variable">$article</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u66F4\u4F18\u96C5\u7684\u793A\u8303</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$article</span> <span class="token operator">=</span> <span class="token class-name static-context">Article</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$article_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$article</span><span class="token operator">-&gt;</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;read_count&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E0B\u9762\u8FD9\u4E9B\u4E5F\u53EF\u4EE5\u4F7F\u7528</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Article</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$article_id</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;read_count&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// +1</span>
<span class="token class-name static-context">Article</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$article_id</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;read_count&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// +10</span>
<span class="token class-name static-context">Product</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$produce_id</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;stock&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="x\u6216\u8005y\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#x\u6216\u8005y\u65B9\u6CD5" aria-hidden="true">#</a> X\u6216\u8005Y\u65B9\u6CD5</h2><p>Laravel Eloquent \u6709\u76F8\u5F53\u591A\u7684\u529F\u80FD\u7ED3\u5408\u4E86\u4E24\u79CD\u65B9\u6CD5\uFF0C\u6BD4\u5982&quot;\u8BF7\u505Ax\uFF0C\u5426\u5219\u505Ay&quot;\u3002</p><h3 id="findorfail-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#findorfail-\u65B9\u6CD5" aria-hidden="true">#</a> <code>findOrFail()</code> \u65B9\u6CD5</h3><ul><li>\u60A8\u4E4B\u524D\u53EF\u80FD\u8FD9\u6837\u5199</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">abort</span> <span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u66F4\u4F18\u96C5\u7684\u793A\u8303</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="firstorcreate-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#firstorcreate-\u65B9\u6CD5" aria-hidden="true">#</a> <code>firstOrCreate()</code>\u65B9\u6CD5</h3><ul><li>\u60A8\u4E4B\u524D\u53EF\u80FD\u8FD9\u6837\u5199</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$email</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u66F4\u4F18\u96C5\u7684\u505A\u6CD5</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">firstOrCreate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$email</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u6A21\u578B-boot-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6A21\u578B-boot-\u65B9\u6CD5" aria-hidden="true">#</a> \u6A21\u578B <code>boot()</code> \u65B9\u6CD5</h2><p>\u5728Laravel Eloquent\u7684\u6A21\u578B\u4E2D\u6709\u4E00\u4E2A\u53EB\u505A<code>boot()</code>\u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u60A8\u53EF\u4EE5\u901A\u8FC7\u5728\u6A21\u578B\u4E2D\u91CD\u5199\u6765\u8986\u76D6\u9ED8\u8BA4\u884C\u4E3A\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword static-context">static</span><span class="token operator">::</span><span class="token function">updating</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$model</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// do some logging</span>
            <span class="token comment">// override some property like $model-&gt;something = transform($something);</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u80FD\u6700\u5E38\u89C1\u7684\u4F8B\u5B50\u4E4B\u4E00\u5C31\u662F\u5728\u521B\u5EFA\u6A21\u578B\u5BF9\u8C61\u65F6\u8BBE\u7F6E\u4E00\u4E9B\u5B57\u6BB5\u503C\u3002</p>`,25),m=s("\u8FD9\u91CC\u5047\u8BBE\u60A8\u60F3\u5728\u90A3\u4E2A\u65F6\u5019\u751F\u6210"),b={href:"https://github.com/webpatser/laravel-uuid",target:"_blank",rel:"noopener noreferrer"},h=s("uuid"),f=s("\u5B57\u6BB5\u3002"),q=t(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token function">creating</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$model</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">uuid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token class-name static-context">Uuid</span><span class="token operator">::</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5173\u8054\u5173\u7CFB\u4E2D\u7684\u6761\u4EF6\u548C\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5173\u8054\u5173\u7CFB\u4E2D\u7684\u6761\u4EF6\u548C\u6392\u5E8F" aria-hidden="true">#</a> \u5173\u8054\u5173\u7CFB\u4E2D\u7684\u6761\u4EF6\u548C\u6392\u5E8F</h2><p>\u60A8\u53EF\u4EE5\u5728\u6A21\u578B\u4E2D\u8FD9\u6837\u5B9A\u4E49\u5173\u7CFB\u7684\u5178\u578B\u65B9\u5F0F</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">users</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;App\\User&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u60A8\u77E5\u9053\u5728\u8FD9\u4E00\u70B9\u4E0A\u6211\u4EEC\u5DF2\u7ECF\u53EF\u4EE5\u6DFB\u52A0\u4F4D\u7F6E\u6216\u547D\u4EE4\u4E86\u5417\uFF1F</p><p>\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u60F3\u8981\u67D0\u79CD\u7C7B\u578B\u7684\u7528\u6237\u7684\u7279\u5B9A\u5173\u7CFB\uFF0C\u5E76\u53EF\u4EE5\u901A\u8FC7\u7535\u5B50\u90AE\u4EF6\u6392\u5E8F\uFF0C\u5219\u53EF\u4EE5\u6267\u884C\u6B64\u64CD\u4F5C</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">approvedUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;App\\User&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;approved&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6A21\u578B\u5C5E\u6027-\u65F6\u95F4\u6233-\u8FFD\u52A0\u7B49\u3002" tabindex="-1"><a class="header-anchor" href="#\u6A21\u578B\u5C5E\u6027-\u65F6\u95F4\u6233-\u8FFD\u52A0\u7B49\u3002" aria-hidden="true">#</a> \u6A21\u578B\u5C5E\u6027\uFF1A\u65F6\u95F4\u6233\uFF0C\u8FFD\u52A0\u7B49\u3002</h2><p>\u6709\u4E00\u4E2ALaravel Eloquent Model \u7684\u51E0\u4E2A\u53C2\u6570\uFF0C\u4EE5\u7C7B\u7684\u5C5E\u6027\u7684\u5F62\u5F0F\u58F0\u660E\uFF0C\u6700\u5E38\u7528\u7684\u53EF\u80FD\u662F\u4E0B\u9762\u8FD9\u4E9B\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u6A21\u578B\u8868\u540D</span>
    <span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u80FD\u591F\u6279\u91CF\u586B\u5145\u7684\u5B57\u6BB5\uFF0C\u6BD4\u5982\uFF1A\u4F7F\u7528User::create()\u6765\u586B\u5145\u6570\u636E\u5E93\u6570\u636E</span>
    <span class="token keyword">protected</span> <span class="token variable">$dates</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;deleted_at&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u80FD\u88ABCarbon-ized\u65F6\u95F4\u8F6C\u5316\u7684\u5B57\u6BB5</span>
    <span class="token keyword">protected</span> <span class="token variable">$appends</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;field1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;field2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5728JSON\u5B57\u7B26\u4E32\u4E2D\u8FFD\u52A0\u503C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u8FD8\u6709\u66F4\u591A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token variable">$primaryKey</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;uuid&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u8868\u4E3B\u952E\uFF0C\u5982\u679C\u4E0D\u662F\u9ED8\u8BA4\u7684id\u7684\u8BDD</span>
<span class="token keyword">public</span> <span class="token variable">$incrementing</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u4E0D\u9700\u8981\u81EA\u589E\uFF0C\u5C06\u503C\u8BBE\u7F6E\u4E3Afalse</span>
<span class="token keyword">protected</span> <span class="token variable">$perPage</span> <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token comment">// \u5206\u9875\u9875\u7801\u6570\uFF0C\u9ED8\u8BA4\u662F15</span>
<span class="token keyword">const</span> <span class="token constant">CREATED_AT</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u65F6\u95F4\u5B57\u6BB5\u503C\uFF0C\u5982\u679C\u4E0D\u662F\u9ED8\u8BA4\u7684created_at\uFF0C\u9700\u8981\u4FEE\u6539\u8FD9\u4E2A\u5E38\u91CF\u503C</span>

<span class="token keyword">const</span> <span class="token constant">UPDATED_AT</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0\u65F6\u95F4\u5B57\u6BB5\u503C\uFF0C\u5982\u679C\u4E0D\u662F\u9ED8\u8BA4\u7684updated_at\uFF0C\u9700\u8981\u4FEE\u6539\u8FD9\u4E2A\u5E38\u91CF\u503C</span>
<span class="token keyword">public</span> <span class="token variable">$timestamps</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u4E0D\u4F7F\u7528\u65F6\u95F4\u6233\u9700\u8981\u8BBE\u7F6E\u4E3Afalse\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),_=s("\u66F4\u591A\u8BF7\u67E5\u770B\u9ED8\u8BA4"),y={href:"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Database/Eloquent/Model.php",target:"_blank",rel:"noopener noreferrer"},w=s("\u62BD\u8C61\u6A21\u578B\u7C7B"),x=s("\u7684\u4EE3\u7801\u5E76\u67E5\u770B\u6240\u6709\u4F7F\u7528\u7684\u7279\u5F81\u3002"),$=t(`<h2 id="\u627E\u5230\u591A\u4E2A\u5B9E\u4F53" tabindex="-1"><a class="header-anchor" href="#\u627E\u5230\u591A\u4E2A\u5B9E\u4F53" aria-hidden="true">#</a> \u627E\u5230\u591A\u4E2A\u5B9E\u4F53</h2><p>\u6211\u4EEC\u90FD\u77E5\u9053<code>find()</code>\u65B9\u6CD5\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u5F88\u5C11\u6709\u4EBA\u77E5\u9053\u5B83\u53EF\u4EE5\u63A5\u53D7\u591A\u4E2AID\u4F5C\u4E3A\u6570\u7EC4\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$users</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="wherex" tabindex="-1"><a class="header-anchor" href="#wherex" aria-hidden="true">#</a> WhereX</h2><ul><li>\u60A8\u4E4B\u524D\u53EF\u80FD\u8FD9\u6837\u5199</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$users</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;approved&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u66F4\u4F18\u96C5\u7684\u89E3\u51B3\u793A\u4F8B</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$users</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">whereApproved</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u60A8\u53EF\u4EE5\u66F4\u6539\u4EFB\u4F55\u5B57\u6BB5\u7684\u540D\u79F0\uFF0C\u5E76\u5C06\u5176\u4F5C\u4E3A\u540E\u7F00\u8FFD\u52A0\u5230\u201Cwhere\u201D\uFF0C\u5B83\u5C06\u6309\u9B54\u672F\u65B9\u6CD5\u5E2E\u60A8\u8FBE\u6210\u76EE\u6807\u3002</p><p>\u53E6\u5916\uFF0C\u8FD8\u6709\u4E00\u4E9B\u9884\u5148\u5B9A\u4E49\u597D\u7684\u4E0E\u65E5\u671F/\u65F6\u95F4\u76F8\u5173\u7684\u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">whereDate</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">whereDay</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">whereMonth</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;m&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">whereYear</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6309\u5173\u8054\u5173\u7CFB\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6309\u5173\u8054\u5173\u7CFB\u6392\u5E8F" aria-hidden="true">#</a> \u6309\u5173\u8054\u5173\u7CFB\u6392\u5E8F</h2><p>\u4E00\u4E9B\u66F4\u590D\u6742\u7684\u201C\u6280\u5DE7\u201D\uFF0C\u5982\u679C\u60A8\u6709\u8BBA\u575B\u8BDD\u9898\uFF0C\u4F46\u60F3\u901A\u8FC7\u6700\u65B0\u7684\u5E16\u5B50\u67E5\u770B\u5B83\u4EEC\u5462\uFF1F</p><p>\u9996\u5148\uFF0C\u63CF\u8FF0\u5173\u4E8E\u8BE5\u4E3B\u9898\u7684\u6700\u65B0\u5E16\u5B50\u7684\u5355\u72EC\u5173\u7CFB</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">latestPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasOne</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">latest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u5728\u60A8\u7684\u63A7\u5236\u5668\u65B9\u6CD5\u4E2D\u60A8\u53EF\u4EE5\u505A\u5230\u8FD9\u4E00\u70B9\u201C\u9B54\u672F\u201D</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$users</span> <span class="token operator">=</span> <span class="token class-name static-context">Topic</span><span class="token operator">::</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;latestPost&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sortByDesc</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;latestPost.created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528eloquent-when-\u5C3D\u91CF\u4E0D\u4F7F\u7528if-else-s" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528eloquent-when-\u5C3D\u91CF\u4E0D\u4F7F\u7528if-else-s" aria-hidden="true">#</a> \u4F7F\u7528<code>Eloquent::when()</code>\uFF0C\u5C3D\u91CF\u4E0D\u4F7F\u7528if-else&#39;s</h2><p>\u60A8\u4E4B\u524D\u53EF\u80FD\u7528<code>if-else</code>\u7F16\u5199\u6761\u4EF6\u67E5\u8BE2\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filter_by&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;likes&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;likes&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;likes_amount&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filter_by&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;date&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ordering_rule&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u6709\u4E00\u4E2A\u66F4\u597D\u7684\u65B9\u6CD5 - \u4F7F\u7528<code>when()</code>\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token class-name static-context">Author</span><span class="token operator">::</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">when</span><span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filter_by&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;likes&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;likes&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;likes_amount&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">when</span><span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filter_by&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;date&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ordering_rule&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u89C2\u5BDF\u60A8\u53EF\u80FD\u4F1A\u53D1\u73B0\uFF0C\u4F7F\u7528<code>when()</code>\u65B9\u6CD5\u53EF\u80FD\u4E0D\u4F1A\u611F\u89C9\u66F4\u77ED\u6216\u66F4\u4F18\u96C5\uFF0C\u4F46\u662F\u5B83\u7684\u5F3A\u5927\u4E4B\u5904\u662F\u4F20\u9012\u53C2\u6570</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">when</span><span class="token punctuation">(</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;role&#39;</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$q</span><span class="token punctuation">,</span> <span class="token variable">$role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;role_id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$role</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$authors</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="belongsto\u9ED8\u8BA4\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#belongsto\u9ED8\u8BA4\u6A21\u578B" aria-hidden="true">#</a> <code>BelongsTo</code>\u9ED8\u8BA4\u6A21\u578B</h2><p>\u5047\u8BBE\u60A8\u7684\u5E16\u5B50\u5C5E\u4E8E\u4F5C\u8005\uFF0C\u7136\u540E\u662FBlade\u4EE3\u7801</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">author</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u5982\u679C\u4F5C\u8005\u88AB\u5220\u9664\u6216\u8005\u7531\u4E8E\u67D0\u79CD\u539F\u56E0\u6CA1\u6709\u8BBE\u7F6E\u5462\uFF1F\u60A8\u4F1A\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\uFF0C\u50CF<code>property of non-object</code>\u3002</p><p>\u5F53\u7136\uFF0C\u60A8\u53EF\u4EE5\u50CF\u8FD9\u6837\u9632\u6B62\u5B83 <code>$post-&gt;author-&gt;name ?? &#39;&#39;</code></p><p>\u4F46\u60A8\u53EF\u4EE5\u5728Laravel Eloquent Model\u7684\u5173\u8054\u5173\u7CFB\u5C42\u9762\u4E0A\u505A\u5230\u8FD9\u4E00\u70B9\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">author</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;App\\Author&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">withDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u5982\u679C\u6CA1\u6709\u4F5C\u8005\u9644\u52A0\u5230\u8BE5\u5E16\u5B50\uFF0C<code>author()</code>\u5173\u7CFB\u5C06\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684<code>App\\Author</code>\u6A21\u578B\u3002</p><p>\u6B64\u5916\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u9ED8\u8BA4\u5C5E\u6027\u503C\u5206\u914D\u7ED9\u8BE5\u9ED8\u8BA4\u6A21\u578B\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">author</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;App\\Author&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">withDefault</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Guest Author&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528\u53D8\u5316\u5C5E\u6027\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u53D8\u5316\u5C5E\u6027\u6392\u5E8F" aria-hidden="true">#</a> \u4F7F\u7528\u53D8\u5316\u5C5E\u6027\u6392\u5E8F</h2><p>\u5047\u5982\u60A8\u6709\u4E0B\u9762\u7684\u6A21\u578B\u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">getFullNameAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">attributes</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;first_name&#39;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39; &#39;</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">attributes</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;last_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u60A8\u60F3\u901A\u8FC7<code>full_name</code>\u6765\u6392\u5E8F\uFF0C\u60A8\u53EF\u80FD\u4F1A\u8FD9\u4E48\u505A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$clients</span> <span class="token operator">=</span> <span class="token class-name static-context">Client</span><span class="token operator">::</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;full_name&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u6837\u662F\u4E0D\u4F1A\u751F\u6548\u7684</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u89E3\u51B3\u65B9\u6848\u975E\u5E38\u7B80\u5355\u3002\u6211\u4EEC\u9700\u8981\u5728\u83B7\u5F97\u7ED3\u679C\u540E\u5BF9\u7ED3\u679C\u8FDB\u884C\u6392\u5E8F\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$clients</span> <span class="token operator">=</span> <span class="token class-name static-context">Client</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sortBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;full_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\u6392\u5E8F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,43),U=s("**\u6CE8\u610F\uFF1A**\u51FD\u6570\u540D\u79F0\u662F\u4E0D\u540C\u7684\uFF0C\u5B83\u4E0D\u662F"),E=n("code",null,"orderBy",-1),A=s("\uFF0C\u800C\u662F"),T=n("code",null,"sortBy",-1),B=s("\u3002"),M={href:"http://laraveldaily.com/eloquent-order-results-mutator-attribute/",target:"_blank",rel:"noopener noreferrer"},L=s("\u66F4\u591A\u53EF\u4EE5\u53C2\u8003\u8FD9\u91CC"),D=t(`<h2 id="\u5168\u5C40\u8303\u56F4\u5185\u7684\u9ED8\u8BA4\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u8303\u56F4\u5185\u7684\u9ED8\u8BA4\u6392\u5E8F" aria-hidden="true">#</a> \u5168\u5C40\u8303\u56F4\u5185\u7684\u9ED8\u8BA4\u6392\u5E8F</h2><p>\u5982\u679C\u60A8\u60F3\u8BA9<code>User::all()</code>\u603B\u662F\u6309\u540D\u79F0\u5B57\u6BB5\u6392\u5E8F\u5462\uFF1F\u60A8\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u5168\u5C40\u8303\u56F4\u3002</p><p>\u8BF7\u56DE\u5230\u4E0A\u9762\u5DF2\u7ECF\u63D0\u5230\u7684<code>boot()</code>\u65B9\u6CD5\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Order by name ASC</span>
    <span class="token keyword static-context">static</span><span class="token operator">::</span><span class="token function">addGlobalScope</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;order&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Builder</span> <span class="token variable">$builder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;asc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),C=s("\u66F4\u591A"),O={href:"https://laravel-china.org/docs/laravel/5.6/eloquent#query-scopes",target:"_blank",rel:"noopener noreferrer"},R=s("\u67E5\u8BE2\u4F5C\u7528\u57DF\u53C2\u8003\u8FD9\u91CC"),F=t(`<h2 id="\u539F\u59CB\u67E5\u8BE2\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u67E5\u8BE2\u65B9\u6CD5" aria-hidden="true">#</a> \u539F\u59CB\u67E5\u8BE2\u65B9\u6CD5</h2><p>\u6709\u65F6\u6211\u4EEC\u9700\u8981\u5C06\u539F\u59CB\u67E5\u8BE2\u6DFB\u52A0\u5230\u6211\u4EEC\u7684\u96C4\u8FA9\u62A5\u8868\u4E2D\u3002\u5E78\u8FD0\u7684\u662F\uFF0CLaravel Eloquent Model \u63D0\u4F9B\u4E86\u8FD9\u6837\u7684\u529F\u80FD\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// whereRaw</span>
<span class="token variable">$orders</span> <span class="token operator">=</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;orders&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">whereRaw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price &gt; IF(state = &quot;TX&quot;, ?, 100)&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// havingRaw</span>
<span class="token class-name static-context">Product</span><span class="token operator">::</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;category_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">havingRaw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;COUNT(*) &gt; 1&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// orderByRaw</span>
<span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;2016-01-01&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">-&gt;</span><span class="token function">orderByRaw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;(updated_at - created_at) desc&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u590D\u5236\u6570\u636E\u5E93\u884C" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236\u6570\u636E\u5E93\u884C" aria-hidden="true">#</a> \u590D\u5236\u6570\u636E\u5E93\u884C</h2><p>\u6CA1\u6709\u6DF1\u5165\u7684\u89E3\u91CA\uFF0C\u8FD9\u91CC\u662F\u5236\u4F5C\u6570\u636E\u5E93\u884C\u6570\u636E\u526F\u672C\u7684\u6700\u4F73\u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$task</span> <span class="token operator">=</span> <span class="token class-name static-context">Tasks</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$newTask</span> <span class="token operator">=</span> <span class="token variable">$task</span><span class="token operator">-&gt;</span><span class="token function">replicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$newTask</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5927\u6570\u636E\u91CF\u7684\u60C5\u51B5\u4E0B\u8BF7\u4F7F\u7528chunk-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5927\u6570\u636E\u91CF\u7684\u60C5\u51B5\u4E0B\u8BF7\u4F7F\u7528chunk-\u65B9\u6CD5" aria-hidden="true">#</a> \u5927\u6570\u636E\u91CF\u7684\u60C5\u51B5\u4E0B\u8BF7\u4F7F\u7528<code>chunk()</code>\u65B9\u6CD5</h2><p>\u4E0D\u5B8C\u5168\u662FEloquent\u7684\u76F8\u5173\uFF0C\u5B83\u66F4\u591A\u7684\u662Fcollect\uFF0C\u4F46\u4ECD\u7136\u5F3A\u5927\u3002\u65B9\u4FBF\u60A8\u5904\u7406\u66F4\u5927\u7684\u6570\u636E\u96C6\uFF0C\u60A8\u53EF\u4EE5\u628A\u5B83\u4EEC\u5206\u6210\u51E0\u5757\u3002</p><ul><li>\u60A8\u4E4B\u524D\u53EF\u80FD\u8FD9\u6837\u5199</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$users</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$users</span> <span class="token keyword">as</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u66F4\u4F18\u96C5\u7684\u793A\u8303</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">chunk</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$users</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$users</span> <span class="token keyword">as</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u521B\u5EFA\u6A21\u578B\u65F6\u521B\u5EFA\u66F4\u591A\u7684\u4E1C\u897F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u6A21\u578B\u65F6\u521B\u5EFA\u66F4\u591A\u7684\u4E1C\u897F" aria-hidden="true">#</a> \u521B\u5EFA\u6A21\u578B\u65F6\u521B\u5EFA\u66F4\u591A\u7684\u4E1C\u897F</h2><p>\u60A8\u53EF\u80FD\u77E5\u9053 Laravel \u7684 artisan \u547D\u4EE4\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:model Company
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u60A8\u77E5\u9053\u6709\u4E09\u4E2A\u6709\u7528\u7684\u6807\u5FD7\u53EF\u4EE5\u4E3A\u6A21\u578B\u751F\u6210\u76F8\u5173\u7684\u6587\u4EF6\u5417\uFF1F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:model Company -mcr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-m</code> \u521B\u5EFA\u6570\u636E\u5E93\u8FC1\u79FB\u6587\u4EF6</li><li><code>-c</code> \u521B\u5EFA\u4E00\u4E2Acontroller\u63A7\u5236\u5668</li><li><code>-r</code> \u5C06\u58F0\u660E\u63A7\u5236\u5668\u5E94\u8BE5\u662F\u8D44\u6E90\u63A7\u5236\u5668</li></ul><h2 id="\u5728\u4FDD\u5B58\u65F6\u8986\u76D6-updated-at" tabindex="-1"><a class="header-anchor" href="#\u5728\u4FDD\u5B58\u65F6\u8986\u76D6-updated-at" aria-hidden="true">#</a> \u5728\u4FDD\u5B58\u65F6\u8986\u76D6 updated_at</h2><p>\u60A8\u77E5\u9053\u6267\u884C <code>-&gt;save()</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u53C2\u6570\u5417\uFF1F\u56E0\u6B64\uFF0C\u60A8\u53EF\u4EE5\u544A\u8BC9\u5B83\u201C\u5FFD\u7565\u201D<code>updated_at</code>\u9ED8\u8BA4\u529F\u80FD\u4EE5\u586B\u5145\u5F53\u524D\u65F6\u95F4\u6233\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$product</span> <span class="token operator">=</span> <span class="token class-name static-context">Product</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$product</span><span class="token operator">-&gt;</span><span class="token property">updated_at</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;2019-01-01 10:00:00&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$product</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;timestamps&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u60A8\u7528\u60A8\u9884\u5148\u5B9A\u4E49\u7684\u8986\u76D6\u9ED8\u8BA4<code>updated_at</code>\uFF0C\u5F53\u524D\u4FEE\u6539\u884C\u7684\u65F6\u95F4\u5C06\u88AB\u8BBE\u7F6E\u4E3A\u4E0A\u9762\u7684<code>2019-01-01 10:00:00</code>\u3002</p><h2 id="update-\u7684\u7ED3\u679C\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#update-\u7684\u7ED3\u679C\u662F\u4EC0\u4E48" aria-hidden="true">#</a> <code>update()</code>\u7684\u7ED3\u679C\u662F\u4EC0\u4E48\uFF1F</h2><p>\u60A8\u6709\u6CA1\u6709\u60F3\u8FC7\u8FD9\u6BB5\u4EE3\u7801\u5B9E\u9645\u8FD4\u56DE\u7684\u5185\u5BB9\uFF1F</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$products</span><span class="token operator">-&gt;</span><span class="token function">whereNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;category_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;category_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u66F4\u65B0\u5982\u679C\u5728\u6570\u636E\u5E93\u4E2D\u6267\u884C\uFF0C\u4F46\u662F<code>$result</code>\u5305\u542B\u4EC0\u4E48\uFF1F</p><p>\u7B54\u6848\u662F\u66F4\u65B0\u64CD\u4F5C\u6240\u5F71\u54CD\u7684\u884C\u6570\u3002</p><p>\u6240\u4EE5\u5982\u679C\u60A8\u9700\u8981\u68C0\u67E5\u6709\u591A\u5C11\u884C\u53D7\u5230\u5F71\u54CD\uFF0C\u5219\u4E0D\u9700\u8981\u8C03\u7528\u5176\u4ED6\u65B9\u6CD5\uFF0C<code>update()</code> \u65B9\u6CD5\u5C06\u4E3A\u60A8\u8FD4\u56DE\u6B64\u6570\u5B57\u3002</p><h2 id="\u5C06\u62EC\u53F7\u8F6C\u6362\u4E3A\u4E00\u4E2Aeloquent\u7684\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u5C06\u62EC\u53F7\u8F6C\u6362\u4E3A\u4E00\u4E2Aeloquent\u7684\u67E5\u8BE2" aria-hidden="true">#</a> \u5C06\u62EC\u53F7\u8F6C\u6362\u4E3A\u4E00\u4E2AEloquent\u7684\u67E5\u8BE2</h2><p>\u5982\u679C\u60A8\u6709<code>and|or</code>\u6DF7\u5165\u4F60\u7684SQL\u67E5\u8BE2\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>gender <span class="token operator">=</span> <span class="token string">&#39;Male&#39;</span> <span class="token operator">and</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>gender <span class="token operator">=</span> <span class="token string">&#39;Female&#39;</span> <span class="token operator">and</span> age <span class="token operator">&gt;=</span> <span class="token number">65</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u4F55\u628A\u5B83\u7FFB\u8BD1\u6210Eloquent\u5462\uFF1F\u8FD9\u662F\u9519\u8BEF\u7684\u65B9\u5F0F\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Male&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Female&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B63\u786E\u7684\u65B9\u6CD5\u7A0D\u5FAE\u590D\u6742\u4E00\u70B9\uFF0C\u4F7F\u7528\u95ED\u5305\u51FD\u6570\u4F5C\u4E3A\u5B50\u67E5\u8BE2\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Male&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Female&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="orwhere\u6709\u591A\u4E2A\u53C2\u6570\u7684\u5730\u65B9" tabindex="-1"><a class="header-anchor" href="#orwhere\u6709\u591A\u4E2A\u53C2\u6570\u7684\u5730\u65B9" aria-hidden="true">#</a> <code>orWhere</code>\u6709\u591A\u4E2A\u53C2\u6570\u7684\u5730\u65B9</h2><p>\u6700\u540E\uFF0C\u60A8\u53EF\u4EE5\u5C06\u4E00\u7EC4\u53C2\u6570\u4F20\u9012\u7ED9<code>orwhere()</code></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u66F4\u4F18\u96C5\u7684\u505A\u6CD5</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$q</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a> \u53C2\u8003\u94FE\u63A5</h2>`,41),P={href:"https://laravel-news.com/eloquent-tips-tricks",target:"_blank",rel:"noopener noreferrer"},W=s("\u82F1\u6587\u539F\u6587\uFF1A20 Laravel Eloquent Tips and Tricks"),N={href:"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Database/Eloquent/Model.php",target:"_blank",rel:"noopener noreferrer"},I=s("Laravel\u6E90\u7801 - Abstract Model class"),S={href:"https://laravel-china.org/docs/laravel/5.6/eloquent#query-scopes",target:"_blank",rel:"noopener noreferrer"},V=s("Eloquent\u624B\u518C - \u67E5\u8BE2\u4F5C\u7528\u57DF"),Y={href:"http://laraveldaily.com/eloquent-order-results-mutator-attribute/",target:"_blank",rel:"noopener noreferrer"},X=s("Eloquent: How to Order Results by Mutator Attribute?");function G(H,j){const a=o("ExternalLinkIcon");return c(),l(i,null,[r,n("blockquote",null,[n("p",null,[d,n("a",k,[v,e(a)])])]),g,n("p",null,[m,n("a",b,[h,e(a)]),f]),q,n("p",null,[_,n("a",y,[w,e(a)]),x]),$,n("blockquote",null,[n("p",null,[U,E,A,T,B,n("a",M,[L,e(a)])])]),D,n("p",null,[C,n("a",O,[R,e(a)])]),F,n("ul",null,[n("li",null,[n("a",P,[W,e(a)])]),n("li",null,[n("a",N,[I,e(a)])]),n("li",null,[n("a",S,[V,e(a)])]),n("li",null,[n("a",Y,[X,e(a)])])])],64)}var J=p(u,[["render",G],["__file","eloquent-tips-tricks.html.vue"]]);export{J as default};
