import{_ as t,M as l,p as r,q as p,R as e,t as s,N as i,a1 as a}from"./framework-ff09ffed.js";const c={},d=e("h1",{id:"phpstorm如何配置php-code-sniffer和php-cs-fixer让php代码支持psr2规范",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#phpstorm如何配置php-code-sniffer和php-cs-fixer让php代码支持psr2规范","aria-hidden":"true"},"#"),s(" PHPStorm如何配置PHP-Code-Sniffer和PHP-CS-Fixer让PHP代码支持PSR2规范")],-1),u=e("h2",{id:"phpcs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#phpcs","aria-hidden":"true"},"#"),s(" phpcs")],-1),h={href:"http://pear.php.net/package/PHP_CodeSniffer/",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"phpcs",-1),m=e("h3",{id:"安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),v={href:"https://github.com/squizlabs/PHP_CodeSniffer",target:"_blank",rel:"noopener noreferrer"},b=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> global require <span class="token string">&#39;squizlabs/php_codesniffer=*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>phpcs <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出如下提示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PHP_CodeSniffer version <span class="token number">3.2</span>.3 <span class="token punctuation">(</span>stable<span class="token punctuation">)</span> by Squiz <span class="token punctuation">(</span>http://www.squiz.net<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="检查psr-2命令行" tabindex="-1"><a class="header-anchor" href="#检查psr-2命令行" aria-hidden="true">#</a> 检查PSR-2命令行</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>phpcs <span class="token parameter variable">--standard</span><span class="token operator">=</span>PSR2 laravel/app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>命令中<code>laravel</code>为项目名称，因为代码都在app目录下，所以直接指定<code>PHP Code Sniffer</code>检查<code>app</code>目录下所有的<code>.php</code>文件。</p></li><li><p><code>--standard=PSR2</code> <code>PHP Code Sniffer</code>预设的coding style为PEAR。</p></li></ul><p>输出类似如下的内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>FILE: /Volumes/codes/Desktop_Temp/201801/laravel/laravel-model-observers/app/Observers/PostObserver.php
-------------------------------------------------------------------------------------------------------
FOUND 9 ERRORS AFFECTING 9 LINES
-------------------------------------------------------------------------------------------------------
  7 | ERROR | [x] Opening brace should be on a new line
 12 | ERROR | [x] Opening brace should be on a new line
 16 | ERROR | [x] Opening brace should be on a new line
 20 | ERROR | [x] Opening brace should be on a new line
 25 | ERROR | [x] Opening brace should be on a new line
 29 | ERROR | [x] Opening brace should be on a new line
 33 | ERROR | [x] Opening brace should be on a new line
 38 | ERROR | [x] Opening brace should be on a new line
 52 | ERROR | [x] Expected 1 newline at end of file; 0 found
-------------------------------------------------------------------------------------------------------
PHPCBF CAN FIX THE 9 MARKED SNIFF VIOLATIONS AUTOMATICALLY
-------------------------------------------------------------------------------------------------------

Time: 104ms; Memory: 6Mb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若没有任何违反<code>PSR-2</code>之处，将没有任何回应，否则将出現类似如上的输出信息，告知用户那个文件有问题，错在哪些地方。其中FOUND为行数。</p><p>至此，phpcs安装完毕。</p><h2 id="php-cs-fixer" tabindex="-1"><a class="header-anchor" href="#php-cs-fixer" aria-hidden="true">#</a> php-cs-fixer</h2>`,13),f={href:"http://cs.sensiolabs.org/",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"php-cs-fixer",-1),_=e("code",null,"PHP Code Sniffer",-1),x=e("p",null,[s("如果只有几个文件，那么手动修改就可以，若文件太多，就得依赖 "),e("code",null,"php-cs-fixer"),s(" 帮助修正。")],-1),P=e("h3",{id:"安裝",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安裝","aria-hidden":"true"},"#"),s(" 安裝")],-1),S={href:"https://github.com/FriendsOfPHP/PHP-CS-Fixer",target:"_blank",rel:"noopener noreferrer"},R=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> global require friendsofphp/php-cs-fixer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="测试-1" tabindex="-1"><a class="header-anchor" href="#测试-1" aria-hidden="true">#</a> 测试</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php-cs-fixer  <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出如下提示</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PHP CS Fixer 2.12.0 Long Journey by Fabien Potencier and Dariusz Ruminski
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="修正psr-2命令行" tabindex="-1"><a class="header-anchor" href="#修正psr-2命令行" aria-hidden="true">#</a> 修正PSR-2命令行</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php-cs-fixer fix laravel/app/ <span class="token parameter variable">--rules</span><span class="token operator">=</span>@PSR2 <span class="token parameter variable">--verbose</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>laravel</code>为项目名称，因为我们写的代码都在<code>app</code>目录下，所以直接指定<code>PHP-CS-Fixer</code>帮我们检查<code>app</code>目录下所有的<code>.php</code>文件。</p></li><li><p><code>--rules=@PSR2</code>指定使用PSR-2标准来修正代码。</p></li><li><p><code>--verbose</code>表示<code>PHP-CS-Fixer</code>在执行时会显示出详细的结果。</p></li></ul><p>输出类似如下的内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SSSSSSSSSSSSSFSSSSSSS
Legend: ?-unknown, I-invalid file syntax, file ignored, S-Skipped, .-no changes, F-fixed, E-error
   1) app/Observers/PostObserver.php (braces, single_blank_line_at_eof)

Fixed all files in 0.015 seconds, 10.000 MB memory used
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>Lengend</code>表示在执行时，所执行过的动作。</p></li><li><p>如上图所示，表示修正过<code>PostObserver.php</code>。</p></li></ul><h2 id="phpstorm" tabindex="-1"><a class="header-anchor" href="#phpstorm" aria-hidden="true">#</a> PhpStorm</h2><p>PhpStorm对于PSR-2有以下支持:</p><ul><li>內建支持PSR-2语法。</li><li>可安装<code>PHP Code Sniffer</code>插件，提醒开发者所写代码是否符合PSR-2。</li><li>可安装<code>PHP Coding Standards Fixer</code>插件，将代码修正为PSR-2。</li></ul><h3 id="内建支持psr-2语法" tabindex="-1"><a class="header-anchor" href="#内建支持psr-2语法" aria-hidden="true">#</a> 内建支持PSR-2语法</h3><p><code>Preferences</code> -&gt; <code>Editor</code> -&gt; <code>Code Style</code> -&gt; <code>PHP : Set from…</code> -&gt; <code>Predefined Style</code> -&gt; <code>PSR1/PSR2</code></p>`,16),C=["src"],y=e("p",null,"PSR-2 所没规定的 Code Style 如下图所示，可能会希望 array 的 key 与 value 能对齐，但这病不是 PSR-2 所规定的style，开发者可以根据需要自行设定。",-1),w=["src"],F=e("h3",{id:"phpcs-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#phpcs-1","aria-hidden":"true"},"#"),s(" phpcs")],-1),O=e("p",null,[e("code",null,"Preferences"),s(" -> "),e("code",null,"Languages & Frameworks"),s(" -> "),e("code",null,"PHP"),s(" -> "),e("code",null,"Code Sniffer")],-1),H=["src"],E=e("p",null,[s("指定 "),e("code",null,"phpcs"),s(" 路徑 : "),e("code",null,"/Users/xiaoluo/.composer/vendor/bin/phpcs"),s("，其中"),e("code",null,"/Users/xiaoluo/"),s("为当前电脑的家目录。")],-1),q=["src"],$=a("<p><code>Preferences</code> -&gt; <code>Editor</code> -&gt; <code>Inspections</code></p><ul><li><p>将<code>PHP Code Sniffer validation</code>选项打勾。</p></li><li><p>将<code>Coding standard</code>选<code>PSR2</code>。</p></li></ul>",2),B=["src"],N=a('<p>至此，phpStorm的phpcs配置完毕。</p><h3 id="php-cs-fixer-1" tabindex="-1"><a class="header-anchor" href="#php-cs-fixer-1" aria-hidden="true">#</a> php-cs-fixer</h3><p><code>Preferences</code> -&gt; <code>Tools</code> -&gt; <code>External Tools</code></p><p>按<code>+</code>新增<strong>External Tools</strong>。</p>',4),A=["src"],I=a(`<p>在模板中添加如下内容：</p><ul><li><p><code>Name</code> : <strong>php-cs-fixer</strong></p></li><li><p><code>Description</code> : <strong>A tool to automatically fix PHP coding.</strong></p></li><li><p><code>Program</code> : <code>/Users/xiaoluo/.composer/vendor/bin/php-cs-fixer</code>，其中<code>/Users/xiaoluo/</code>为当前用户的家目录。</p></li><li><p><code>Parameters</code> : <code>--verbose fix $FileDir$/$FileName$ --config=/Users/xiaoluo/.phpcsfixer</code>，其中<code>/Users/xiaoluo/</code>为当前用户的家目录。</p></li><li><p><code>Working Directory</code> : <strong>$ProjectFileDir$</strong></p></li></ul><p>上述文件中包含一个<code>php-cs-fixer</code>的配置文件，<code>/Users/xiaoluo/.phpcsfixer</code>内容如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$finder</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">PhpCsFixer<span class="token punctuation">\\</span>Finder</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token operator">-&gt;</span><span class="token function">exclude</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tests/&#39;</span><span class="token punctuation">)</span>
          <span class="token operator">-&gt;</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span>

<span class="token keyword">return</span> <span class="token class-name class-name-fully-qualified static-context">PhpCsFixer<span class="token punctuation">\\</span>Config</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setRules</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;@PSR2&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;align_multiline_comment&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;no_trailing_whitespace&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;no_short_echo_tag&#39;</span><span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;array_syntax&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;syntax&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;short&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;no_unused_imports&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;ordered_imports&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sortAlgorithm&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;length&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setFinder</span><span class="token punctuation">(</span><span class="token variable">$finder</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),L=["src"],T=e("h3",{id:"添加快捷键",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#添加快捷键","aria-hidden":"true"},"#"),s(" 添加快捷键")],-1),D=e("p",null,[e("code",null,"Preferences"),s(" -> "),e("code",null,"keymap"),s(" -> 搜索"),e("code",null,"php-cs-fixer"),s(" -> 右键点击"),e("code",null,"Add Keyboard Shortcut")],-1),U=["src"],z=e("h3",{id:"测试-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#测试-2","aria-hidden":"true"},"#"),s(" 测试")],-1),M=e("p",null,"测试phpstorm自带的Reformat Code",-1),V=e("ul",null,[e("li",null,[e("p",null,[e("code",null,"⌃ + ⌥ + L"),s(" : 重新整理Coding Style。")])]),e("li",null,[e("p",null,[e("code",null,"⌃ + ⌥ + ⇧+ L"),s(" : 设定重新整理Coding Style方式。")])])],-1),j=e("p",null,"添加完以后快捷键为：",-1),K=["src"],G=e("h4",{id:"一些简单的格式化设置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一些简单的格式化设置","aria-hidden":"true"},"#"),s(" 一些简单的格式化设置")],-1),J=e("p",null,[s("使用命令"),e("code",null,"Command + Shift + a"),s("后输入：'Show Reformat File Dialog'关键字，后看到下面的配置")],-1),W=["src"],X=e("ul",null,[e("li",null,[e("p",null,[e("code",null,"Optimize imports"),s(" : 没用到的namespace，use会自动移除。")])]),e("li",null,[e("p",null,[e("code",null,"Rearrange code"),s(" : 会自动依据Code Style的Arrangement规格将代码重新排序。")])])],-1);function Y(n,Q){const o=l("ExternalLinkIcon");return r(),p("div",null,[d,u,e("p",null,[e("a",h,[s("PHP Code Sniffer"),i(o)]),s(" 简称 "),g,s(" ，用来检查PHP代码是否符合PSR-2，若完全符合则没有任何结果，若有任何错误将显示错误报告。")]),m,e("p",null,[s("使用Composer命令进行全局安装"),e("a",v,[s("phpcs"),i(o)]),s("。")]),b,e("p",null,[e("a",f,[s("PHP Coding Standards Fixer"),i(o)]),s(" 简称 "),k,s("。虽然"),_,s("可以找出哪些代码不符合PSR-2。")]),x,P,e("p",null,[s("使用Composer命令进行全局安装 "),e("a",S,[s("PHP-CS-Fixer"),i(o)]),s("。")]),R,e("img",{src:n.$withBase("/images/tools/phpstorm/editor-code-style-php-psr-1-and-psr-2.png"),alt:""},null,8,C),y,e("img",{src:n.$withBase("/images/tools/phpstorm/editor-code-style-php-wrapping-and-braces-array-align-key-value-pairs.png"),alt:""},null,8,w),F,O,e("img",{src:n.$withBase("/images/tools/phpstorm/languages-and-frameworks-php-code-sniffer-for-current-project-configuration.png"),alt:""},null,8,H),E,e("img",{src:n.$withBase("/images/tools/phpstorm/languages-and-frameworks-php-code-sniffer-for-current-project-configuration-phpcs-path.png"),alt:""},null,8,q),$,e("img",{src:n.$withBase("/images/tools/phpstorm/editor-inspections-php-code-sniffer-validation-psr2.png"),alt:""},null,8,B),N,e("img",{src:n.$withBase("/images/tools/phpstorm/php-cs-fixer-external-tools.png"),alt:""},null,8,A),I,e("img",{src:n.$withBase("/images/tools/phpstorm/create-php-cs-fixer-tool.png"),alt:""},null,8,L),T,D,e("img",{src:n.$withBase("/images/tools/phpstorm/preferences-keymap-add-keyboard-shortcut.png"),alt:""},null,8,U),z,M,V,j,e("img",{src:n.$withBase("/images/tools/phpstorm/preferences-keymap-add-keyboard-shortcut-shift-control-command-l.png"),alt:""},null,8,K),G,J,e("img",{src:n.$withBase("/images/tools/phpstorm/php-cs-fixer-refomat-file.png"),alt:""},null,8,W),X])}const ee=t(c,[["render",Y],["__file","how-to-use-phpstorm-configures-php-code-sniffer-and-php-cs-fixer-to-support-psr2-specification.html.vue"]]);export{ee as default};
