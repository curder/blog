import{_ as e,p as a,q as n,a1 as s}from"./framework-96b046e1.js";const t={},i=s(`<h1 id="lanmp环境搭建" tabindex="-1"><a class="header-anchor" href="#lanmp环境搭建" aria-hidden="true">#</a> LANMP环境搭建</h1><p>LANMP 环境包含如下服务器软件。</p><table><thead><tr><th style="text-align:center;">缩写</th><th style="text-align:left;">解释</th><th>版本</th></tr></thead><tbody><tr><td style="text-align:center;">L</td><td style="text-align:left;">Linux，这里以Ubuntu12.04系统为例</td><td>12.04</td></tr><tr><td style="text-align:center;">A</td><td style="text-align:left;">Apache WebServer</td><td>2.4.7</td></tr><tr><td style="text-align:center;">N</td><td style="text-align:left;">Nginx WebServer</td><td>1.4.6</td></tr><tr><td style="text-align:center;">M</td><td style="text-align:left;">MySQL Database Server</td><td>5.5.57</td></tr><tr><td style="text-align:center;">P</td><td style="text-align:left;">PHP or php-fpm</td><td>5.5.9</td></tr></tbody></table><h3 id="进入到vagrant虚拟机" tabindex="-1"><a class="header-anchor" href="#进入到vagrant虚拟机" aria-hidden="true">#</a> 进入到vagrant虚拟机</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant shh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更新ubuntu系统的源" tabindex="-1"><a class="header-anchor" href="#更新ubuntu系统的源" aria-hidden="true">#</a> 更新Ubuntu系统的源</h3><p>执行下面的命令对原始源进行备份</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将下面的内容替换<code>/etc/apt/sources.list</code> 文件的源内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完上面的操作后，再执行下面的命令对源进行更新。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>将默认国外的源改成aliyun的源</p></blockquote><h3 id="nginx安装" tabindex="-1"><a class="header-anchor" href="#nginx安装" aria-hidden="true">#</a> Nginx安装</h3><p>使用<code>apt-get</code>命令对nginx服务器进行安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看安装效果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nginx <span class="token parameter variable">-v</span>
<span class="token function">curl</span> <span class="token parameter variable">-I</span> <span class="token string">&#39;http://127.0.0.1&#39;</span>
<span class="token function">wget</span> <span class="token string">&#39;http://127.0.0.1&#39;</span>
telnet <span class="token number">127.0</span>.0.1 <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="apache安装" tabindex="-1"><a class="header-anchor" href="#apache安装" aria-hidden="true">#</a> Apache安装</h3><p>使用<code>apt-get</code>命令对apache服务器进行安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> apache2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看安装效果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>apache2 <span class="token parameter variable">-v</span>
<span class="token function">curl</span> <span class="token parameter variable">-I</span> <span class="token string">&#39;http://127.0.0.1&#39;</span>
<span class="token function">wget</span> <span class="token string">&#39;http://127.0.0.1&#39;</span>
telnet <span class="token number">127.0</span>.0.1 <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>此时我们执行测试时，肯定会抛出错误。因为nginx和apache这两款webserver的默认端口都是80端口。</p></blockquote><ul><li>停掉另一个服务器</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> /etc/init.d/nginx stop
<span class="token function">sudo</span> /etc/init.d/apache2 stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改web服务器端口</li></ul><p>例如修改apache2的端口，配置文件在<code>/etc/apache2/ports.conf</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vi</span> /etc/apache2/ports.conf

Listen <span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将apache的监听端口设置成8888。</p><h3 id="mysql-安装" tabindex="-1"><a class="header-anchor" href="#mysql-安装" aria-hidden="true">#</a> MySQL 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mysql-server mysql-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述命令分别安装了MySQL的服务端和MySQL的客户端。</p><blockquote><p>安装期间会提示输入为MySQL设置root密码，如果是本地开发环境，可以直接 enter 不设置密码。</p></blockquote><p>查看安装效果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进入MySQL的交互界面。</p><h3 id="php安装" tabindex="-1"><a class="header-anchor" href="#php安装" aria-hidden="true">#</a> PHP安装</h3><p>使用下面的命令安装php5.5.9和一些常用的php拓展。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> php5-cli php5-mcrypt php5-mysql php5-gd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="apache2相关设置" tabindex="-1"><a class="header-anchor" href="#apache2相关设置" aria-hidden="true">#</a> Apache2相关设置</h4><ul><li>支持apache2的php模块</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libapache2-mod-php5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>开启rewrite功能</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> a2enmod rewrite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="nginx相关设置" tabindex="-1"><a class="header-anchor" href="#nginx相关设置" aria-hidden="true">#</a> Nginx相关设置</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> php5-cgi php5-fpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装php-fpm，让nginx支持fastcgi。</p><p>修改成9000端口 ，默认sock模式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/php5/fpm/pool.d
<span class="token function">sudo</span> <span class="token function">vim</span> www.conf <span class="token comment"># search listen = 127.0.0.1:9000</span>
<span class="token function">sudo</span> /etc/init.d/php5-fpm restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50),d=[i];function l(r,c){return a(),n("div",null,d)}const p=e(t,[["render",l],["__file","mac-installation-using-vagrant-and-lanmp-environment-to-build.html.vue"]]);export{p as default};
