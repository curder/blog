(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5238],{4707:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-0bdfa734",path:"/os/centos/centos7/centos-7-lnmp-installation-and-configuration.html",title:"CentOS 7 LNMP 安装和配置",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"软件版本",slug:"软件版本",children:[]},{level:2,title:"升级 EPEL 仓库",slug:"升级-epel-仓库",children:[{level:3,title:"升级命令",slug:"升级命令",children:[]},{level:3,title:"检查升级结果",slug:"检查升级结果",children:[]}]},{level:2,title:"安装Nginx",slug:"安装nginx",children:[{level:3,title:"启动Nginx",slug:"启动nginx",children:[]},{level:3,title:"检查Nginx",slug:"检查nginx",children:[]}]},{level:2,title:"安装php-fpm",slug:"安装php-fpm",children:[{level:3,title:"方式一 remi仓库（推荐）",slug:"方式一-remi仓库-推荐",children:[]},{level:3,title:"方式二 webstatic仓库",slug:"方式二-webstatic仓库",children:[]},{level:3,title:"配置php-fpm",slug:"配置php-fpm",children:[]}]},{level:2,title:"检查php-fpm",slug:"检查php-fpm",children:[]},{level:2,title:"安装MySQL",slug:"安装mysql",children:[{level:3,title:"下载并安装MySQL5.7",slug:"下载并安装mysql5-7",children:[]},{level:3,title:"启动MySQL",slug:"启动mysql",children:[]},{level:3,title:"测试MySQL",slug:"测试mysql",children:[]},{level:3,title:"配置MySQL",slug:"配置mysql",children:[]}]},{level:2,title:"安装PHP Composer",slug:"安装php-composer",children:[{level:3,title:"NodeJS && NPM",slug:"nodejs-npm",children:[]},{level:3,title:"Yarn",slug:"yarn",children:[]},{level:3,title:"安装Laravel测试LNMP",slug:"安装laravel测试lnmp",children:[]},{level:3,title:"为 Laravel 配置Nginx配置",slug:"为-laravel-配置nginx配置",children:[]},{level:3,title:"测试并重启Nginx",slug:"测试并重启nginx",children:[]},{level:3,title:"测试Laravel",slug:"测试laravel",children:[]}]},{level:2,title:"参考连接",slug:"参考连接",children:[]}],filePathRelative:"os/centos/centos7/centos-7-lnmp-installation-and-configuration.md",git:{updatedTime:1638951195e3,contributors:[]}}},3589:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>ln});var e=a(6252);const p=(0,e.uE)('<h1 id="centos-7-lnmp-安装和配置" tabindex="-1"><a class="header-anchor" href="#centos-7-lnmp-安装和配置" aria-hidden="true">#</a> CentOS 7 LNMP 安装和配置</h1><h2 id="软件版本" tabindex="-1"><a class="header-anchor" href="#软件版本" aria-hidden="true">#</a> 软件版本</h2><ul><li>CentOS Linux release 7.4.1708 (Core)</li><li>nginx 1.12.2</li><li>MySQL 5.7.22</li><li>php-fpm 7.2.6</li><li>Composer 1.4.2</li><li>laravel 5.6.26</li><li>nodejs v6.14.2 &amp;&amp; npm 3.10.10 &amp;&amp; yarn 1.7.0</li></ul><h2 id="升级-epel-仓库" tabindex="-1"><a class="header-anchor" href="#升级-epel-仓库" aria-hidden="true">#</a> 升级 EPEL 仓库</h2><h3 id="升级命令" tabindex="-1"><a class="header-anchor" href="#升级命令" aria-hidden="true">#</a> 升级命令</h3><p>EPEL (Extra Packages for Enterprise Linux，企业版Linux的额外软件包) 是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。这个源兼容RHEL及像CentOS和Scientific Linux这样的衍生版本。</p>',6),l=(0,e.Uk)("更多详细介绍查看这里："),c={href:"https://fedoraproject.org/wiki/EPEL",title:"EPEL Repository",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("EPEl"),t=(0,e.uE)('<p>我们需要Nginx安装的EPEL仓库，因为官方CentOS仓库中不存在Nginx软件包。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum -y <span class="token function">install</span> epel-release\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>运行完成上面的<code>yum</code>命令安装<code>EPEL</code>仓库。</p><h3 id="检查升级结果" tabindex="-1"><a class="header-anchor" href="#检查升级结果" aria-hidden="true">#</a> 检查升级结果</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum repolist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',5),i=(0,e.uE)('<h2 id="安装nginx" tabindex="-1"><a class="header-anchor" href="#安装nginx" aria-hidden="true">#</a> 安装Nginx</h2><p>使用LNMP环境下运行Laravel。Nginx是其中的Web服务器部分，可以从EPEL仓库安装。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum -y <span class="token function">install</span> nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="启动nginx" tabindex="-1"><a class="header-anchor" href="#启动nginx" aria-hidden="true">#</a> 启动Nginx</h3><p>安装完成后，启动 Nginx 并将其添加到系统自启动。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start nginx\n<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="检查nginx" tabindex="-1"><a class="header-anchor" href="#检查nginx" aria-hidden="true">#</a> 检查Nginx</h3><p>Nginx默认运行在 80 端口，使用下面的<code>netstat</code>命令检查。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">netstat</span> -plntu <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">80</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',9),o=(0,e.uE)('<p>至此<code>Nginx</code>安装完毕。</p><h2 id="安装php-fpm" tabindex="-1"><a class="header-anchor" href="#安装php-fpm" aria-hidden="true">#</a> 安装php-fpm</h2><p>在CentOS基础库中不存在PHP 7.2，我们需要从名为<code>remi</code>或<code>webtatic</code>的第三方仓库中安装它。</p><h3 id="方式一-remi仓库-推荐" tabindex="-1"><a class="header-anchor" href="#方式一-remi仓库-推荐" aria-hidden="true">#</a> 方式一 remi仓库（推荐）</h3><blockquote><p>之所以推荐它是因为它非常方便切换PHP的版本。</p></blockquote>',5),u=(0,e.Uk)("更多仓库相关信息"),d={href:"https://rpms.remirepo.net/",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Uk)("参考这里"),h=(0,e.Uk)("。"),b=(0,e.uE)('<h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rpm</span> --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\n<span class="token function">sudo</span> <span class="token function">rpm</span> -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\n<span class="token function">sudo</span> yum-config-manager --enable remi-php72 <span class="token comment"># 默认remi仓库禁用的，在实际需要的时候启用</span>\n<span class="token function">sudo</span> yum update\n<span class="token comment"># sudo yum search php72 | more</span>\n<span class="token function">sudo</span> yum <span class="token function">install</span> -y php72 php72-php-fpm php72-php-gd php72-php-json php72-php-mbstring php72-php-mysqlnd php72-php-xml php72-php-xmlrpc php72-php-opcache php72-php-pecl-zip\n<span class="token function">sudo</span> <span class="token function">mkdir</span> -p /run/php-fpm/remi-php72 <span class="token comment"># 创建一个sock存放的目录</span>\n<span class="token function">sudo</span> <span class="token function">ln</span> -s  <span class="token variable"><span class="token variable">`</span><span class="token function">which</span> php72<span class="token variable">`</span></span> /usr/local/sbin/php <span class="token comment"># 建立软连接方便命令行使用</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',2),g=(0,e.Uk)("执行完上面的命令后，CentOS系统上已经安装了PHP 7.2, 安装好的"),k=(0,e.Wm)("code",null,"php72",-1),v=(0,e.Uk)("目录在"),f=(0,e.Wm)("code",null,"/etc/opt/remi/php72",-1),x=(0,e.Uk)(", 也可以参考这个"),y={href:"https://www.cyberciti.biz/faq/how-to-install-php-7-2-on-centos-7-rhel-7/",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Uk)("链接"),P=(0,e.Uk)("查看更多操作详情。"),L=(0,e.uE)('<h4 id="卸载" tabindex="-1"><a class="header-anchor" href="#卸载" aria-hidden="true">#</a> 卸载</h4><blockquote><p><code>remi</code>仓库支持PHP的多版本共存，<strong>不到万不得已不建议使用卸载操作</strong></p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum-config-manager --disable remi-php72 <span class="token comment"># 禁用remi-php72仓库</span>\n<span class="token function">sudo</span> systemctl stop php72-php-fpm.service\nyum remove php72 php72-php-fpm php72-php-gd php72-php-json php72-php-mbstring php72-php-mysqlnd php72-php-xml php72-php-xmlrpc php72-php-opcache\n<span class="token function">sudo</span> <span class="token function">rmdir</span> /run/php-fpm/remi-php72\n<span class="token function">sudo</span> <span class="token function">rm</span> -rf /etc/opt/remi/remi-php72 <span class="token comment"># 删除前记得备份配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>至此，使用remi仓库安装的PHP已经成功卸载。</p><h4 id="多版本安装" tabindex="-1"><a class="header-anchor" href="#多版本安装" aria-hidden="true">#</a> 多版本安装</h4><p>再安装一个PHP7.3版本为例，执行下面的操作即可完成PHP7.3版本的安装。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum-config-manager --enable remi-php73\n<span class="token function">sudo</span> yum <span class="token function">install</span> php73 php73-php-fpm php73-php-gd php73-php-json php73-php-mbstring php73-php-mysqlnd php73-php-xml php73-php-xmlrpc php73-php-opcache\n<span class="token function">sudo</span> <span class="token function">mkdir</span> -p /run/php-fpm/remi-php73 <span class="token comment"># 创建一个sock存放的目录</span>\n<span class="token function">sudo</span> <span class="token function">ln</span> -s  <span class="token variable"><span class="token variable">`</span><span class="token function">which</span> php73<span class="token variable">`</span></span> /usr/local/sbin/php <span class="token comment"># 建立软连接方便命令行使用</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="方式二-webstatic仓库" tabindex="-1"><a class="header-anchor" href="#方式二-webstatic仓库" aria-hidden="true">#</a> 方式二 webstatic仓库</h3><h4 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">rpm</span> -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n<span class="token function">sudo</span> yum <span class="token function">install</span> -y php72w php72w-gd php72w-curl php72w-common php72w-cli php72w-mysql php72w-mbstring php72w-fpm php72w-xml php72w-pdo php72w-zip\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',10),W=(0,e.Uk)("其他版本下载可以查看这里："),q={href:"https://webtatic.com/projects/yum-repository/",title:"webtatic repository",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("webtatic仓库"),N=(0,e.Uk)("。"),S=(0,e.uE)('<blockquote><p>如果执行上面的命令一直报错<code>curl: (35) Encountered end of file</code>，可以尝试将上面的<code>https</code>协议改成<code>http</code>协议获取rpm源。</p></blockquote><p>执行完上面的命令后，CentOS系统上已经安装了PHP 7.2, 安装好的php72w目录在<code>/etc/php</code>下。</p><h4 id="卸载-1" tabindex="-1"><a class="header-anchor" href="#卸载-1" aria-hidden="true">#</a> 卸载</h4><blockquote><p><strong>注意：</strong> 如果想更换到php5.6或7.1版本, 直接把上面yum命令里面的关键字<code>php72w</code>换成<code>php56w</code>或者<code>php71w</code>就可以了。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop php-fpm\nyum remove php72w php72w-curl php72w-common php72w-cli php72w-mysql php72w-mbstring php72w-fpm php72w-xml php72w-pdo php72w-zip\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>至此，使用webtatic仓库安装的PHP已经成功卸载。</p><h3 id="配置php-fpm" tabindex="-1"><a class="header-anchor" href="#配置php-fpm" aria-hidden="true">#</a> 配置php-fpm</h3><p>通过使用vim编辑配置文件<code>php.ini</code>来配置PHP，<strong>remi仓库</strong>方式安装的主配置文件存放位置在<code>/etc/opt/remi/php72/php.ini</code>，<strong>webtatic仓库</strong> 方式安装的主配置文件存放位置在<code>/etc/php.ini</code>。</p><ul><li>在文件中找如如下行，取消它的行注释并将值更改为0。</li></ul><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token key attr-name">cgi.fix_pathinfo</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>保存文件并退出编辑器。</p><p>编辑<code>php-fpm</code>文件<code>www.conf</code>，<strong>remi仓库</strong>方式安装的配置文件存放位置在<code>/etc/opt/remi/php72/php-fpm.d/www.conf</code>，<strong>webtatic仓库</strong> 方式安装的配置文件存放位置在<code>/etc/php-fpm.d/www.conf</code>。</p><ul><li><code>php-fpm</code>将在用户和组<code>nginx</code>下运行，将下面两行的值更改为<code>nginx</code>，这里用户和用户组请保持与<code>Nginx</code>的用户和用户组一致。</li></ul><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token comment"># 用户和组保持和Nginx一致，使用命令 egrep &#39;^(user|group)&#39; /etc/nginx/nginx.conf 查看nginx进程的用户</span>\n<span class="token key attr-name">user</span> <span class="token punctuation">=</span> <span class="token value attr-value">nginx</span>\n<span class="token key attr-name">group</span> <span class="token punctuation">=</span> <span class="token value attr-value">nginx</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><code>php-fpm</code>将在套接字文件下运行，而不是使用服务器端口，<strong>remi仓库</strong>方式安装的PHP可以将值改为<code>/run/php-fpm/remi-php72/php-fpm.sock</code>，<strong>webtatic仓库</strong> 方式安装的PHP请将&#39;listen&#39;值更改为路径<code>/run/php-fpm/php-fpm.sock</code>。</li></ul><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token comment"># remi</span>\n<span class="token key attr-name">listen</span> <span class="token punctuation">=</span> <span class="token value attr-value">/run/php-fpm/remi-php72/php-fpm.sock</span>\n\n<span class="token comment"># webtatic</span>\n<span class="token key attr-name">listen</span> <span class="token punctuation">=</span> <span class="token value attr-value">/run/php-fpm/php-fpm.sock</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>套接字文件所有者将是“nginx”用户，权限模式为660，取消注释并更改所有值。</li></ul><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token key attr-name">listen.owner</span> <span class="token punctuation">=</span> <span class="token value attr-value">nginx</span>\n<span class="token key attr-name">listen.group</span> <span class="token punctuation">=</span> <span class="token value attr-value">nginx</span>\n<span class="token key attr-name">listen.mode</span> <span class="token punctuation">=</span> <span class="token value attr-value">0660</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>对于环境变量，取消注释这些行并设置值。</li></ul><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token key attr-name">env[HOSTNAME]</span> <span class="token punctuation">=</span> <span class="token value attr-value">$HOSTNAME</span>\n<span class="token key attr-name">env[PATH]</span> <span class="token punctuation">=</span> <span class="token value attr-value">/usr/local/bin:/usr/bin:/bin</span>\n<span class="token key attr-name">env[TMP]</span> <span class="token punctuation">=</span> <span class="token value attr-value">/tmp</span>\n<span class="token key attr-name">env[TMPDIR]</span> <span class="token punctuation">=</span> <span class="token value attr-value">/tmp</span>\n<span class="token key attr-name">env[TEMP]</span> <span class="token punctuation">=</span> <span class="token value attr-value">/tmp</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>保存文件并退出vim编辑，然后启动<code>php-fpm</code>并使其在启动时运行。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># remi</span>\n<span class="token function">sudo</span> systemctl start php72-php-fpm.service\n<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> php72-php-fpm.service\n\n<span class="token comment"># webtatic</span>\n<span class="token function">sudo</span> systemctl start php-fpm\n<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> php-fpm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>使用<code>remi</code>仓库的时候启动的时候可能会报错，由于<code>php-fpm.sock</code>文件目录不存在，执行命令：<code>sudo mkdir -p /run/php-fpm/remi-php72</code>后在启动就没有问题了。</p></blockquote><h2 id="检查php-fpm" tabindex="-1"><a class="header-anchor" href="#检查php-fpm" aria-hidden="true">#</a> 检查php-fpm</h2><p><code>php-fpm</code>在套接字文件下运行，使用以下命令检查。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">netstat</span> -pl <span class="token operator">|</span> <span class="token function">grep</span> php-fpm.sock\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',26),M=(0,e.Wm)("h2",{id:"安装mysql",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#安装mysql","aria-hidden":"true"},"#"),(0,e.Uk)(" 安装MySQL")],-1),U=(0,e.Uk)("可以使用MariaDB或PostgreSQL作为Laravel项目的数据库存储。 这里使用MySQL数据库服务器进行安装。 它在CentOS存储库中可用， 使用下面的"),H=(0,e.Wm)("code",null,"yum",-1),_=(0,e.Uk)(" 命令"),C={href:"https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/",title:"mysql server install",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("安装MySQL-server"),O=(0,e.Uk)("。"),Q=(0,e.uE)('<h3 id="下载并安装mysql5-7" tabindex="-1"><a class="header-anchor" href="#下载并安装mysql5-7" aria-hidden="true">#</a> 下载并安装MySQL5.7</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">wget</span> https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n<span class="token function">rpm</span> -ivh mysql57-community-release-el7-11.noarch.rpm\n<span class="token function">sudo</span> yum update\n<span class="token function">sudo</span> yum <span class="token function">install</span> -y mysql-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>执行上面的命令进行MySQL的安装，在安装的过程中两次按<code>Y</code>键，在同意后安装完成。</p></blockquote><h3 id="启动mysql" tabindex="-1"><a class="header-anchor" href="#启动mysql" aria-hidden="true">#</a> 启动MySQL</h3><p>使用下面的命令启动<code>mysql</code>并使其随系统启动而启动。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start mysqld\n<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> mysqld\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="测试mysql" tabindex="-1"><a class="header-anchor" href="#测试mysql" aria-hidden="true">#</a> 测试MySQL</h3><p>MySQL已经启动并在3306端口上运行，可以使用netstat命令检查。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">netstat</span> -plntu <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">3306</span> <span class="token comment"># 检查端口</span>\n<span class="token function">ps</span> aux<span class="token operator">|</span><span class="token function">grep</span> mysqld <span class="token comment"># 检查进程</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="配置mysql" tabindex="-1"><a class="header-anchor" href="#配置mysql" aria-hidden="true">#</a> 配置MySQL</h3><h4 id="获取安装时初始化密码" tabindex="-1"><a class="header-anchor" href="#获取安装时初始化密码" aria-hidden="true">#</a> 获取安装时初始化密码</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">grep</span> <span class="token string">&#39;temporary password&#39;</span> /var/log/mysqld.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="登录并重设root账户密码" tabindex="-1"><a class="header-anchor" href="#登录并重设root账户密码" aria-hidden="true">#</a> 登录并重设root账户密码</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysql -uroot -p <span class="token comment"># 回车输入上面获取到的密码</span>\n\nALTER <span class="token environment constant">USER</span> <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> IDENTIFIED BY <span class="token string">&#39;MyNewPassword1!&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="创建一个测试数据库和测试用户" tabindex="-1"><a class="header-anchor" href="#创建一个测试数据库和测试用户" aria-hidden="true">#</a> 创建一个测试数据库和测试用户</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>CREATE DATABASE laravel; -- 创建一个laravel数据库\nGRANT ALL PRIVILEGES ON laravel.* TO laravel@localhost IDENTIFIED BY &quot;LaravelPassword1!&quot;; -- 创建一个对应的用户\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>至此，MySQL的安装和配置已经完成。</p><h2 id="安装php-composer" tabindex="-1"><a class="header-anchor" href="#安装php-composer" aria-hidden="true">#</a> 安装PHP Composer</h2><p>PHP composer是PHP语言的包管理器。 它创建于2011年，灵感来自于Node.js的“npm”和Ruby的“bundler”安装程序。 使用<code>curl</code>命令安装composer。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php -r <span class="token string">&quot;copy(&#39;https://install.phpcomposer.com/installer&#39;, &#39;composer-setup.php&#39;);&quot;</span>\nphp composer-setup.php\nphp -r <span class="token string">&quot;unlink(&#39;composer-setup.php&#39;);&quot;</span>\n<span class="token function">sudo</span> <span class="token function">mv</span> composer.phar /usr/local/bin/composer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>配置Packagist国内镜像</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> config -g repo.packagist <span class="token function">composer</span> https://packagist.phpcomposer.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>安装完成后，尝试使用“composer”命令，您将看到以下结果。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span>\n<span class="token function">composer</span> config -g repo.packagist -l <span class="token comment"># 查看配置的Packagist国内镜像</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',24),R=(0,e.uE)('<p>至此，PHP Composer已经正常安装在了CentOS系统上。</p><h3 id="nodejs-npm" tabindex="-1"><a class="header-anchor" href="#nodejs-npm" aria-hidden="true">#</a> NodeJS &amp;&amp; NPM</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum -y <span class="token function">install</span> nodejs <span class="token function">npm</span> --enablerepo<span class="token operator">=</span>epel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="yarn" tabindex="-1"><a class="header-anchor" href="#yarn" aria-hidden="true">#</a> Yarn</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> --silent --location https://dl.yarnpkg.com/rpm/yarn.repo <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/yum.repos.d/yarn.repo\n<span class="token function">sudo</span> yum <span class="token function">install</span> -y <span class="token function">yarn</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="安装laravel测试lnmp" tabindex="-1"><a class="header-anchor" href="#安装laravel测试lnmp" aria-hidden="true">#</a> 安装Laravel测试LNMP</h3><p>现在进入到 laravel 的根目录&#39;/var/www/laravel&#39;。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /var/www/laravel <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> /var/www/laravel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',8),T=(0,e.Uk)("Laravel提供了两种在服务器上"),$={href:"https://laravel.com/docs/5.4/installation",title:"laravel install document",target:"_blank",rel:"noopener noreferrer"},I=(0,e.Uk)("安装框架"),A=(0,e.Uk)(" 的方法。可以用Laravel安装程序安装Laravel，也可以用PHP composer安装它。在这里我将通过使用composer命令创建一个新项目来安装Laravel，运行下面的命令来安装Laravel。"),B=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> create-project laravel/laravel <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>等待Laravel安装完成。 这可能需要一些时间。</p>',2),D=(0,e.uE)('<p>安装完成后，将Laravel Web根目录的所有者更改为“nginx”用户，并使用以下命令将存储目录的权限更改为755。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">chown</span> -R nginx:root /var/www/laravel\n<span class="token function">chmod</span> <span class="token number">755</span> -R /var/www/laravel/storage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>至此，Laravel安装已经完成。</p><h3 id="为-laravel-配置nginx配置" tabindex="-1"><a class="header-anchor" href="#为-laravel-配置nginx配置" aria-hidden="true">#</a> 为 Laravel 配置Nginx配置</h3><p>在这个步骤中，将为 Laravel 项目创建 Nginx 虚拟主机配置。 我们需要为此 Laravel 定义web根目录<code>/var/www/laravel/public</code>。</p><p>接下来，<code>cd</code>到 Nginx 目录，并在<code>conf.d</code>目录中创建一个新的虚拟主机配置文件<code>laravel.conf</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/nginx\n<span class="token function">vim</span> conf.d/laravel.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将下面的配置粘贴到文件中：</p><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>\n\n    <span class="token comment"># Log files for Debugging</span>\n    <span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/laravel-access.log</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">error_log</span> /var/log/nginx/laravel-error.log</span><span class="token punctuation">;</span>\n\n    <span class="token comment"># Webroot Directory for Laravel project</span>\n    <span class="token directive"><span class="token keyword">root</span> /var/www/laravel/public</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">index</span> index.php index.html index.htm</span><span class="token punctuation">;</span>\n\n    <span class="token comment"># Your Domain Name</span>\n    <span class="token directive"><span class="token keyword">server_name</span> laravel.domain.io</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.php?<span class="token variable">$query_string</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># PHP-FPM Configuration Nginx</span>\n    <span class="token directive"><span class="token keyword">location</span> ~ \\.php$</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">try_files</span> <span class="token variable">$uri</span> =404</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">fastcgi_split_path_info</span> ^(.+\\.php)(/.+)$</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">fastcgi_pass</span> unix:/run/php-fpm/php-fpm.sock</span><span class="token punctuation">;</span> <span class="token comment"># webtatic</span>\n        <span class="token comment"># fastcgi_pass unix:/run/php-fpm/remi-php72/php-fpm.sock; # remi</span>\n        <span class="token directive"><span class="token keyword">fastcgi_index</span> index.php</span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">fastcgi_param</span> SCRIPT_FILENAME <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">include</span> fastcgi_params</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token directive"><span class="token keyword">location</span> ~ /\\.ht</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">deny</span> all</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>保存文件并退出vim编辑器。</p><h3 id="测试并重启nginx" tabindex="-1"><a class="header-anchor" href="#测试并重启nginx" aria-hidden="true">#</a> 测试并重启Nginx</h3><p>测试nginx配置，确保没有错误，然后重新启动nginx服务。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nginx -t <span class="token comment"># 测试配置是否正确</span>\n<span class="token function">sudo</span> systemctl restart nginx <span class="token comment"># 重启Nginx</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',13),Y=(0,e.Wm)("p",null,"至此，Laravel的nginx虚拟主机配置已经完成。",-1),z=(0,e.Wm)("h3",{id:"测试laravel",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#测试laravel","aria-hidden":"true"},"#"),(0,e.Uk)(" 测试Laravel")],-1),F=(0,e.Wm)("p",null,[(0,e.Uk)("打开浏览器并输入服务器配置的Laravel URL，在Nginx虚拟主机文件中定义了Laravel的域名。 我的是"),(0,e.Wm)("code",null,"laravel.domain.io"),(0,e.Uk)("。")],-1),G=(0,e.Wm)("p",null,"访问域名时，您将看到Laravel框架的首页。",-1),J=(0,e.Wm)("p",null,"CentOS 7上的Nginx、PHP-FPM、MySQL、Composer、NodeJS、Yarn和Laravel安装已经成功。",-1),K=(0,e.Wm)("h2",{id:"参考连接",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#参考连接","aria-hidden":"true"},"#"),(0,e.Uk)(" 参考连接")],-1),V={href:"https://www.tecmint.com/install-php-7-in-centos-7/",target:"_blank",rel:"noopener noreferrer"},X=(0,e.Uk)("How to Install PHP 7 in CentOS 7"),Z={href:"https://linuxize.com/post/install-php-7-on-centos-7/",target:"_blank",rel:"noopener noreferrer"},nn=(0,e.Uk)("Install PHP 7 on CentOS 7"),sn={href:"https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-a-centos-7-server",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Uk)("How To Install Node.js on a CentOS 7 server"),en={href:"https://www.jianshu.com/p/7d3f3fa056e8",target:"_blank",rel:"noopener noreferrer"},pn=(0,e.Uk)("Centos7 安装Nodejs"),ln={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("p",null,[l,(0,e.Wm)("a",c,[r,(0,e.Wm)(a)])]),t,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/yum-epel-repository-list.jpg"),alt:""},null,8,["src"]),i,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/nginx-status-check.jpg"),alt:""},null,8,["src"]),o,(0,e.Wm)("p",null,[u,(0,e.Wm)("a",d,[m,(0,e.Wm)(a)]),h]),b,(0,e.Wm)("p",null,[g,k,v,f,x,(0,e.Wm)("a",y,[w,(0,e.Wm)(a)]),P]),L,(0,e.Wm)("p",null,[W,(0,e.Wm)("a",q,[E,(0,e.Wm)(a)]),N]),S,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/php-fpm-status-check.jpg"),alt:""},null,8,["src"]),M,(0,e.Wm)("p",null,[U,H,_,(0,e.Wm)("a",C,[j,(0,e.Wm)(a)]),O]),Q,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/composer-install.jpg"),alt:""},null,8,["src"]),R,(0,e.Wm)("p",null,[T,(0,e.Wm)("a",$,[I,(0,e.Wm)(a)]),A]),B,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/laravel-install.jpg"),alt:""},null,8,["src"]),D,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/restart-nginx.jpg"),alt:""},null,8,["src"]),Y,z,F,G,(0,e.Wm)("img",{src:n.$withBase("/images/os/centos7/centos-7-lnmp-installation-and-configuration/laravel-install-preview.jpg"),alt:""},null,8,["src"]),J,K,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",V,[X,(0,e.Wm)(a)])])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",Z,[nn,(0,e.Wm)(a)])])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",sn,[an,(0,e.Wm)(a)])])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",en,[pn,(0,e.Wm)(a)])])])])],64)}}}}]);