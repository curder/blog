(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6320],{9356:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-7c8a0e7c",path:"/languages/laravel/testing/simple-tdd-in-laravel-with-11-steps.html",title:"Laravel中针对API的TDD步骤",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"准备Laravel测试环境",slug:"准备laravel测试环境",children:[{level:3,title:"修改测试配置",slug:"修改测试配置",children:[]},{level:3,title:"修改测试基类",slug:"修改测试基类",children:[]}]},{level:2,title:"编写测试用例",slug:"编写测试用例",children:[{level:3,title:"在路由文件中创建请求的URL",slug:"在路由文件中创建请求的url",children:[]},{level:3,title:"编写控制器逻辑",slug:"编写控制器逻辑",children:[]}]},{level:2,title:"创建模型",slug:"创建模型",children:[]},{level:2,title:"生成迁移文件",slug:"生成迁移文件",children:[]},{level:2,title:"参考链接",slug:"参考链接",children:[]}],filePathRelative:"languages/laravel/testing/simple-tdd-in-laravel-with-11-steps.md",git:{updatedTime:1639719222e3,contributors:[]}}},6932:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>q});var t=a(6252);const p=(0,t.uE)('<h1 id="laravel中针对api的tdd步骤" tabindex="-1"><a class="header-anchor" href="#laravel中针对api的tdd步骤" aria-hidden="true">#</a> Laravel中针对API的TDD步骤</h1><p>测试驱动开发（英文：Test-driven development，缩写：TDD）是一种软件开发过程中的应用方法，由极限编程中倡导，以其倡导先写测试程序，然后编码实现其功能得名。</p><ul><li>Laravel <code>5.6.28</code></li><li>PHPUnit <code>7.2.7</code></li></ul><h2 id="准备laravel测试环境" tabindex="-1"><a class="header-anchor" href="#准备laravel测试环境" aria-hidden="true">#</a> 准备Laravel测试环境</h2><h3 id="修改测试配置" tabindex="-1"><a class="header-anchor" href="#修改测试配置" aria-hidden="true">#</a> 修改测试配置</h3><p>在项目根目录中，更新<code>phpunit.xml</code>文件的如下配置:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_CONNECTION<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlite<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_DATABASE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>:memory:<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>API_DEBUG<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ini</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>memory_limit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>512M<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>更新完后<code>phpunit.xml</code>文件内容如下:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phpunit</span> <span class="token attr-name">backupGlobals</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">backupStaticAttributes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">bootstrap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vendor/autoload.php<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">colors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">convertErrorsToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">convertNoticesToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">convertWarningsToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">processIsolation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">stopOnFailure</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuites</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Feature<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Test.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>./tests/Feature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Unit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Test.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>./tests/Unit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuites</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>whitelist</span> <span class="token attr-name">processUncoveredFilesFromWhitelist</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>./app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>whitelist</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>php</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>APP_ENV<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testing<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CACHE_DRIVER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>array<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SESSION_DRIVER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>array<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>QUEUE_DRIVER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sync<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_CONNECTION<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlite<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_DATABASE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>:memory:<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>API_DEBUG<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MAIL_DRIVER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>log<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ini</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>memory_limit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>512M<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>php</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phpunit</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>只需要在内存中进行测试，这样测试运行的速度会快些，所以在<code>database</code>配置项目中我们将使用<code>sqlite</code>和<code>:memory:</code> (Sqlite的内存数据库)。 将<code>APP_DEBUG</code>设置为<code>false</code> ，因为只需要对真实产生的错误进行断言。 另外，随着项目迭代测试用例会越来越多，在将来可能会需要增加<code>memory_limit</code>的值。</p><h3 id="修改测试基类" tabindex="-1"><a class="header-anchor" href="#修改测试基类" aria-hidden="true">#</a> 修改测试基类</h3><p>在 Laravel 里测试用例的基类<code>Tests\\TestCase</code>中作一些测试相关的准备</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">Tests</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Faker<span class="token punctuation">\\</span>Factory</span> <span class="token keyword">as</span> Faker<span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Testing<span class="token punctuation">\\</span>DatabaseMigrations</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Testing<span class="token punctuation">\\</span>DatabaseTransactions</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Testing<span class="token punctuation">\\</span>TestCase</span> <span class="token keyword">as</span> BaseTestCase<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * Class TestCase\n *\n * <span class="token keyword">@package</span> <span class="token class-name">Tests</span>\n */</span>\n<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">TestCase</span> <span class="token keyword">extends</span> <span class="token class-name">BaseTestCase</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">use</span> <span class="token package">CreatesApplication</span><span class="token punctuation">,</span> DatabaseMigrations<span class="token punctuation">,</span> DatabaseTransactions<span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * <span class="token keyword">@var</span> <span class="token class-name"><span class="token punctuation">\\</span>Faker<span class="token punctuation">\\</span>Factory</span>\n     */</span>\n    <span class="token keyword">protected</span> <span class="token variable">$faker</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * Set up the test\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">faker</span> <span class="token operator">=</span> <span class="token class-name static-context">Faker</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * Reset the migrations\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">tearDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">artisan</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;migrate:reset&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">tearDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="编写测试用例" tabindex="-1"><a class="header-anchor" href="#编写测试用例" aria-hidden="true">#</a> 编写测试用例</h2><p>在终端使用命令<code>php artisan make:test Api/ArticleTest --unit</code>，生成的文件在<code>tests/Unit/Api/ArticleTest</code>，修改内容如下：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">Tests<span class="token punctuation">\\</span>Unit<span class="token punctuation">\\</span>Api</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Tests<span class="token punctuation">\\</span>TestCase</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * Class ArticleTest\n *\n * <span class="token keyword">@package</span> <span class="token class-name">Tests<span class="token punctuation">\\</span>Unit<span class="token punctuation">\\</span>Api</span>\n */</span>\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">ArticleTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span>\n<span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 创建文章\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">testCanCreateAnArticle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">faker</span><span class="token operator">-&gt;</span><span class="token property">sentence</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;content&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">faker</span><span class="token operator">-&gt;</span><span class="token property">paragraph</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api.articles.store&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span>\n             <span class="token operator">-&gt;</span><span class="token function">assertStatus</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">)</span>\n             <span class="token operator">-&gt;</span><span class="token function">assertJson</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><blockquote><p>为了让<code>phpunit</code>识别测试，需要在测试方法上添加<code>/** @test */</code>注释标识或者是测试方法命名以<code>test</code>前缀开头，这里选择后者。</p></blockquote><p>上面编写的测试中，测试是否能创建一篇文章，并且断言了在创建文章成功后应用将返回<code>201</code>状态码还有预期的<code>JSON</code>数据。</p><p>在创建好我们的第一个测试后，执行<code>phpunit</code>或者<code>vendor/bin/phpunit</code></p>',19),e=(0,t.uE)('<p>在终端执行<code>vendor/bin/phpunit</code>后测试结果显示失败了，因为在测试驱动开发中是先写测试程序，然后在编码实现功能的。</p><p>所以在创建测试程序开始测试程序执行后的结果就是测试失败(测试驱动开发的第二条原则)。</p><h3 id="在路由文件中创建请求的url" tabindex="-1"><a class="header-anchor" href="#在路由文件中创建请求的url" aria-hidden="true">#</a> 在路由文件中创建请求的URL</h3><p>在你项目中的<code>routes/api.php</code>文件中创建这个URL，在api中定义的路由其URL会自动加上<code>/api</code>前缀，如下定义一个资源路由。另外也可以通过在命令行运行<code>php artisan route:list</code>查看具体的路由详情。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;prefix&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;v1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;namespace&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Api&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;as&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;api.&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;articles&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;ArticleController&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',5),l=(0,t.uE)("<p>在测试中断言响应会返回<code>201</code>状态码但是却返回了<code>500</code>，是因为请求的路由指向的处理控制器文件不存在。这个<code>api/v1/articles</code> <strong>POST</strong> 路由在应用中并不存在所以针对这个请求应用抛出了<code>500</code>错误。</p><p>可以进一步调试 <strong>POST</strong> 请求后的输出，如果没有明确地给出提示发生了什么才导致的这个错误，可以打开Laravel应用的日志文件<code>/storage/logs/laravel.log</code>里查找详细的错误信息。</p>",2),o=(0,t.uE)('<p>从上图可以看出<code>App\\Http\\Controllers\\Api\\ArticleController</code>控制器不存在。</p><h3 id="编写控制器逻辑" tabindex="-1"><a class="header-anchor" href="#编写控制器逻辑" aria-hidden="true">#</a> 编写控制器逻辑</h3><p>在终端使用命令<code>php artisan make:controller Api/ArticleController</code>，生成的文件在<code>app/Http/Controllers/Api/ArticleController</code>，修改内容如下</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>Api</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">ArticleController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name static-context">Article</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>再次执行<code>vendor/bin/phpunit</code>运行测试，发生如下错误：</p>',5),c=(0,t.Wm)("p",null,[(0,t.Uk)("打开"),(0,t.Wm)("code",null,"storage/logs/laravel.log"),(0,t.Uk)("查看错误，发现是模型找不到：")],-1),u=(0,t.uE)('<h2 id="创建模型" tabindex="-1"><a class="header-anchor" href="#创建模型" aria-hidden="true">#</a> 创建模型</h2><p>使用如下命令生成<code>Article</code>模型，模型文件默认在<code>app\\Article</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:model Article\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>创建好模型后，修改控制器<code>store</code>方法中对模型的引用：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>Api</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Article</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">ArticleController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name static-context">Article</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>修改完成后，再次执行测试：</p>',6),i=(0,t.uE)('<p>上面的命令报错是因为没有设置模型的<code>fillable</code>属性，修改如下：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n<span class="token keyword">namespace</span> <span class="token package">App</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">Article</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>修改完毕后，再次执行测试：</p>',3),r=(0,t.uE)('<p>如上报错，说明数据库表不存在，需要执行迁移文件生成对应的数据表</p><h2 id="生成迁移文件" tabindex="-1"><a class="header-anchor" href="#生成迁移文件" aria-hidden="true">#</a> 生成迁移文件</h2><p>使用下面的命令生成迁移文件：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:migration create_articles_table --create<span class="token operator">=</span>articles\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>生成的文件目录在<code>databases/migrations</code>下，可以打开对应的文件修改内容如下：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Schema</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Schema<span class="token punctuation">\\</span>Blueprint</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Migrations<span class="token punctuation">\\</span>Migration</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">CreateArticlesTable</span> <span class="token keyword">extends</span> <span class="token class-name">Migration</span>\n<span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * Run the migrations.\n     *\n     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;articles&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">increments</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * Reverse the migrations.\n     *\n     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">dropIfExists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;articles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>当定义好迁移文件后再次执行<code>vendor/bin/phpunit</code>，发现成功了。</p>',7),k=(0,t.Wm)("p",null,"通过文章总结起来测试驱动开发有三条原则：",-1),b=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"倡导先写测试程序，再编码实现功能")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"测试程序创建起肯定会测试失败")]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,"在让测试程序测试成功的过程中逐步编码实现功能")])],-1),m=(0,t.Wm)("h2",{id:"参考链接",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#参考链接","aria-hidden":"true"},"#"),(0,t.Uk)(" 参考链接")],-1),d={href:"https://medium.com/@jsdecena/simple-tdd-in-laravel-with-11-steps-c475f8b1b214",target:"_blank",rel:"noopener noreferrer"},g=(0,t.Uk)("英文原文：Simple TDD in Laravel with 11 steps"),v={href:"https://segmentfault.com/a/1190000015653724",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("中文翻译：简单的11步在Laravel中实现测试驱动开发"),q={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-route-not-defined-error.png"),alt:""},null,8,["src"]),e,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-response-error-code.png"),alt:""},null,8,["src"]),l,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-controller-does-not-exists.png"),alt:""},null,8,["src"]),o,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-response-201-error-code.png"),alt:""},null,8,["src"]),c,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-model-does-not-exists.png"),alt:""},null,8,["src"]),u,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-model-fillable.png"),alt:""},null,8,["src"]),i,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-table-does-not-exists.png"),alt:""},null,8,["src"]),r,(0,t.Wm)("img",{src:n.$withBase("/images/languages/laravel/testing/laravel-tdd-success.png"),alt:""},null,8,["src"]),k,b,m,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",d,[g,(0,t.Wm)(a)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",v,[h,(0,t.Wm)(a)])])])],64)}}}}]);