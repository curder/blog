(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1548],{7107:(s,e,n)=>{"use strict";n.r(e),n.d(e,{data:()=>a});const a={key:"v-7286af71",path:"/os/centos/centos7/centos-7-server-initialization.html",title:"Centos 7 服务器初始化",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"登录服务器",slug:"登录服务器",children:[]},{level:2,title:"更新 aliyun 的 yum 源",slug:"更新-aliyun-的-yum-源",children:[]},{level:2,title:"添加必要系统工具",slug:"添加必要系统工具",children:[]},{level:2,title:"修改时区&&设置时间",slug:"修改时区-设置时间",children:[]},{level:2,title:"修改系统字符集",slug:"修改系统字符集",children:[]},{level:2,title:"内核优化sysctl.conf && 调整文件描述符ulimit",slug:"内核优化sysctl-conf-调整文件描述符ulimit",children:[]},{level:2,title:"关闭selinux",slug:"关闭selinux",children:[]},{level:2,title:"创建一个新用户",slug:"创建一个新用户",children:[]},{level:2,title:"添加用户权限",slug:"添加用户权限",children:[]},{level:2,title:"添加公钥认证（推荐）",slug:"添加公钥认证-推荐",children:[{level:3,title:"生成密钥对",slug:"生成密钥对",children:[]},{level:3,title:"复制公钥",slug:"复制公钥",children:[]}]},{level:2,title:"配置SSH守护进程",slug:"配置ssh守护进程",children:[{level:3,title:"禁止root用户登录",slug:"禁止root用户登录",children:[]},{level:3,title:"重新加载SSH",slug:"重新加载ssh",children:[]},{level:3,title:"测试",slug:"测试",children:[]}]},{level:2,title:"参考链接",slug:"参考链接",children:[]}],filePathRelative:"os/centos/centos7/centos-7-server-initialization.md",git:{updatedTime:1639719222e3,contributors:[]}}},9741:(s,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>g});var a=n(6252);const l=(0,a.uE)('<h1 id="centos-7-服务器初始化" tabindex="-1"><a class="header-anchor" href="#centos-7-服务器初始化" aria-hidden="true">#</a> Centos 7 服务器初始化</h1><p>当初次创建新服务器时，应该尽早完成一些配置步骤，作为基本设置的一部分，这将增加服务器的安全性和可用性，并为后续操作奠定坚实的基础。</p><h2 id="登录服务器" tabindex="-1"><a class="header-anchor" href="#登录服务器" aria-hidden="true">#</a> 登录服务器</h2><p>root用户是拥有非常广泛特权的Linux环境中的管理用户。由于root帐户的权限较高，因此实际上不建议长期使用它。这是因为根账户固有的部分权力是能够做出非常具有破坏性的变更，即使是意外情况导致。</p><p>要登录到您的服务器，需要知道服务器的<strong>公共IP地址</strong>和<strong>root</strong>用户帐户的密码。并通过下面的命令登录到服务器</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ssh</span> root@SERVER_IP_ADDRESS\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>然后提供根认证（密码或私钥），完成登录过程。</p><h2 id="更新-aliyun-的-yum-源" tabindex="-1"><a class="header-anchor" href="#更新-aliyun-的-yum-源" aria-hidden="true">#</a> 更新 aliyun 的 yum 源</h2><p>如果服务器在国内建议修改yum源为aliyun，如果服务器在国外可以忽略。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n<span class="token function">sudo</span> <span class="token function">curl</span> -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n<span class="token function">sudo</span> yum makecache\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',10),o=(0,a.Uk)("相关操作和更多其他操作系统镜像操作"),r={href:"https://opsx.alibaba.com/mirror",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("查看这里"),t=(0,a.Uk)("。"),i=(0,a.uE)('<h2 id="添加必要系统工具" tabindex="-1"><a class="header-anchor" href="#添加必要系统工具" aria-hidden="true">#</a> 添加必要系统工具</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> -y yum-utils net-tools net-snmp <span class="token function">wget</span> iftop <span class="token function">htop</span> telnet tree <span class="token function">git</span> <span class="token function">vim</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">curl</span> ntpdate\n<span class="token function">sudo</span> <span class="token function">rpm</span> -qa <span class="token operator">|</span><span class="token function">grep</span> -E <span class="token string">&quot;snmp|wget|iftop|htop|git|telnet|vim|zip|unzip|curl|ntpdate|release&quot;</span> <span class="token comment"># 检查安装情况</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="修改时区-设置时间" tabindex="-1"><a class="header-anchor" href="#修改时区-设置时间" aria-hidden="true">#</a> 修改时区&amp;&amp;设置时间</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> timedatectl set-timezone Asia/Shanghai\n<span class="token function">sudo</span> ntpdate cn.pool.ntp.org\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>执行下面的命令之前，需要将当前操作时的用户切换为root用户，否则将提示没有权限。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;00 */10 * * * ntpdate cn.pool.ntp.org &gt;/dev/null 2&gt;&amp;1&quot;</span> <span class="token operator">&gt;&gt;</span> /var/spool/cron/root\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="修改系统字符集" tabindex="-1"><a class="header-anchor" href="#修改系统字符集" aria-hidden="true">#</a> 修改系统字符集</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>yum reinstall -y kde-l10n-Chinese <span class="token operator">&amp;&amp;</span> glibc-common\n\n<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>zh_CN.UTF-8 <span class="token comment"># 临时修改字符集</span>\n<span class="token function">sed</span> -i <span class="token string">&#39;s/en_US.UTF-8/zh_CN.UTF-8/g&#39;</span> /etc/locale.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="内核优化sysctl-conf-调整文件描述符ulimit" tabindex="-1"><a class="header-anchor" href="#内核优化sysctl-conf-调整文件描述符ulimit" aria-hidden="true">#</a> 内核优化<code>sysctl.conf</code> &amp;&amp; 调整文件描述符<code>ulimit</code></h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;net.ipv4.ip_local_port_range = 1024 65535\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\nnet.ipv4.tcp_rmem = 4096 87380 16777216\nnet.ipv4.tcp_wmem = 4096 65536 16777216\nnet.ipv4.tcp_fin_timeout = 10\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_window_scaling = 0\nnet.ipv4.tcp_sack = 0\nnet.core.netdev_max_backlog = 65535\nnet.ipv4.tcp_no_metrics_save = 1\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_syncookies = 0\nnet.ipv4.tcp_max_orphans = 262144\nnet.ipv4.tcp_max_syn_backlog = 262144\nnet.ipv4.tcp_synack_retries = 2\nnet.ipv4.tcp_syn_retries = 2&quot;</span> <span class="token operator">&gt;</span>/etc/sysctl.conf\n\nsysctl -w net.ipv4.route.flush<span class="token operator">=</span><span class="token number">1</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;ulimit -HSn 65536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/rc.local\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;ulimit -HSn 65536&quot;</span> <span class="token operator">&gt;&gt;</span> /root/.bash_profile\n<span class="token builtin class-name">ulimit</span> -HSn <span class="token number">65535</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="关闭selinux" tabindex="-1"><a class="header-anchor" href="#关闭selinux" aria-hidden="true">#</a> 关闭selinux</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>setenforce <span class="token number">0</span>\n<span class="token function">cp</span> /etc/sysconfig/selinux /etc/sysconfig/selinux.bak<span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%F<span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> -i <span class="token string">&#39;s/SELINUX=enforcing/SELINUX=disabled/g&#39;</span> /etc/sysconfig/selinux\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="创建一个新用户" tabindex="-1"><a class="header-anchor" href="#创建一个新用户" aria-hidden="true">#</a> 创建一个新用户</h2><p>一旦使用<code>root</code>登录系统，准备添加将用于从现在开始登录的新用户帐户，创建一个名为“demo”的新用户并添加密码。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>adduser demo <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;newPassword&quot;</span> <span class="token operator">|</span> <span class="token function">passwd</span> --stdin <span class="token string">&quot;demo&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="添加用户权限" tabindex="-1"><a class="header-anchor" href="#添加用户权限" aria-hidden="true">#</a> 添加用户权限</h2><p>已经拥有一个常规帐户权限的新用户<code>demo</code>账号，但是可能需要使用该账号执行管理任务。</p><p>为了避免必须从普通用户<code>demo</code>注销并以<code>root</code>帐户重新登录，可以为普通帐户设置所谓的“超级用户”或root权限。将允许普通用户通过<code>sudo</code>在每个命令之前的关键字来运行具有管理特权的命令。</p><p>默认情况下，在CentOS 7上，属于<code>wheel</code>组的用户可以使用该sudo命令，将<code>demo</code>用户加入到<code>wheel</code>组。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>gpasswd -a demo wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="添加公钥认证-推荐" tabindex="-1"><a class="header-anchor" href="#添加公钥认证-推荐" aria-hidden="true">#</a> 添加公钥认证（推荐）</h2><blockquote><p>除非特殊说明，否则所有的操作都在本地，而非服务器上进行的操作。</p></blockquote><p>为新用户设置公钥认证。设置此项将通过必须使用专用的SSH密钥登录来提高服务器的安全性。</p><h3 id="生成密钥对" tabindex="-1"><a class="header-anchor" href="#生成密钥对" aria-hidden="true">#</a> 生成密钥对</h3><p>如果本地尚未拥有包含公钥和私钥的SSH密钥对，则需要生成一个。如果已经存在要使用的密钥，忽略下面的操作，跳至复制公钥关键步骤。</p><p>要生成新的密钥对，请在本地机器（非服务器本身）的终端输入以下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-keygen\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>假设服务器用户被称为<code>curder</code>，执行上面的命令将看到如下所示的输出：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/Users/curder/.ssh/id_rsa):\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>继续回车的话，系统会提示输入密码以确保密钥的安全。<strong>建议将密码留空。</strong></p><p>执行完上面的操作后，会在<code>curder</code>的家目录的<code>.ssh</code>目录中生成一个私钥<code>id_rsa</code>和一个公钥<code>id_rsa.pub</code>。 <strong>请记住，私钥不应与任何不应访问服务器的人共享!</strong></p><h3 id="复制公钥" tabindex="-1"><a class="header-anchor" href="#复制公钥" aria-hidden="true">#</a> 复制公钥</h3><p>生成SSH密钥对后，会需要将公钥复制到新的服务器上。这里介绍两种简单的方法来做到这一点。</p><h4 id="方法1-使用ssh-copy-id" tabindex="-1"><a class="header-anchor" href="#方法1-使用ssh-copy-id" aria-hidden="true">#</a> 方法1：使用<code>ssh-copy-id</code></h4><p>如果在本地计算机安装了<code>ssh-copy-id</code>脚本，则可以使用它将公钥安装到您拥有登录凭据的任何用户。 <code>ssh-copy-id</code>通过指定要安装密钥的服务器的用户和IP地址运行脚本，如下所示：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-copy-id demo@SERVER_IP_ADDRESS\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在提示处提供密码并成功后，本地公钥将被添加到远程服务器的<code>.ssh/authorized_keys</code>文件中，并可以使用相应的私钥登录到服务器。</p><h4 id="方法2-手动安装密钥" tabindex="-1"><a class="header-anchor" href="#方法2-手动安装密钥" aria-hidden="true">#</a> 方法2：手动安装密钥</h4><h5 id="使用命令获取公钥" tabindex="-1"><a class="header-anchor" href="#使用命令获取公钥" aria-hidden="true">#</a> 使用命令获取公钥</h5><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> ~/.ssh/id_rsa.pub\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将打印在屏幕上的公钥复制到剪切板，或者使用<code>pbcopy &lt; ~/.ssh/id_rsa.pub</code>命令将公钥直接复制到剪切板。</p><h5 id="将公钥添加到新的远程用户" tabindex="-1"><a class="header-anchor" href="#将公钥添加到新的远程用户" aria-hidden="true">#</a> 将公钥添加到新的远程用户</h5><p>要允许使用SSH密钥作为新的远程用户进行身份验证，必须将公钥添加到<strong>服务器上</strong>用户主目录中的<code>~/.ssh/authorized_keys</code>文件中。</p><p><strong>在服务器上</strong>，以<code>root</code>用户身份输入以下命令切换到新用户</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">su</span> - demo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>.ssh</code>使用以下命令创建一个新目录，并限制其权限。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> .ssh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">700</span> .ssh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>接下来需要使用文本编辑器打开一个名为<code>~/.ssh/authorized_keys</code>。这里使用vi来编辑文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vi</span> ~/.ssh/authorized_keys <span class="token comment"># 将本地公钥内容添加到文件</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>然后通过将其粘贴到编辑器中输入您本地电脑的公钥（它应该在剪贴板中），并通过命令修改权限。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">600</span> ~/.ssh/authorized_keys\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>现在可以使用私钥作为身份验证，本地以SSH身份登录您的新用户并能通过<code>sudo su -</code>切换到<code>root</code>用户。</p><h2 id="配置ssh守护进程" tabindex="-1"><a class="header-anchor" href="#配置ssh守护进程" aria-hidden="true">#</a> 配置SSH守护进程</h2><h3 id="禁止root用户登录" tabindex="-1"><a class="header-anchor" href="#禁止root用户登录" aria-hidden="true">#</a> 禁止root用户登录</h3><p>现在有了新帐户<code>demo</code>，通过修改机器的SSH守护程序配置来禁止远程SSH访问<code>root</code>帐户，这样可以保护服务器。首先以<strong>root</strong>用户的文本编辑器打开配置文件：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vi</span> /etc/ssh/sshd_config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在这里，选择通过SSH禁用<code>root</code>用户登录。这通常是更安全的设置，因为现在可以通过普通用户帐户访问我们的服务器，并在必要时提升权限。要禁用远程root登录，我们需要找到如下所示的行，通过删除“＃”符号取消注释。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#PermitRootLogin yes\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改完的相关行内容应该如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>PermitRootLogin no\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>强烈建议在每台服务器上禁用远程<code>root</code>登录！</strong></p><h3 id="重新加载ssh" tabindex="-1"><a class="header-anchor" href="#重新加载ssh" aria-hidden="true">#</a> 重新加载SSH</h3><blockquote><p><strong>注意：</strong> 在重载之前请保证有一个活动的SSH连接，直到完全<strong>测试</strong>确认可以成功建立新的连接。否则如果后期由于错误的SSH配置导致的无法登录，那便无法登录了，只能联系服务器提供商重装机器。</p></blockquote><p>要对ssh配置进行重载可以输入下面的命令。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl reload sshd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p>打开一个新的终端窗口。在新窗口中，需要开始一个到服务器的新连接。这一次，我们不使用<code>root</code>帐户，而是使用创建的新用户<code>demo</code>。对于我们上面配置的服务器，使用此命令进行连接。在适当的地方替换您自己的信息：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ssh</span> demo@SERVER_IP_ADDRESS\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>系统将提示输入配置的新用户的密码。之后将使用新用户的身份登录。</p><p>请记住，如果需要以<code>root</code>权限运行命令，请在它之前加上 <code>sudo</code>。</p><p>如果一切正常，您可以输入<code>exit</code>命令退出会话。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>',72),p={href:"https://ovwane.github.io/2017/11/17/CentOS7%20%E6%96%B0%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE/#%E8%AE%BE%E7%BD%AE%E4%B8%BB%E6%9C%BA%E5%90%8D",target:"_blank",rel:"noopener noreferrer"},d=(0,a.Uk)("CentOS7 新装服务器初始化配置"),u={href:"https://www.digitalocean.com/community/tutorials/initial-server-setup-with-centos-7",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("Initial Server Setup with CentOS 7"),b={href:"https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server",target:"_blank",rel:"noopener noreferrer"},m=(0,a.Uk)("How To Configure SSH Key-Based Authentication on a Linux Server"),g={render:function(s,e){const n=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("blockquote",null,[(0,a.Wm)("p",null,[o,(0,a.Wm)("a",r,[c,(0,a.Wm)(n)]),t])]),i,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[(0,a.Wm)("a",p,[d,(0,a.Wm)(n)])])]),(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[(0,a.Wm)("a",u,[h,(0,a.Wm)(n)])])]),(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[(0,a.Wm)("a",b,[m,(0,a.Wm)(n)])])])])],64)}}}}]);