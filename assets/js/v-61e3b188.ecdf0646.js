"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1719],{1815:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-61e3b188",path:"/languages/symfony-components/console.html",title:"Console 命令",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装前的准备",slug:"安装前的准备",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"创建一个Console程序",slug:"创建一个console程序",children:[]},{level:2,title:"创建命令",slug:"创建命令",children:[]},{level:2,title:"配置命令",slug:"配置命令",children:[{level:3,title:"配置名称和描述",slug:"配置名称和描述",children:[]},{level:3,title:"配置用户输入",slug:"配置用户输入",children:[]},{level:3,title:"配置输出",slug:"配置输出",children:[]},{level:3,title:"执行命令",slug:"执行命令",children:[]}]},{level:2,title:"单元测试",slug:"单元测试",children:[{level:3,title:"前置准备",slug:"前置准备",children:[]},{level:3,title:"断言输出",slug:"断言输出",children:[]},{level:3,title:"测试参数必选",slug:"测试参数必选",children:[]}]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"languages/symfony-components/console.md",git:{updatedTime:1641800329e3,contributors:[{name:"curder",email:"q.curder@gmail.com",commits:1}]}}},9973:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var p=a(6252);const t=(0,p.uE)('<h1 id="console-命令" tabindex="-1"><a class="header-anchor" href="#console-命令" aria-hidden="true">#</a> Console 命令</h1><p>Console 组件允许创建 command-line 命令。console（控制台）命令可以用于任何反复执行的任务，比如 cron-jobs，imports（导入），或其他批处理工作。</p><p>示例创建一个 CreateUserCommand 命令。</p><h2 id="安装前的准备" tabindex="-1"><a class="header-anchor" href="#安装前的准备" aria-hidden="true">#</a> 安装前的准备</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> symfony-components <span class="token comment"># 创建目录</span>\n<span class="token builtin class-name">cd</span> symfony-components <span class="token comment"># 进入到工作目录 </span>\n\n<span class="token function">composer</span> init <span class="token comment"># 初始化 Composer 信息</span>\n\n<span class="token function">mkdir</span> src/ <span class="token comment"># 创建源代码目录</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>composer.json</code> 文件如下：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;curder/symfony-components&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Discover Symfony Components&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;authors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;curder&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;q.curder@gmail.com&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;php&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt;=7.2.5&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;autoload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;psr-4&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> require symfony/console\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>如果在 <code>Symfony</code> 应用程序之外安装这个组件，必须在代码中包含 <code>vendor/autoload.php</code> 文件来启用 Composer 提供的类的自动加载机制。</p></blockquote><h2 id="创建一个console程序" tabindex="-1"><a class="header-anchor" href="#创建一个console程序" aria-hidden="true">#</a> 创建一个Console程序</h2><p>首先，需要建立一个 PHP 脚本来定义控制台程序，在项目的根目录下，建立 <code>demo</code> 文件：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>#!/usr/bin/env php\n\n<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">require</span> <span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/vendor/autoload.php&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Symfony Console&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;0.1.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 定义项目名称和版本</span>\n\n<span class="token comment">// 注册命令</span>\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateUserCommand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="创建命令" tabindex="-1"><a class="header-anchor" href="#创建命令" aria-hidden="true">#</a> 创建命令</h2><p>命令通过类来定义，这里定义为 <code>CreateUserCommand</code> 类。类的定义遵循如下结构：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Command<span class="token punctuation">\\</span>Command</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Input<span class="token punctuation">\\</span>InputInterface</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Output<span class="token punctuation">\\</span>OutputInterface</span><span class="token punctuation">;</span>\n \n<span class="token keyword">class</span> <span class="token class-name-definition class-name">CreateUserCommand</span> <span class="token keyword">extends</span> <span class="token class-name">Command</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span>\n \n    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">execute</span><span class="token punctuation">(</span><span class="token class-name type-declaration">InputInterface</span> <span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">OutputInterface</span> <span class="token variable">$output</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="配置命令" tabindex="-1"><a class="header-anchor" href="#配置命令" aria-hidden="true">#</a> 配置命令</h2><h3 id="配置名称和描述" tabindex="-1"><a class="header-anchor" href="#配置名称和描述" aria-hidden="true">#</a> 配置名称和描述</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// ...</span>\n<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user:create&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 设置命令名称</span>\n         <span class="token operator">-&gt;</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Create new user&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 命令简短描述</span>\n         <span class="token operator">-&gt;</span><span class="token function">setHelp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;This command allows you to create users...&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 运行命令时使用 &quot;--help&quot; 选项时的完整命令描述</span>\n         <span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="配置用户输入" tabindex="-1"><a class="header-anchor" href="#配置用户输入" aria-hidden="true">#</a> 配置用户输入</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Input<span class="token punctuation">\\</span>InputArgument</span><span class="token punctuation">;</span>\n \n<span class="token comment">// ...</span>\n<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$this</span>\n        <span class="token comment">// 配置一个必须参数，如果是可选参数 InputArgument::OPTIONAL，如果是数组参数 InputArgument::IS_ARRAY</span>\n        <span class="token operator">-&gt;</span><span class="token function">addArgument</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">InputArgument</span><span class="token operator">::</span><span class="token constant">REQUIRED</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;The username of the user.&#39;</span><span class="token punctuation">)</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="配置输出" tabindex="-1"><a class="header-anchor" href="#配置输出" aria-hidden="true">#</a> 配置输出</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">execute</span><span class="token punctuation">(</span><span class="token class-name type-declaration">InputInterface</span> <span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">OutputInterface</span> <span class="token variable">$output</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$output</span><span class="token operator">-&gt;</span><span class="token function">writeln</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n        <span class="token string single-quoted-string">&#39;User Creator&#39;</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;============&#39;</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n    <span class="token comment">// retrieve the argument value using getArgument()</span>\n    <span class="token comment">// 使用 getArgument() 取出参数值</span>\n    <span class="token variable">$output</span><span class="token operator">-&gt;</span><span class="token function">writeln</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Username: &lt;info&gt;&#39;</span><span class="token operator">.</span><span class="token variable">$input</span><span class="token operator">-&gt;</span><span class="token function">getArgument</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/info&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n    <span class="token keyword">return</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="执行命令" tabindex="-1"><a class="header-anchor" href="#执行命令" aria-hidden="true">#</a> 执行命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./demo user:create Curder\nUser Creator\n<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>\n\nUsername: Curder\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试" aria-hidden="true">#</a> 单元测试</h2><h3 id="前置准备" tabindex="-1"><a class="header-anchor" href="#前置准备" aria-hidden="true">#</a> 前置准备</h3><h4 id="安装-phpunit-phpunit" tabindex="-1"><a class="header-anchor" href="#安装-phpunit-phpunit" aria-hidden="true">#</a> 安装 phpunit/phpunit</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> require --dev phpunit/phpunit\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="配置-phpunit-xml" tabindex="-1"><a class="header-anchor" href="#配置-phpunit-xml" aria-hidden="true">#</a> 配置 phpunit xml</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phpunit</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name"><span class="token namespace">xsi:</span>noNamespaceSchemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://schema.phpunit.de/9.5/phpunit.xsd<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">bootstrap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vendor/autoload.php<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">cacheResultFile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.phpunit.cache.test-results<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">executionOrder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>depends,defects<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">beStrictAboutCoversAnnotation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">beStrictAboutOutputDuringTests</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">beStrictAboutTodoAnnotatedTests</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">convertDeprecationsToExceptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">failOnRisky</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">failOnWarning</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name">verbose</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuites</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>tests<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuites</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>coverage</span> <span class="token attr-name">cacheDirectory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.phpunit.cache.code-coverage<span class="token punctuation">&quot;</span></span>\n              <span class="token attr-name">processUncoveredFiles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>src<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>coverage</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phpunit</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="断言输出" tabindex="-1"><a class="header-anchor" href="#断言输出" aria-hidden="true">#</a> 断言输出</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_should_run_user_create_command</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$command_name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user:create&#39;</span><span class="token punctuation">;</span>\n        <span class="token comment">// Set up your Application with your command.</span>\n        <span class="token variable">$application</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// Here&#39;s where you would inject any mocked dependencies as needed.</span>\n        <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateUserCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$foundCommand</span> <span class="token operator">=</span> <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$command_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$tester</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Tester<span class="token punctuation">\\</span>CommandTester</span><span class="token punctuation">(</span><span class="token variable">$foundCommand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// &#39;./demo user:create Curder&#39;</span>\n        <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token variable">$tester</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;command&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$command_name</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token variable">$tester</span><span class="token operator">-&gt;</span><span class="token function">getDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token variable">$assertStringContainsString</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Username: Curder&#39;</span><span class="token punctuation">,</span> <span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$assertEquals</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Command<span class="token punctuation">\\</span>Command</span><span class="token operator">::</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="测试参数必选" tabindex="-1"><a class="header-anchor" href="#测试参数必选" aria-hidden="true">#</a> 测试参数必选</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_has_require_user_name_argument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">expectException</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Exception<span class="token punctuation">\\</span>RuntimeException</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">expectErrorMessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Not enough arguments (missing: &quot;username&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token variable">$command_name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user:create&#39;</span><span class="token punctuation">;</span>\n        <span class="token comment">// Set up your Application with your command.</span>\n        <span class="token variable">$application</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// Here&#39;s where you would inject any mocked dependencies as needed.</span>\n        <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateUserCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$foundCommand</span> <span class="token operator">=</span> <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$command_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$tester</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Tester<span class="token punctuation">\\</span>CommandTester</span><span class="token punctuation">(</span><span class="token variable">$foundCommand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// Execute the command. This example would be the equivalent of</span>\n        <span class="token comment">// &#39;./demo user:create&#39;</span>\n        <span class="token variable">$tester</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;command&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$command_name</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',36),e={href:"https://symfony.com/doc/current/components/console.html",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("The Console Component 文档"),c={href:"https://github.com/curder/symfony-components",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("curder/symfony-components"),u={},r=(0,a(3744).Z)(u,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",e,[o,(0,p.Wm)(a)])]),(0,p._)("li",null,[(0,p._)("a",c,[l,(0,p.Wm)(a)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);