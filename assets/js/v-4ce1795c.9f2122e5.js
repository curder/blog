(self.webpackChunkblog=self.webpackChunkblog||[]).push([[119],{1758:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-4ce1795c",path:"/languages/laravel/livewire/how-to-install-livewire.html",title:"安装 Livewire",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"下载 livewire",slug:"下载-livewire",children:[]},{level:2,title:"修改模版文件添加指令",slug:"修改模版文件添加指令",children:[]},{level:2,title:"在 compose.json 添加命令",slug:"在-compose-json-添加命令",children:[]},{level:2,title:"创建一个 livewire 组件",slug:"创建一个-livewire-组件",children:[]},{level:2,title:"传递从组件中传递数据到视图",slug:"传递从组件中传递数据到视图",children:[{level:3,title:"通过 view 函数的参数传递",slug:"通过-view-函数的参数传递",children:[]},{level:3,title:"通过类属性传递",slug:"通过类属性传递",children:[]}]},{level:2,title:"视图通过模版输出",slug:"视图通过模版输出",children:[]}],filePathRelative:"languages/laravel/livewire/how-to-install-livewire.md",git:{updatedTime:1628058202e3,contributors:[]}}},992:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>k});var e=a(6252);const p=(0,e.Wm)("h1",{id:"安装-livewire",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#安装-livewire","aria-hidden":"true"},"#"),(0,e.Uk)(" 安装 Livewire")],-1),t=(0,e.Wm)("p",null,"开始之前已经下载好了Laravel项目。",-1),l=(0,e.Wm)("h2",{id:"下载-livewire",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#下载-livewire","aria-hidden":"true"},"#"),(0,e.Uk)(" 下载 livewire")],-1),i=(0,e.Uk)("使用下面的命令下载 "),c={href:"https://github.com/livewire/livewire",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("livewire/livewire"),r=(0,e.Uk)(" 包到当前 Laravel 项目。"),u=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> require livewire/livewire -vvv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="修改模版文件添加指令" tabindex="-1"><a class="header-anchor" href="#修改模版文件添加指令" aria-hidden="true">#</a> 修改模版文件添加指令</h2><p>在模版文件中添加如下两行指令</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh-CN<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Laravel Livewire Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    @livewireStyles\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    Hello world!\n\n    @livewireScripts\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p>上面通过指令：<code>@livewireStyles</code> 和 <code>@livewireScripts</code> 可以释放css和js。</p><p>也可以通过标签语法 <code>&lt;livewire:styles /&gt;</code> 和 <code>&lt;livewire:scripts /&gt;</code>。</p></blockquote><h2 id="在-compose-json-添加命令" tabindex="-1"><a class="header-anchor" href="#在-compose-json-添加命令" aria-hidden="true">#</a> 在 compose.json 添加命令</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;post-autoload-dump&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;@php artisan package:discover --ansi&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;@php artisan vendor:publish --force --tag=livewire:assets --ansi&quot;</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>至此 livewire 引入完毕。</p><h2 id="创建一个-livewire-组件" tabindex="-1"><a class="header-anchor" href="#创建一个-livewire-组件" aria-hidden="true">#</a> 创建一个 livewire 组件</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:livewire hello-world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>通过上面的命令会默认创建组件 <code>app/Http/Livewire/HelloWorld.php</code> 和模版 <code>resources/views/livewire/hello-world.blade.php</code> 文件。</p></blockquote><h2 id="传递从组件中传递数据到视图" tabindex="-1"><a class="header-anchor" href="#传递从组件中传递数据到视图" aria-hidden="true">#</a> 传递从组件中传递数据到视图</h2><h3 id="通过-view-函数的参数传递" tabindex="-1"><a class="header-anchor" href="#通过-view-函数的参数传递" aria-hidden="true">#</a> 通过 view 函数的参数传递</h3><p>组件通过数组传参到视图。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Livewire</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Livewire<span class="token punctuation">\\</span>Component</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">HelloWorld</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;livewire.hello-world&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="通过类属性传递" tabindex="-1"><a class="header-anchor" href="#通过类属性传递" aria-hidden="true">#</a> 通过类属性传递</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Livewire</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Livewire<span class="token punctuation">\\</span>Component</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">HelloWorld</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;livewire.hello-world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="视图通过模版输出" tabindex="-1"><a class="header-anchor" href="#视图通过模版输出" aria-hidden="true">#</a> 视图通过模版输出</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    Hello {{ $name }}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',19),k={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,t,l,(0,e.Wm)("p",null,[i,(0,e.Wm)("a",c,[o,(0,e.Wm)(a)]),r]),u],64)}}}}]);