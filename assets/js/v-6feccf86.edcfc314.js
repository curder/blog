"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9434],{7215:(e,o,t)=>{t.r(o),t.d(o,{data:()=>l});const l={key:"v-6feccf86",path:"/tools/google-developer-tools/how-to-keep-the-state-of-the-element.html",title:"如何保持元素的状态",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"tools/google-developer-tools/how-to-keep-the-state-of-the-element.md",git:{updatedTime:1641800329e3,contributors:[{name:"curder",email:"q.curder@gmail.com",commits:1}]}}},2323:(e,o,t)=>{t.r(o),t.d(o,{default:()=>i});var l=t(6252);const c=(0,l.uE)('<h1 id="如何保持元素的状态" tabindex="-1"><a class="header-anchor" href="#如何保持元素的状态" aria-hidden="true">#</a> 如何保持元素的状态</h1><p>在开发调试网页元素的时候会遇到需要查看或者修改元素<code>:active</code>、<code>:hover</code>、<code>:focus</code>、<code>:visited</code>等状态时的一些样式或者变化。</p><p>假如调试一个<code>button</code>按钮或者<code>a</code>标签，以<code>:hover</code>鼠标悬浮状态为例。</p><p>当鼠标悬浮的时，我们想看下按钮的背景色是什么，此时如果不选中<code>:hover</code>状态就无法查看元素在悬浮的时候生效的样式。</p>',4),s=["src"],d=(0,l._)("p",null,"保持元素状态的目的可能是获取特殊状态下元素的属性。",-1),r=(0,l._)("p",null,[(0,l.Uk)("众所周知，元素的状态多种多样，通过上面的方式我们可以看到有五种，其实也可以通过一个面板进行多选，它在面板右侧的"),(0,l._)("code",null,"Styles"),(0,l.Uk)("里面（默认是隐藏的，需要我们点击打开它）。")],-1),a=["src"],n=(0,l._)("p",null,[(0,l.Uk)("通过上面的方式可以快速获取元素的状态相对应的样式，配合左侧的"),(0,l._)("code",null,"Filter"),(0,l.Uk)("可以快速搜索在不同的状态下的样式。")],-1),h={},i=(0,t(3744).Z)(h,[["render",function(e,o){return(0,l.wg)(),(0,l.iD)(l.HY,null,[c,(0,l._)("img",{src:e.$withBase("/images/tools/google-developer-tools/keep-the-state-of-the-element-hover.png"),alt:""},null,8,s),d,r,(0,l._)("img",{src:e.$withBase("/images/tools/google-developer-tools/keep-the-state-of-the-element-switch-many-states.png"),alt:""},null,8,a),n],64)}]])},3744:(e,o)=>{o.Z=(e,o)=>{const t=e.__vccOpts||e;for(const[e,l]of o)t[e]=l;return t}}}]);