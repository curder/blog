(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1036],{6452:(e,t,i)=>{"use strict";i.r(t),i.d(t,{data:()=>r});const r={key:"v-102fa66c",path:"/tools/sublime/sublime-plugin-git-gutter-code-difference-management.html",title:"Sublime插件之GitGutter代码差异管理",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"简单配置",slug:"简单配置",children:[]}],filePathRelative:"tools/sublime/sublime-plugin-git-gutter-code-difference-management.md",git:{updatedTime:1638951195e3,contributors:[]}}},9051:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>l});var r=i(6252);const a=(0,r.Wm)("h1",{id:"sublime插件之gitgutter代码差异管理",tabindex:"-1"},[(0,r.Wm)("a",{class:"header-anchor",href:"#sublime插件之gitgutter代码差异管理","aria-hidden":"true"},"#"),(0,r.Uk)(" Sublime插件之GitGutter代码差异管理")],-1),d={href:"https://github.com/jisaacks/GitGutter#-installation",target:"_blank",rel:"noopener noreferrer"},c=(0,r.Uk)("GitGutter"),o=(0,r.Uk)("在 Sublime 上面方便观察代码的修改，相当便利。"),n=(0,r.uE)('<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>用<code>Package Control</code>安装<code>GitGutter</code>（<code>⌘(Command) + ⇧(Shift) + P</code> –&gt; 输入 <code>Install</code>… 打开 <strong>Package Control</strong> -&gt; 输入<code>GitGutter</code> 后回车进入安装）。</p><h2 id="简单配置" tabindex="-1"><a class="header-anchor" href="#简单配置" aria-hidden="true">#</a> 简单配置</h2><p>修改git的默认路径，打开配置文件<code>Preferences</code> -&gt; <code>Package Settings</code> -&gt; <code>GitGutter</code> -&gt; <code>Settings</code>。</p><p>如果是使用 Linux 的可以通过命令 <code>which git</code> 找到你的 <code>git</code> 安裝位置， 加入 <code>git_binary</code> 后面则输入 Git 版本控制的安裝位置，这样就是启用 GitGutter 了。</p><p>启用后可以看到左边的小图示，就代表 Git Gutter 有 trace 到代码了。</p>',6),l={render:function(e,t){const i=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[a,(0,r.Wm)("p",null,[(0,r.Wm)("a",d,[c,(0,r.Wm)(i)]),o]),n],64)}}}}]);