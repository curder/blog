(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3414],{5723:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-063f0be7",path:"/os/centos/centos7/centos-7-uses-yum-way-to-install-and-configure-nginx.html",title:"CentOS7使用yum方式安装和配置Nginx",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"使用yum安装Nginx",slug:"使用yum安装nginx",children:[]},{level:2,title:"启动Nginx",slug:"启动nginx",children:[{level:3,title:"系统守护进程方式启动Nginx",slug:"系统守护进程方式启动nginx",children:[]},{level:3,title:"使用supervisord管理进程",slug:"使用supervisord管理进程",children:[]}]},{level:2,title:"检查Nginx",slug:"检查nginx",children:[{level:3,title:"检查进程",slug:"检查进程",children:[]},{level:3,title:"检查端口",slug:"检查端口",children:[]},{level:3,title:"使用curl查看服务器响应",slug:"使用curl查看服务器响应",children:[]}]}],filePathRelative:"os/centos/centos7/centos-7-uses-yum-way-to-install-and-configure-nginx.md",git:{updatedTime:1625566775e3,contributors:[]}}},9081:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>c});var e=a(6252);const l=(0,e.uE)('<h1 id="centos7使用yum方式安装和配置nginx" tabindex="-1"><a class="header-anchor" href="#centos7使用yum方式安装和配置nginx" aria-hidden="true">#</a> CentOS7使用yum方式安装和配置Nginx</h1><p>Nginx版本：1.12.2</p><h2 id="使用yum安装nginx" tabindex="-1"><a class="header-anchor" href="#使用yum安装nginx" aria-hidden="true">#</a> 使用yum安装Nginx</h2><p>安装Nginx之前先安装<code>epel</code>软件仓库。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum -y <span class="token function">install</span> epel-release <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> yum -y <span class="token function">install</span> nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="启动nginx" tabindex="-1"><a class="header-anchor" href="#启动nginx" aria-hidden="true">#</a> 启动Nginx</h2><h3 id="系统守护进程方式启动nginx" tabindex="-1"><a class="header-anchor" href="#系统守护进程方式启动nginx" aria-hidden="true">#</a> 系统守护进程方式启动Nginx</h3><p>执行下面的命令启动<code>nignx</code>并使其在CentOS系统启动时运行。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start nginx <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="使用supervisord管理进程" tabindex="-1"><a class="header-anchor" href="#使用supervisord管理进程" aria-hidden="true">#</a> 使用supervisord管理进程</h3>',10),t={href:"/os/centos/how-to-use-supervisord-manager-processes.md",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("supervisord"),i=(0,e.Uk)("的进程管理参考这里。"),p=(0,e.uE)('<h4 id="nginx的supervisord配置文件" tabindex="-1"><a class="header-anchor" href="#nginx的supervisord配置文件" aria-hidden="true">#</a> nginx的supervisord配置文件</h4><p>默认的 supervisord 的进程文件保存在<code>/etc/supervisord.d/nginx.ini</code>，内容如下：</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">program:nginx</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">command</span> <span class="token punctuation">=</span> <span class="token value attr-value">/sbin/nginx                                   ; 程序路径</span>\n<span class="token key attr-name">autostart</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>\n<span class="token key attr-name">autorestart</span> <span class="token punctuation">=</span> <span class="token value attr-value">true                                      ; 自动重启</span>\n<span class="token key attr-name">priority</span> <span class="token punctuation">=</span> <span class="token value attr-value">999                                          ; 优先级</span>\n<span class="token key attr-name">startsecs</span> <span class="token punctuation">=</span> <span class="token value attr-value">1                                           ; 重启前等待时间</span>\n<span class="token key attr-name">startretries</span> <span class="token punctuation">=</span> <span class="token value attr-value">100                                      ; 最大重启次数</span>\n<span class="token key attr-name">stdout_logfile</span> <span class="token punctuation">=</span> <span class="token value attr-value">/var/log/nginx.out.log</span>\n<span class="token key attr-name">stderr_logfile</span> <span class="token punctuation">=</span> <span class="token value attr-value">/var/log/nginx.err.log</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="重载配置" tabindex="-1"><a class="header-anchor" href="#重载配置" aria-hidden="true">#</a> 重载配置</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>supervisorctl reread <span class="token operator">&amp;&amp;</span> supervisorctl update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>执行完上面的命令，可以看到控制台会输出如下结果</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nginx: available\nnginx: added process group\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>至此使用 supervisord 管理<code>nginx</code>进程已经完成。</p><h2 id="检查nginx" tabindex="-1"><a class="header-anchor" href="#检查nginx" aria-hidden="true">#</a> 检查Nginx</h2><h3 id="检查进程" tabindex="-1"><a class="header-anchor" href="#检查进程" aria-hidden="true">#</a> 检查进程</h3><p>检查系统进程使用ps命令。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> aux <span class="token operator">|</span><span class="token function">grep</span> nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="检查端口" tabindex="-1"><a class="header-anchor" href="#检查端口" aria-hidden="true">#</a> 检查端口</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> yum -y <span class="token function">install</span> net-tools\n<span class="token function">sudo</span> <span class="token function">netstat</span> -tunpl <span class="token operator">|</span><span class="token function">grep</span> <span class="token number">80</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="使用curl查看服务器响应" tabindex="-1"><a class="header-anchor" href="#使用curl查看服务器响应" aria-hidden="true">#</a> 使用curl查看服务器响应</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> -I http://localhost\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>得到的相应信息示例如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>HTTP/1.1 200 OK\nServer: nginx/1.12.2\nDate: Wed, 25 Apr 2018 15:17:04 GMT\nContent-Type: text/html\nContent-Length: 3700\nLast-Modified: Tue, 06 Mar 2018 09:26:21 GMT\nConnection: keep-alive\nETag: &quot;5a9e5ebd-e74&quot;\nAccept-Ranges: bytes\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>至此，CentOS下安装<code>nginx</code>就安装好了。</p>',19),c={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("p",null,[(0,e.Wm)("a",t,[r,(0,e.Wm)(a)]),i]),p],64)}}}}]);