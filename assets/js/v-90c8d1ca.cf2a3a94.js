(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5929],{3937:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-90c8d1ca",path:"/languages/vue/vee-validate/how-to-use-vee-validate-throw-the-first-error-message-and-foucs-the-first-field.html",title:"获取第一个错误信息并自动焦点到该表单字段",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"版本",slug:"版本",children:[]},{level:2,title:"编写 DemoForm.vue",slug:"编写-demoform-vue",children:[]},{level:2,title:"参考地址",slug:"参考地址",children:[]}],filePathRelative:"languages/vue/vee-validate/how-to-use-vee-validate-throw-the-first-error-message-and-foucs-the-first-field.md",git:{updatedTime:1629081394e3,contributors:[]}}},8957:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>u});var t=a(6252);const p=(0,t.uE)('<h1 id="获取第一个错误信息并自动焦点到该表单字段" tabindex="-1"><a class="header-anchor" href="#获取第一个错误信息并自动焦点到该表单字段" aria-hidden="true">#</a> 获取第一个错误信息并自动焦点到该表单字段</h1><p>在实际开发中的错误信息并不仅仅只是显示错误信息，常常需要获取错误信息提示弹出提示，还需要将光标焦点聚焦到第一个错误表单字段上，VeeValidate 默认并不支持这个操作，可以通过一些小技巧完成。</p><h2 id="版本" tabindex="-1"><a class="header-anchor" href="#版本" aria-hidden="true">#</a> 版本</h2><ul><li>Vue <code>2.5.22</code></li><li>vue-validate <code>2.1.7</code></li></ul><h2 id="编写-demoform-vue" tabindex="-1"><a class="header-anchor" href="#编写-demoform-vue" aria-hidden="true">#</a> 编写 DemoForm.vue</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-validate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>required|email<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-vv-validate-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change|blur<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-</span>\n             <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ errors.first(&#39;email&#39;) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submitHandle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> VeeValidate <span class="token keyword">from</span> <span class="token string">&quot;vee-validate&quot;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VeeValidate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;DemoForm&quot;</span><span class="token punctuation">,</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      email<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">submitHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> hasError <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errors<span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n      <span class="token keyword">const</span> <span class="token function-variable function">showFirstErrorMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>errors<span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 展示第一个错误信息</span>\n      <span class="token keyword">const</span> name <span class="token operator">=</span> hasError <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errors<span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>field <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> <span class="token function-variable function">setFocusOnErrorComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$root<span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[name=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 光标聚焦在第一个错误的字段</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasError<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">showFirstErrorMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setFocusOnErrorComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;no error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><ul><li><p>VeeValidate 的错误对象在 Vue 实例下，而所有错误信息都在 items 数组下，可以使用判断数组的 length 作来判断是否存在错误</p></li><li><p>如果存在错误，那么第一个错误信息放在 items[0].msg 属性</p></li><li><p>后面再通过获取到第一个错误的字段名称，利用 <code>this.$root.$el</code> 的 <code>querySelect()</code> 获取到该字段，然后调用 <code>focus()</code>方法</p></li><li><p>若有任何 VeeValidate 验证不通过，使用 <code>alert()</code> 弹出错误消息，并将光标焦点聚焦到输入框上</p></li></ul><h2 id="参考地址" tabindex="-1"><a class="header-anchor" href="#参考地址" aria-hidden="true">#</a> 参考地址</h2>',8),e={href:"https://oomusou.io/vue/vee-validate/focus/",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("如何將 Focus 自動跳到 VeeValidate 驗證錯誤欄位 ?"),c={href:"https://baianat.github.io/vee-validate/",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("VeeValidate Docs"),u={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",e,[o,(0,t.Wm)(a)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",c,[l,(0,t.Wm)(a)])])])],64)}}}}]);