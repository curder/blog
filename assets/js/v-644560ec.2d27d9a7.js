"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8511],{388:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-644560ec",path:"/os/ubuntu/ubuntu-quickly-build-lnmp-environment.html",title:"Ubuntu下快速搭建LNMP环境",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Nginx",slug:"nginx",children:[{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"检查",slug:"检查",children:[]},{level:3,title:"配置和目录",slug:"配置和目录",children:[]},{level:3,title:"启动Nginx服务和测试",slug:"启动nginx服务和测试",children:[]}]},{level:2,title:"PHP",slug:"php",children:[{level:3,title:"安装前的准备",slug:"安装前的准备",children:[]},{level:3,title:"安装",slug:"安装-1",children:[]},{level:3,title:"配置",slug:"配置",children:[]},{level:3,title:"重启",slug:"重启",children:[]}]},{level:2,title:"Composer",slug:"composer",children:[]},{level:2,title:"MySQL",slug:"mysql",children:[{level:3,title:"安装",slug:"安装-2",children:[]}]},{level:2,title:"参考地址",slug:"参考地址",children:[]}],filePathRelative:"os/ubuntu/ubuntu-quickly-build-lnmp-environment.md",git:{updatedTime:1640243532e3,contributors:[{name:"curder",email:"q.curder@gmail.com",commits:1}]}}},5689:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var e=a(6252);const p=(0,e.uE)('<h1 id="ubuntu下快速搭建lnmp环境" tabindex="-1"><a class="header-anchor" href="#ubuntu下快速搭建lnmp环境" aria-hidden="true">#</a> Ubuntu下快速搭建LNMP环境</h1><p>在Ubuntu系统中，可以使用 <code>apt-get</code> 命令来搭建LNMP环境。这种方式较编译方式安装更加简便，因此选择该方式来搭建环境以供学习。</p><ul><li>Ubuntu Ubuntu 20.04.3 LTS</li><li>Nginx 1.18.0</li><li>PHP 8.1.0 <ul><li>Composer 2.1.14</li></ul></li><li>MySQL 8.0.27</li></ul>',3),l=(0,e.Uk)("安装前请确保对服务器进行了初始化，可以"),i={href:"https://curder.github.io/blog/os/ubuntu/ubuntu-server-initialization.html",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("参考这里"),t=(0,e.Uk)("。"),o=(0,e.uE)('<h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><blockquote><p>安装之前使用 <code>sudo su -</code> 命令将当前用户切换到 <strong>root</strong> 用户。</p></blockquote><p>nginx 的安装非常简单，使用下面的命令即可。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="检查" tabindex="-1"><a class="header-anchor" href="#检查" aria-hidden="true">#</a> 检查</h3><p>查看 Nginx 安装的版本</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nginx -v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置和目录" tabindex="-1"><a class="header-anchor" href="#配置和目录" aria-hidden="true">#</a> 配置和目录</h3><ul><li>主配置目录</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/etc/nginx/nginx.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>网站配置目录</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/etc/nginx/sites-available\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>默认的主配置目录仅仅包含<code>/etc/nginx/sites-enabled</code>目录下的文件，实际操作中添加网站配置首先添加到<code>/etc/nginx/sites-available/another-website.conf</code>。</p><p>然后通过<code>ln -s /etc/nginx/sites-available/another-website.conf /etc/nginx/sites-enabled/another-website.conf</code>将配置文件放置到<code>/etc/nginx/sites-enabled</code>目录下。</p></blockquote><ul><li>默认网站目录</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/var/www/html\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="启动nginx服务和测试" tabindex="-1"><a class="header-anchor" href="#启动nginx服务和测试" aria-hidden="true">#</a> 启动Nginx服务和测试</h3><p>使用下面两种方式都可以启动nginx</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> /etc/init.d/nginx start\n<span class="token function">sudo</span> systemctl start nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>分别可以通过下面的三种方式测试进程和端口是否正常。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">netstat</span> -tunpl<span class="token operator">|</span><span class="token function">grep</span> nginx\n<span class="token function">sudo</span> <span class="token function">lsof</span> -i :80\n<span class="token function">ps</span> aux <span class="token operator">|</span><span class="token function">grep</span> nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="php" tabindex="-1"><a class="header-anchor" href="#php" aria-hidden="true">#</a> PHP</h2><h3 id="安装前的准备" tabindex="-1"><a class="header-anchor" href="#安装前的准备" aria-hidden="true">#</a> 安装前的准备</h3><p>执行下面的命令添加具有 PHP 8.1 软件包和其他必需的 PHP 扩展的 <code>ondrej/php</code>。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> software-properties-common\n<span class="token function">sudo</span> add-apt-repository ppa:ondrej/php\n<span class="token function">sudo</span> <span class="token function">apt-get</span> update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>一旦成功添加 PPA，就可以安装 PHP 8.1 了。</p><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y <span class="token punctuation">\\</span>\n  php8.1 <span class="token punctuation">\\</span>\n  php8.1-fpm <span class="token punctuation">\\</span>\n  php8.1-common <span class="token punctuation">\\</span>\n  php8.1-mysql <span class="token punctuation">\\</span>\n  php8.1-opcache <span class="token punctuation">\\</span>\n  php8.1-gd <span class="token punctuation">\\</span>\n  php8.1-imagick <span class="token punctuation">\\</span>\n  php8.1-curl <span class="token punctuation">\\</span>\n  php8.1-mbstring <span class="token punctuation">\\</span>\n  php8.1-xml <span class="token punctuation">\\</span>\n  php8.1-zip <span class="token punctuation">\\</span>\n  php8.1-snmp <span class="token punctuation">\\</span>\n  php8.1-bcmath <span class="token punctuation">\\</span>\n  php8.1-soap <span class="token punctuation">\\</span>\n  php8.1-gmp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><h4 id="配置php" tabindex="-1"><a class="header-anchor" href="#配置php" aria-hidden="true">#</a> 配置PHP</h4><p>配置php的sock地址，文件保存在<code>/etc/php/8.1/fpm/pool.d/www.conf</code>。</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token key attr-name">listen</span> <span class="token punctuation">=</span> <span class="token value attr-value">/run/php/php8.1-fpm.sock</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="开启opcache和jit" tabindex="-1"><a class="header-anchor" href="#开启opcache和jit" aria-hidden="true">#</a> 开启opcache和jit</h4><p>文件 <code>/etc/php/8.1/fpm/php.ini</code> 和 <code>/etc/php/8.1/cli/php.ini</code> 中修改如下配置：</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token key attr-name">opcache.enable</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>\n<span class="token key attr-name">opcache.enable_cli</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>\n<span class="token key attr-name">opcache.jit_buffer_size</span><span class="token punctuation">=</span><span class="token value attr-value">100M</span>\n<span class="token key attr-name">opcache.jit</span><span class="token punctuation">=</span><span class="token value attr-value">1255</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>执行命令 <code>php -i |egrep &#39;opcache.jit |opcache.enable |opcache.enable_cli |opcache.jit_buffer_size&#39;</code> 检查是否配置成功。</p><h4 id="配置nginx" tabindex="-1"><a class="header-anchor" href="#配置nginx" aria-hidden="true">#</a> 配置Nginx</h4><p>配置<code>/etc/nginx/sites-available/default</code>，使其支持php解析。</p><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> ~ \\.php$</span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">include</span> snippets/fastcgi-php.conf</span><span class="token punctuation">;</span>\n    <span class="token comment"># With php7.0-cgi alone:</span>\n    <span class="token comment"># fastcgi_pass 127.0.0.1:9000;</span>\n    <span class="token comment"># With php7.0-fpm:</span>\n    <span class="token directive"><span class="token keyword">fastcgi_pass</span> unix:/run/php/php8.1-fpm.sock</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="重启" tabindex="-1"><a class="header-anchor" href="#重启" aria-hidden="true">#</a> 重启</h3><ul><li>重启Nginx</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> /etc/init.d/nginx restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>重启php-fpm</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> /etc/init.d/php8.1-fpm restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="composer" tabindex="-1"><a class="header-anchor" href="#composer" aria-hidden="true">#</a> Composer</h2><ul><li>下载安装</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php -r <span class="token string">&quot;copy(&#39;https://install.phpcomposer.com/installer&#39;, &#39;composer-setup.php&#39;);&quot;</span>\nphp composer-setup.php\nphp -r <span class="token string">&quot;unlink(&#39;composer-setup.php&#39;);&quot;</span>\n<span class="token function">sudo</span> <span class="token function">mv</span> composer.phar /usr/local/bin/composer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>切换 Composer 版本 默认情况下安装的 composer 为 2.1.14 的版本。切换到 1.10.24</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> self-update --1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>检查并确定下版本</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> -V <span class="token comment"># 查看当前composer版本</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>切换源</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> config -g repos.packagist <span class="token function">composer</span> https://mirrors.aliyun.com/composer <span class="token comment"># 切换 aliyun 源</span>\n\n<span class="token function">composer</span> config -g repo.packagist <span class="token function">composer</span> https://packagist.org <span class="token comment"># 切换 packagist 源</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><h3 id="安装-2" tabindex="-1"><a class="header-anchor" href="#安装-2" aria-hidden="true">#</a> 安装</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y <span class="token punctuation">\\</span>\n  mysql-server <span class="token punctuation">\\</span>\n  mysql-client <span class="token punctuation">\\</span>\n  php8.1-mysql\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>安装默认的用户名为 <code>root</code> ，密码为空。</p><p>mysqld的配置文件在 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>。</p><h2 id="参考地址" tabindex="-1"><a class="header-anchor" href="#参考地址" aria-hidden="true">#</a> 参考地址</h2>',59),r={href:"https://blog.csdn.net/STFPHP/article/details/53492723",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("Ubuntu 16.04 下快速搭建 LNMP 环境"),d={},h=(0,a(3744).Z)(d,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[l,(0,e._)("a",i,[c,(0,e.Wm)(a)]),t]),o,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",r,[u,(0,e.Wm)(a)])])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);