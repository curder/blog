(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1786],{622:(e,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>n});const n={key:"v-0f6bfc1c",path:"/tools/git/get-sparse-checkout-the-repository-specified-directory-or-file.html",title:"Git获取仓库指定目录或文件",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"相关步骤",slug:"相关步骤",children:[]},{level:2,title:"具体操作",slug:"具体操作",children:[{level:3,title:"检查Git版本",slug:"检查git版本",children:[]},{level:3,title:"创建仓库存放目录",slug:"创建仓库存放目录",children:[]},{level:3,title:"初始化仓库",slug:"初始化仓库",children:[]},{level:3,title:"添加远程仓库地址",slug:"添加远程仓库地址",children:[]},{level:3,title:"使用Sparse checkout模式",slug:"使用sparse-checkout模式",children:[]},{level:3,title:"配置要检出的目录或文件",slug:"配置要检出的目录或文件",children:[]},{level:3,title:"从远程将目标目录或文件拉取下来",slug:"从远程将目标目录或文件拉取下来",children:[]},{level:3,title:"对配置增删改后重新获取代码",slug:"对配置增删改后重新获取代码",children:[]}]},{level:2,title:"参考链接",slug:"参考链接",children:[]}],filePathRelative:"tools/git/get-sparse-checkout-the-repository-specified-directory-or-file.md",git:{updatedTime:1627991201e3,contributors:[]}}},4218:(e,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>v});var n=a(6252);const l=(0,n.uE)('<h1 id="git获取仓库指定目录或文件" tabindex="-1"><a class="header-anchor" href="#git获取仓库指定目录或文件" aria-hidden="true">#</a> Git获取仓库指定目录或文件</h1><p>使用<code>git clone</code>可以获取远程服务器的所有仓库代码，然而有时想查看仓库里某个目录或文件，例如<code>examples</code>目录的时候。</p><p>从<code>1.7.0</code>版本开始git提供稀疏检出的功能。所谓稀疏检出就是本地版本库检出时不检出全部，只将指定的文件从本地版本库检出到工作区，而其他未指定的文件则不予检出（即使这些文件存在于工作区，其修改也会被忽略）。</p><h2 id="相关步骤" tabindex="-1"><a class="header-anchor" href="#相关步骤" aria-hidden="true">#</a> 相关步骤</h2><ul><li>检查Git版本</li><li>创建本地存放文件夹</li><li><code>git init</code>初始化仓库</li><li>添加远程仓库地址</li><li>使用Sparse checkout模式</li><li>配置要检出的目录或文件</li><li>从远程将目标目录或文件拉取下来</li></ul><h2 id="具体操作" tabindex="-1"><a class="header-anchor" href="#具体操作" aria-hidden="true">#</a> 具体操作</h2>',6),i=(0,n.Uk)("演示"),r=(0,n.Wm)("code",null,"git",-1),t=(0,n.Uk)("的版本是"),c=(0,n.Wm)("code",null,"1.8.3.1",-1),o=(0,n.Uk)("，远程仓库地址是"),d={href:"https://github.com/swoole/swoole-src.git",target:"_blank",rel:"noopener noreferrer"},h=(0,n.Uk)("swoole/swoole-src"),u=(0,n.Uk)("。"),p=(0,n.uE)('<h3 id="检查git版本" tabindex="-1"><a class="header-anchor" href="#检查git版本" aria-hidden="true">#</a> 检查Git版本</h3><p>在命令行中运行如下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> --version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>比如保证git的版本大于<code>1.7.0</code>，这里以 <code>git version 1.8.3.1</code>作为演示。</p></blockquote><h3 id="创建仓库存放目录" tabindex="-1"><a class="header-anchor" href="#创建仓库存放目录" aria-hidden="true">#</a> 创建仓库存放目录</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> swoole-src-examples <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> swoole-src-examples\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>创建一个目录，这里以<code>swoole-src-example</code>，并且使用<code>cd</code>命令进入到目录中。</p></blockquote><h3 id="初始化仓库" tabindex="-1"><a class="header-anchor" href="#初始化仓库" aria-hidden="true">#</a> 初始化仓库</h3><p>执行初始化仓库的命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="添加远程仓库地址" tabindex="-1"><a class="header-anchor" href="#添加远程仓库地址" aria-hidden="true">#</a> 添加远程仓库地址</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/swoole/swoole-src.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="使用sparse-checkout模式" tabindex="-1"><a class="header-anchor" href="#使用sparse-checkout模式" aria-hidden="true">#</a> 使用Sparse checkout模式</h3><p>使用下面的命令允许<code>config</code>中使用<strong>Sparse checkout</strong>模式。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> config core.sparsecheckout <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置要检出的目录或文件" tabindex="-1"><a class="header-anchor" href="#配置要检出的目录或文件" aria-hidden="true">#</a> 配置要检出的目录或文件</h3><p>将要检出的目录或文件使用文件追加的形式写入到git的配置<code>.git/info/sparse-checkout</code>文件中，<strong>允许添加多行</strong>。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;examples/*&quot;</span> <span class="token operator">&gt;&gt;</span> .git/info/sparse-checkout\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>多次添加配置后，通过<code>cat .git/info/sparse-checkout</code>命令查看最终添加的目录或者文件。</p></blockquote><h3 id="从远程将目标目录或文件拉取下来" tabindex="-1"><a class="header-anchor" href="#从远程将目标目录或文件拉取下来" aria-hidden="true">#</a> 从远程将目标目录或文件拉取下来</h3><p>当仓库还是空白的情况下，首次需要执行下面的命令从远程将配置的目录或者文件拉取到本地。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> pull origin master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="对配置增删改后重新获取代码" tabindex="-1"><a class="header-anchor" href="#对配置增删改后重新获取代码" aria-hidden="true">#</a> 对配置增删改后重新获取代码</h3><p>在对配置文件<code>.git/info/sparse-checkout</code>的内容进行<strong>增</strong>、<strong>删</strong>、<strong>改</strong>操作之后，使用下面的命令重新修正目录和文件。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> checkout\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>',26),g={href:"https://www.worldhello.net/gotgit/08-git-misc/090-sparse-checkout-and-shallow-clone.html",target:"_blank",rel:"noopener noreferrer"},b=(0,n.Uk)("稀疏检出和浅克隆"),m={href:"https://www.jianshu.com/p/e36cbcc8f75d",target:"_blank",rel:"noopener noreferrer"},k=(0,n.Uk)("git checkout仓库项目某个文件夹"),v={render:function(e,s){const a=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.j4)(n.HY,null,[l,(0,n.Wm)("p",null,[i,r,t,c,o,(0,n.Wm)("a",d,[h,(0,n.Wm)(a)]),u]),p,(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,[(0,n.Wm)("p",null,[(0,n.Wm)("a",g,[b,(0,n.Wm)(a)])])]),(0,n.Wm)("li",null,[(0,n.Wm)("p",null,[(0,n.Wm)("a",m,[k,(0,n.Wm)(a)])])])])],64)}}}}]);