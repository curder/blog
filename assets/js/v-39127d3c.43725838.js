(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6632],{2024:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>t});const t={key:"v-39127d3c",path:"/languages/vue/vee-validate/how-to-use-vee-validate-to-customize-error-message.html",title:"如何使用 vee-validate 自定义错误提示",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"版本",slug:"版本",children:[]},{level:2,title:"编写 DemoForm.vue",slug:"编写-demoform-vue",children:[]},{level:2,title:"验证",slug:"验证",children:[]},{level:2,title:"参考地址",slug:"参考地址",children:[]}],filePathRelative:"languages/vue/vee-validate/how-to-use-vee-validate-to-customize-error-message.md",git:{updatedTime:1627991201e3,contributors:[]}}},4466:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>m});var t=s(6252);const e=(0,t.uE)('<h1 id="如何使用-vee-validate-自定义错误提示" tabindex="-1"><a class="header-anchor" href="#如何使用-vee-validate-自定义错误提示" aria-hidden="true">#</a> 如何使用 vee-validate 自定义错误提示</h1><p>VeeValidate 插件自带错误提示语言，但在实际的开发场景中我们常常需要对提示语言进行自定义。</p><h2 id="版本" tabindex="-1"><a class="header-anchor" href="#版本" aria-hidden="true">#</a> 版本</h2><ul><li>Vue <code>2.5.22</code></li><li>vue-validate <code>2.1.7</code></li></ul><h2 id="编写-demoform-vue" tabindex="-1"><a class="header-anchor" href="#编写-demoform-vue" aria-hidden="true">#</a> 编写 DemoForm.vue</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-validate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{required: true, email: true}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-vv-as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>邮箱<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ errors.first(&#39;email&#39;) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> VeeValidate<span class="token punctuation">,</span> <span class="token punctuation">{</span>Validator<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vee-validate&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> zh_CN <span class="token keyword">from</span> <span class="token string">&#39;vee-validate/dist/locale/zh_CN&#39;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VeeValidate<span class="token punctuation">)</span><span class="token punctuation">;</span>\nValidator<span class="token punctuation">.</span><span class="token function">localize</span><span class="token punctuation">(</span><span class="token string">&#39;zh_CN&#39;</span><span class="token punctuation">,</span> zh_CN<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/** custom message */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">required</span> <span class="token operator">=</span> <span class="token parameter">field</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">请输入</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>field<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> email <span class="token operator">=</span> <span class="token string">&#39;邮箱格式有误&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token punctuation">{</span>\n  required<span class="token punctuation">,</span>\n  email<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/** custom dictionary */</span>\n<span class="token keyword">const</span> dictionary <span class="token operator">=</span> <span class="token punctuation">{</span>\n  zh_CN<span class="token operator">:</span> <span class="token punctuation">{</span>\n    messages<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nValidator<span class="token punctuation">.</span><span class="token function">localize</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;DemoForm&quot;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><ul><li><p>通过 data-vv-as 指令标示当前字段的语言名称，比如 email 字段的简体中文名称是邮箱</p></li><li><p>除了 import 基本的 VeeValidate 外，还需要导入 Validator 用于配置语言</p></li><li><p>导入对应的语言文件，这里以简体中文为例是 <code>zh_CN</code></p></li><li><p>使用 <code>Validator.localize()</code> 设定为 <code>zh_CN</code></p></li><li><p>将自定义信息定义在 dictionary，其中第一层是语言，比如：<code>zh_CN</code> <code>zh_TW</code>等；第二层定义语言对象</p></li><li><p>VeeValidate 規定自定义信息对象每个属性的值可以是<code>function</code>或<code>string</code>。若为 function，则第一个参数为字段的 name 值；若为 string，则可以直接赋值</p></li><li><p>最后再将定义好的对象 <code>dictionary</code> 传入 <code>Validator.localize()</code></p></li></ul><h2 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h2>',8),p=(0,t.Uk)("不允许为空的自定义提示 "),l=(0,t.Uk)("邮箱地址不合法的自定义提示 "),o=(0,t.Wm)("h2",{id:"参考地址",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#参考地址","aria-hidden":"true"},"#"),(0,t.Uk)(" 参考地址")],-1),c={href:"https://oomusou.io/vue/vee-validate/custom-message/",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("如何使用 VeeValidate 顯示自訂訊息 ?"),i={href:"https://baianat.github.io/vee-validate/",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("VeeValidate Docs"),k={href:"https://baianat.github.io/vee-validate/guide/messages.html",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("Error Messages"),m={render:function(n,a){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[p,(0,t.Wm)("img",{src:n.$withBase("/images/languages/vue/vee-validate/how-to-use-vee-validate-to-customize-error-message/vee-validate-check-input-required-rule-by-custom-message.png"),alt:""},null,8,["src"])])]),(0,t.Wm)("li",null,[(0,t.Wm)("p",null,[l,(0,t.Wm)("img",{src:n.$withBase("/images/languages/vue/vee-validate/how-to-use-vee-validate-to-customize-error-message/vee-validate-check-input-email-rule-by-custom-message.png"),alt:""},null,8,["src"])])])]),o,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",c,[u,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",i,[r,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",k,[d,(0,t.Wm)(s)])])])],64)}}}}]);