(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5057],{8565:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-810e5412",path:"/os/centos/how-to-use-supervisord-manager-processes.html",title:"使用supervisord管理进程",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"启动Supervisor服务",slug:"启动supervisor服务",children:[]},{level:2,title:"配置管理进程文件",slug:"配置管理进程文件",children:[{level:3,title:"重载配置",slug:"重载配置",children:[]}]},{level:2,title:"终端管理进程",slug:"终端管理进程",children:[{level:3,title:"终端交互",slug:"终端交互",children:[]},{level:3,title:"Bash终端命令",slug:"bash终端命令",children:[]},{level:3,title:"WEB管理界面",slug:"web管理界面",children:[]}]},{level:2,title:"配置开机启动Supervisor服务",slug:"配置开机启动supervisor服务",children:[{level:3,title:"添加systemctl服务",slug:"添加systemctl服务",children:[]},{level:3,title:"添加service服务",slug:"添加service服务",children:[]}]},{level:2,title:"参考地址",slug:"参考地址",children:[]}],filePathRelative:"os/centos/how-to-use-supervisord-manager-processes.md",git:{updatedTime:1639727585e3,contributors:[]}}},4068:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>b});var e=a(6252);const p=(0,e.Wm)("h1",{id:"使用supervisord管理进程",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#使用supervisord管理进程","aria-hidden":"true"},"#"),(0,e.Uk)(" 使用supervisord管理进程")],-1),r={href:"http://supervisord.org/",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("supervisord"),t=(0,e.Uk)("是一个进程管理工具，用来启动、停止、重启和监测进程，当程序挂掉后"),c=(0,e.Wm)("code",null,"supervisor",-1),o=(0,e.Uk)("能够重新启动进程。"),i=(0,e.uE)('<blockquote><p><strong>注意：</strong> <code>Supervisor</code>只能<strong>管理非daemon的进程</strong>，也就是说<code>Supervisor</code>不能管理守护进程。否则提示<code>Exited too quickly (process log may have details)</code>异常。</p></blockquote><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>这里使用<code>yum</code>安装，<code>supervisor</code>没有发布在标准的CentOS源里，需要安装<code>epel</code>源。</p><ul><li><p>默认配置文件：<code>/etc/supervisord.conf</code></p></li><li><p>进程管理配置文件放到：<code>/etc/supervisord.d/</code></p></li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yum install -y epel-release supervisor\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>supervisor</code>安装完成后会生成三个执行程序，它们分别是：</p><ul><li><p><code>supervisortd</code>：<code>supervisor</code>的守护进程服务（用于接收进程管理命令）</p></li><li><p><code>supervisorctl</code>：客户端（用于和守护进程通信，发送管理进程的指令）</p></li><li><p><code>echo_supervisord_conf</code>：生成初始配置文件程序</p></li></ul><h2 id="启动supervisor服务" tabindex="-1"><a class="header-anchor" href="#启动supervisor服务" aria-hidden="true">#</a> 启动Supervisor服务</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>supervisord -c /etc/supervisord.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="配置管理进程文件" tabindex="-1"><a class="header-anchor" href="#配置管理进程文件" aria-hidden="true">#</a> 配置管理进程文件</h2><p>使用<code>yum</code>安装的<code>supervisor</code>默认的主配置文件是<code>/etc/supervisord.conf</code>。</p><p>在实际环境中，不建议将进程管理配置参数写到这个主配置文件中，应该给每个进程单独写一个配置文件，默认主配置文件引入的文件是<code>/etc/supervisord.d/*.ini</code>。</p><p>下面是Nginx配置进程的一个例子，<strong>注意配置文件名的后缀</strong></p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">program:nginx</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">command</span> <span class="token punctuation">=</span> <span class="token value attr-value">/sbin/nginx                                   ; 程序路径</span>\n<span class="token key attr-name">autostart</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>\n<span class="token key attr-name">autorestart</span> <span class="token punctuation">=</span> <span class="token value attr-value">true                                      ; 自动重启</span>\n<span class="token key attr-name">priority</span> <span class="token punctuation">=</span> <span class="token value attr-value">999                                          ; 优先级</span>\n<span class="token key attr-name">startsecs</span> <span class="token punctuation">=</span> <span class="token value attr-value">1                                           ; 重启前等待时间</span>\n<span class="token key attr-name">startretries</span> <span class="token punctuation">=</span> <span class="token value attr-value">100                                      ; 最大重启次数</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>一定要将被supervisor所管理的进程在<strong>前台</strong>运行，如果进程正在运行，请先关闭。</p></blockquote><h3 id="重载配置" tabindex="-1"><a class="header-anchor" href="#重载配置" aria-hidden="true">#</a> 重载配置</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>supervisorctl reread <span class="token operator">&amp;&amp;</span> supervisorctl update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>执行完上面的命令，可以看到控制台会输出如下结果</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nginx: available\nnginx: added process group\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>至此使用 supervisord 管理<code>nginx</code>进程已经OK。</p><h2 id="终端管理进程" tabindex="-1"><a class="header-anchor" href="#终端管理进程" aria-hidden="true">#</a> 终端管理进程</h2><h3 id="终端交互" tabindex="-1"><a class="header-anchor" href="#终端交互" aria-hidden="true">#</a> 终端交互</h3><p><code>supervisord</code>启动成功后，可以通过<code>supervisorctl</code>客户端控制进程，启动、停止、重启。</p><p>运行<code>supervisorctl</code>命令，不加参数，会进入<code>supervisor</code>客户端的交互终端，并会列出当前所管理的所有进程。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[root@localhost ~]# supervisorctl\nnginx                            RUNNING   pid 4423, uptime 0:00:02\nsupervisor&gt; help\n\ndefault commands (type help &lt;topic&gt;):\n=====================================\nadd    clear  fg        open  quit    remove  restart   start   stop  update\navail  exit   maintail  pid   reload  reread  shutdown  status  tail  version\n\nsupervisor&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>图中<code>nginx</code>就是上面在配置文件中第一行<code>[program:nginx]</code>指定。</p></blockquote><p>这么多的命令不知道怎么使用可以使用<code>help [命令名称]</code>，例如：<code>help stop</code>，则会有更详细的命令解释。</p><h3 id="bash终端命令" tabindex="-1"><a class="header-anchor" href="#bash终端命令" aria-hidden="true">#</a> Bash终端命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>supervisorctl status\nsupervisorctl stop nginx\nsupervisorctl start nginx\nsupervisorctl restart nginx\nsupervisorctl reread <span class="token comment"># 有新的配置文件加入到配置目录`/etc/supervisord.d/`使用命令重新读取配置。</span>\nsupervisorctl update <span class="token comment"># 配合reread使用</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="web管理界面" tabindex="-1"><a class="header-anchor" href="#web管理界面" aria-hidden="true">#</a> WEB管理界面</h3><p>默认配置没有开启WEB管理界面，需要修改主配置文件<code>supervisord.conf</code>配置文件中打开,并修改如下内容。</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token comment">;[inet_http_server]         ; inet (TCP) server disabled by default</span>\n<span class="token comment">;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)</span>\n<span class="token comment">;username=user              ; (default is no username (open server))</span>\n<span class="token comment">;password=123               ; (default is no password (open server))</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>修改为：</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">inet_http_server</span><span class="token punctuation">]</span></span>         ; inet (TCP) server disabled by default\n<span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.0.0.0:9001          ; (ip_address:port specifier, *:port for all iface)</span>\n<span class="token key attr-name">username</span> <span class="token punctuation">=</span> <span class="token value attr-value">user              ; (default is no username (open server))</span>\n<span class="token key attr-name">password</span> <span class="token punctuation">=</span> <span class="token value attr-value">123               ; (default is no password (open server))</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p><code>port</code>：绑定访问IP和端口，这里是绑定的是本地IP和<code>9001</code>端口</p></li><li><p><code>username</code>：登录管理后台的用户名</p></li><li><p><code>password</code>：登录管理后台的密码</p></li></ul><h2 id="配置开机启动supervisor服务" tabindex="-1"><a class="header-anchor" href="#配置开机启动supervisor服务" aria-hidden="true">#</a> 配置开机启动Supervisor服务</h2><p>添加systemctl服务和添加service服务二者选其一即可。</p><h3 id="添加systemctl服务" tabindex="-1"><a class="header-anchor" href="#添加systemctl服务" aria-hidden="true">#</a> 添加systemctl服务</h3><ol><li><p>创建supervisor.service文件。</p><blockquote><p>进入<code>/lib/systemd/system</code>目录，并创建<code>supervisor.service</code>文件，文件内容如下：</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">supervisor</span>\n<span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">network.target</span>\n\n<span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">forking</span>\n<span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/bin/supervisord -c /etc/supervisord.conf</span>\n<span class="token key attr-name">ExecStop</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/bin/supervisorctl $OPTIONS shutdown</span>\n<span class="token key attr-name">ExecReload</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/bin/supervisorctl $OPTIONS reload</span>\n<span class="token key attr-name">KillMode</span><span class="token punctuation">=</span><span class="token value attr-value">process</span>\n<span class="token key attr-name">Restart</span><span class="token punctuation">=</span><span class="token value attr-value">on-failure</span>\n<span class="token key attr-name">RestartSec</span><span class="token punctuation">=</span><span class="token value attr-value">42s</span>\n\n<span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></blockquote></li><li><p>修改文件权限</p></li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">766</span> supervisor.service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li>设置开机启动</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> supervisor.service\nsystemctl daemon-reload\nsystemctl start/restart/stop supervisor.service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="4"><li>验证是否开机自启动</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl is-enabled supervisor\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="添加service服务" tabindex="-1"><a class="header-anchor" href="#添加service服务" aria-hidden="true">#</a> 添加service服务</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>\n<span class="token comment">#</span>\n<span class="token comment"># supervisord   This scripts turns supervisord on</span>\n<span class="token comment">#</span>\n<span class="token comment"># Author:       Mike McGrath &lt;mmcgrath@redhat.com&gt; (based off yumupdatesd)</span>\n<span class="token comment">#</span>\n<span class="token comment"># chkconfig:    - 95 04</span>\n<span class="token comment">#</span>\n<span class="token comment"># description:  supervisor is a process control utility.  It has a web based</span>\n<span class="token comment">#               xmlrpc interface as well as a few other nifty features.</span>\n<span class="token comment"># processname:  supervisord</span>\n<span class="token comment"># config: /etc/supervisor/supervisord.conf</span>\n<span class="token comment"># pidfile: /var/run/supervisord.pid</span>\n<span class="token comment">#</span>\n\n<span class="token comment"># source function library</span>\n<span class="token builtin class-name">.</span> /etc/rc.d/init.d/functions\n\n<span class="token assign-left variable">RETVAL</span><span class="token operator">=</span><span class="token number">0</span>\n\n<span class="token function-name function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin class-name">echo</span> -n $<span class="token string">&quot;Starting supervisord: &quot;</span>\n    daemon <span class="token string">&quot;supervisord -c /etc/supervisord.conf &quot;</span>\n    <span class="token assign-left variable">RETVAL</span><span class="token operator">=</span><span class="token variable">$?</span>\n    <span class="token builtin class-name">echo</span>\n    <span class="token punctuation">[</span> <span class="token variable">$RETVAL</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">touch</span> /var/lock/subsys/supervisord\n<span class="token punctuation">}</span>\n\n<span class="token function-name function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin class-name">echo</span> -n $<span class="token string">&quot;Stopping supervisord: &quot;</span>\n    killproc supervisord\n    <span class="token builtin class-name">echo</span>\n    <span class="token punctuation">[</span> <span class="token variable">$RETVAL</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -f /var/lock/subsys/supervisord\n<span class="token punctuation">}</span>\n\n<span class="token function-name function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    stop\n    start\n<span class="token punctuation">}</span>\n\n<span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span>\n  start<span class="token punctuation">)</span>\n    start\n    <span class="token punctuation">;</span><span class="token punctuation">;</span>\n  stop<span class="token punctuation">)</span> \n    stop\n    <span class="token punctuation">;</span><span class="token punctuation">;</span>\n  restart<span class="token operator">|</span>force-reload<span class="token operator">|</span>reload<span class="token punctuation">)</span>\n    restart\n    <span class="token punctuation">;</span><span class="token punctuation">;</span>\n  condrestart<span class="token punctuation">)</span>\n    <span class="token punctuation">[</span> -f /var/lock/subsys/supervisord <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> restart\n    <span class="token punctuation">;</span><span class="token punctuation">;</span>\n  status<span class="token punctuation">)</span>\n    status supervisord\n    <span class="token assign-left variable">RETVAL</span><span class="token operator">=</span><span class="token variable">$?</span>\n    <span class="token punctuation">;</span><span class="token punctuation">;</span>\n  *<span class="token punctuation">)</span>\n    <span class="token builtin class-name">echo</span> $<span class="token string">&quot;Usage: <span class="token variable">$0</span> {start|stop|status|restart|reload|force-reload|condrestart}&quot;</span>\n    <span class="token builtin class-name">exit</span> <span class="token number">1</span>\n<span class="token keyword">esac</span>\n\n<span class="token builtin class-name">exit</span> <span class="token variable">$RETVAL</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><p>将上面的代码内容保存到<code>/etc/rc.d/init.d/supervisor</code>文件并将文件权限修改为755，并设置开机自启动。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">755</span> /etc/rc.d/init.d/supervisor\n<span class="token function">chkconfig</span> supervisor on\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>其它Linux发行版开机启动脚本：https://github.com/Supervisor/initscripts</p><h2 id="参考地址" tabindex="-1"><a class="header-anchor" href="#参考地址" aria-hidden="true">#</a> 参考地址</h2>',50),u={href:"https://blog.csdn.net/xyang81/article/details/51555473",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("Supervisor安装与配置（Linux/Unix进程管理工具）"),b={render:function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("p",null,[(0,e.Wm)("a",r,[l,(0,e.Wm)(a)]),t,c,o]),i,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",u,[d,(0,e.Wm)(a)])])])],64)}}}}]);