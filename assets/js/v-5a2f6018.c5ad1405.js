"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[151],{318:(a,s,e)=>{e.r(s),e.d(s,{data:()=>n});const n={key:"v-5a2f6018",path:"/languages/javascript/webpack2/statistical-analysis-of-packaging-process-using-visual-charts.html",title:"使用可视化图表统计分析打包过程",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"配置",slug:"配置",children:[]},{level:2,title:"测试",slug:"测试",children:[{level:3,title:"执行命令获取状态JSON",slug:"执行命令获取状态json",children:[]},{level:3,title:"将生成的文件上传到第三方网站",slug:"将生成的文件上传到第三方网站",children:[]}]},{level:2,title:"参考链接",slug:"参考链接",children:[]}],filePathRelative:"languages/javascript/webpack2/statistical-analysis-of-packaging-process-using-visual-charts.md",git:{updatedTime:1641800329e3,contributors:[{name:"curder",email:"q.curder@gmail.com",commits:1}]}}},4192:(a,s,e)=>{e.r(s),e.d(s,{default:()=>c});var n=e(6252);const t=(0,n.uE)('<h1 id="使用可视化图表统计分析打包过程" tabindex="-1"><a class="header-anchor" href="#使用可视化图表统计分析打包过程" aria-hidden="true">#</a> 使用可视化图表统计分析打包过程</h1><p>通过命令将项目的依赖关系输出成json文件，通过第三方网站分析json文件内容，得到项目各软件包的关联关系。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>主要是配置一个webpack命令快捷方式</p><p>编辑<code>package.json</code>文件内容，新增如下内容在<code>scripts</code>键里面。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">&quot;stats&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --env production --profile --json &gt; stats.json&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><h3 id="执行命令获取状态json" tabindex="-1"><a class="header-anchor" href="#执行命令获取状态json" aria-hidden="true">#</a> 执行命令获取状态JSON</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run stats\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="将生成的文件上传到第三方网站" tabindex="-1"><a class="header-anchor" href="#将生成的文件上传到第三方网站" aria-hidden="true">#</a> 将生成的文件上传到第三方网站</h3><ul><li>http://webpack.github.io/analyse/</li><li>https://alexkuz.github.io/webpack-chart/</li><li>https://alexkuz.github.io/stellar-webpack/</li><li>https://www.npmjs.com/package/webpack-bundle-analyzer</li></ul><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>',12),l={href:"http://blog.parryqiu.com/2017/06/16/webpack2-Statistics/",target:"_blank",rel:"noopener noreferrer"},r=(0,n.Uk)("使用可视化图表对 Webpack 2 的编译与打包进行统计分析"),i={},c=(0,e(3744).Z)(i,[["render",function(a,s){const e=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[t,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",l,[r,(0,n.Wm)(e)])])])],64)}]])},3744:(a,s)=>{s.Z=(a,s)=>{const e=a.__vccOpts||a;for(const[a,n]of s)e[a]=n;return e}}}]);