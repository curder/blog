(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3643],{3322:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>e});const e={key:"v-6689400b",path:"/languages/laravel/nova/how-to-defining-resources-use-laravel-nova.html",title:"使用 laravel nova 定义资源",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"建立模型和数据文件",slug:"建立模型和数据文件",children:[]},{level:2,title:"建立 nova 资源文件",slug:"建立-nova-资源文件",children:[]},{level:2,title:"参考链接",slug:"参考链接",children:[]}],filePathRelative:"languages/laravel/nova/how-to-defining-resources-use-laravel-nova.md",git:{updatedTime:1638951195e3,contributors:[]}}},9429:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>v});var e=s(6252);const p=(0,e.Wm)("h1",{id:"使用-laravel-nova-定义资源",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#使用-laravel-nova-定义资源","aria-hidden":"true"},"#"),(0,e.Uk)(" 使用 laravel nova 定义资源")],-1),t=(0,e.Uk)("通过"),o={href:"/languages/laravel/nova/how-to-installation-laravel-nove.md",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("安装 laravel nova"),c=(0,e.Uk)("已经了解了 nova 的安装。"),r=(0,e.uE)('<p>下面通过简单的文章增删改查来展示 nova 的高效开发后台。</p><h2 id="建立模型和数据文件" tabindex="-1"><a class="header-anchor" href="#建立模型和数据文件" aria-hidden="true">#</a> 建立模型和数据文件</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:model Post -m\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>执行完上面的命令会建立两个文件，分别是<code>app/Post.php</code>和<code>database/migrations/2019_03_07_091258_create_posts_table.php</code>文件。</p><p>修改<code>2019_03_07_091258_create_posts_table.php</code>数据库迁移文件的内容：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**\n * Run the migrations.\n *\n * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">bigIncrements</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>修改完迁移文件后，使用命令将迁移文件应用到数据库</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan migrate\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="建立-nova-资源文件" tabindex="-1"><a class="header-anchor" href="#建立-nova-资源文件" aria-hidden="true">#</a> 建立 nova 资源文件</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan nova:resource Post\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',10),i=(0,e.uE)('<p>可以看到，新增页面没有任何的表字段可以添加。</p><p>命令运行完命令后会添加<code>app/Nova/Post.php</code>，可以通过修改其中的<code>fields</code>方法返回值：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Nova<span class="token punctuation">\\</span>Fields<span class="token punctuation">\\</span>Text</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Nova<span class="token punctuation">\\</span>Fields<span class="token punctuation">\\</span>Markdown</span><span class="token punctuation">;</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">fields</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span>\n        <span class="token class-name static-context">ID</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sortable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name static-context">Text</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sortable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token class-name static-context">Markdown</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Body&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>再次查看新增页面可以看到如下的输出。</p>',4),u=(0,e.Wm)("p",null,"至此，一个简单的 Posts 管理界面开发完毕，后面再对这些 CURD 界面进行一些定制化开发。",-1),k=(0,e.Wm)("h2",{id:"参考链接",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#参考链接","aria-hidden":"true"},"#"),(0,e.Uk)(" 参考链接")],-1),d={href:"https://nova.laravel.com/docs/2.0/resources/",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("Laravel Nova Resources Document"),m={href:"https://leijingwei.com/archives/31",target:"_blank",rel:"noopener noreferrer"},g=(0,e.Uk)("Laravel Nova 入门创建一个简单的博客(一)"),v={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("p",null,[t,(0,e.Wm)("a",o,[l,(0,e.Wm)(s)]),c]),r,(0,e.Wm)("img",{src:n.$withBase("/images/languages/laravel/nova/how-to-defining-resources-use-laravel-nova/laravel-nova-post-resource-init-index.png"),alt:""},null,8,["src"]),(0,e.Wm)("img",{src:n.$withBase("/images/languages/laravel/nova/how-to-defining-resources-use-laravel-nova/laravel-nova-post-resource-init-create.png"),alt:""},null,8,["src"]),i,(0,e.Wm)("img",{src:n.$withBase("/images/languages/laravel/nova/how-to-defining-resources-use-laravel-nova/laravel-nova-post-resource-add-fields-for-create.png"),alt:""},null,8,["src"]),u,k,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",d,[b,(0,e.Wm)(s)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",m,[g,(0,e.Wm)(s)])])])],64)}}}}]);