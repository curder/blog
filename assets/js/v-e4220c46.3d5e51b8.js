(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4498],{4546:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>e});const e={key:"v-e4220c46",path:"/languages/javascript/webpack2/webpack-dev-server-complete-code-change-automatically-refresh-the-browser.html",title:"webpack-dev-server完成代码更改自动刷新",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装webpack-dev-server",slug:"安装webpack-dev-server",children:[]},{level:2,title:"执行命令",slug:"执行命令",children:[]},{level:2,title:"配置 webpack-dev-server",slug:"配置-webpack-dev-server",children:[]}],filePathRelative:"languages/javascript/webpack2/webpack-dev-server-complete-code-change-automatically-refresh-the-browser.md",git:{updatedTime:1628059322e3,contributors:[]}}},2521:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>u});var e=a(6252);const p=(0,e.uE)('<h1 id="webpack-dev-server完成代码更改自动刷新" tabindex="-1"><a class="header-anchor" href="#webpack-dev-server完成代码更改自动刷新" aria-hidden="true">#</a> webpack-dev-server完成代码更改自动刷新</h1><p>安装好webpack并配置命令之后，可以很方便的通过<code>npm run build</code>生成压缩代码，但是每次当更新完代码后，要重复执行命令才能正常构建好代码。</p><p>那么可不可以在我们更新完代码后，自动编译并且刷新浏览器呢？可以通过<code>webpack-dev-server</code>这个软件包实现。</p><h2 id="安装webpack-dev-server" tabindex="-1"><a class="header-anchor" href="#安装webpack-dev-server" aria-hidden="true">#</a> 安装webpack-dev-server</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i webpack-dev-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>这里需要注意的是下载的webpack-dev-server的版本与webpack要匹配，例如：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.7.0&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;webpack-dev-server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.11.2&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="执行命令" tabindex="-1"><a class="header-anchor" href="#执行命令" aria-hidden="true">#</a> 执行命令</h2><p>修改项目<code>package.json</code>中的<code>scripts</code>中添加<code>&quot;start&quot;: &quot;webpack-dev-server --env development&quot;</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack-dev-server --env development&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --env production&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>配置好快捷命令后，通过命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">npm</span> run start\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>默认启动的是<code>http://localhost:8080/</code>，监听文件变化，并自动构建和刷新浏览器。</p><h2 id="配置-webpack-dev-server" tabindex="-1"><a class="header-anchor" href="#配置-webpack-dev-server" aria-hidden="true">#</a> 配置 webpack-dev-server</h2>',14),t=(0,e.Uk)("官方文档"),r={href:"https://webpack.js.org/configuration/dev-server/",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("参考这里"),c=(0,e.Uk)("。"),l=(0,e.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n    devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n        contentBase<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        host<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HOST</span><span class="token punctuation">,</span>\n        port<span class="token operator">:</span> <span class="token number">9000</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',1),u={render:function(s,n){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("p",null,[t,(0,e.Wm)("a",r,[o,(0,e.Wm)(a)]),c]),l],64)}}}}]);