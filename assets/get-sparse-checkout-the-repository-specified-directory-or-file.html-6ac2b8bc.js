import{_ as o,M as r,p as t,q as c,R as e,t as a,N as n,a1 as i}from"./framework-fb0bc66b.js";const d={},l=i('<h1 id="git获取仓库指定目录或文件" tabindex="-1"><a class="header-anchor" href="#git获取仓库指定目录或文件" aria-hidden="true">#</a> Git获取仓库指定目录或文件</h1><p>使用<code>git clone</code>可以获取远程服务器的所有仓库代码，然而有时想查看仓库里某个目录或文件，例如<code>examples</code>目录的时候。</p><p>从<code>1.7.0</code>版本开始git提供稀疏检出的功能。所谓稀疏检出就是本地版本库检出时不检出全部，只将指定的文件从本地版本库检出到工作区，而其他未指定的文件则不予检出（即使这些文件存在于工作区，其修改也会被忽略）。</p><h2 id="相关步骤" tabindex="-1"><a class="header-anchor" href="#相关步骤" aria-hidden="true">#</a> 相关步骤</h2><ul><li>检查Git版本</li><li>创建本地存放文件夹</li><li><code>git init</code>初始化仓库</li><li>添加远程仓库地址</li><li>使用Sparse checkout模式</li><li>配置要检出的目录或文件</li><li>从远程将目标目录或文件拉取下来</li></ul><h2 id="具体操作" tabindex="-1"><a class="header-anchor" href="#具体操作" aria-hidden="true">#</a> 具体操作</h2>',6),h=e("code",null,"git",-1),p=e("code",null,"1.8.3.1",-1),u={href:"https://github.com/swoole/swoole-src.git",target:"_blank",rel:"noopener noreferrer"},g=i(`<h3 id="检查git版本" tabindex="-1"><a class="header-anchor" href="#检查git版本" aria-hidden="true">#</a> 检查Git版本</h3><p>在命令行中运行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>比如保证git的版本大于<code>1.7.0</code>，这里以 <code>git version 1.8.3.1</code>作为演示。</p></blockquote><h3 id="创建仓库存放目录" tabindex="-1"><a class="header-anchor" href="#创建仓库存放目录" aria-hidden="true">#</a> 创建仓库存放目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> swoole-src-examples <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> swoole-src-examples
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>创建一个目录，这里以<code>swoole-src-example</code>，并且使用<code>cd</code>命令进入到目录中。</p></blockquote><h3 id="初始化仓库" tabindex="-1"><a class="header-anchor" href="#初始化仓库" aria-hidden="true">#</a> 初始化仓库</h3><p>执行初始化仓库的命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加远程仓库地址" tabindex="-1"><a class="header-anchor" href="#添加远程仓库地址" aria-hidden="true">#</a> 添加远程仓库地址</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/swoole/swoole-src.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用sparse-checkout模式" tabindex="-1"><a class="header-anchor" href="#使用sparse-checkout模式" aria-hidden="true">#</a> 使用Sparse checkout模式</h3><p>使用下面的命令允许<code>config</code>中使用<strong>Sparse checkout</strong>模式。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config core.sparsecheckout <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置要检出的目录或文件" tabindex="-1"><a class="header-anchor" href="#配置要检出的目录或文件" aria-hidden="true">#</a> 配置要检出的目录或文件</h3><p>将要检出的目录或文件使用文件追加的形式写入到git的配置<code>.git/info/sparse-checkout</code>文件中，<strong>允许添加多行</strong>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;examples/*&quot;</span> <span class="token operator">&gt;&gt;</span> .git/info/sparse-checkout
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>多次添加配置后，通过<code>cat .git/info/sparse-checkout</code>命令查看最终添加的目录或者文件。</p></blockquote><h3 id="从远程将目标目录或文件拉取下来" tabindex="-1"><a class="header-anchor" href="#从远程将目标目录或文件拉取下来" aria-hidden="true">#</a> 从远程将目标目录或文件拉取下来</h3><p>当仓库还是空白的情况下，首次需要执行下面的命令从远程将配置的目录或者文件拉取到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> pull origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="对配置增删改后重新获取代码" tabindex="-1"><a class="header-anchor" href="#对配置增删改后重新获取代码" aria-hidden="true">#</a> 对配置增删改后重新获取代码</h3><p>在对配置文件<code>.git/info/sparse-checkout</code>的内容进行<strong>增</strong>、<strong>删</strong>、<strong>改</strong>操作之后，使用下面的命令重新修正目录和文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,26),b={href:"https://www.worldhello.net/gotgit/08-git-misc/090-sparse-checkout-and-shallow-clone.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.jianshu.com/p/e36cbcc8f75d",target:"_blank",rel:"noopener noreferrer"};function v(k,f){const s=r("ExternalLinkIcon");return t(),c("div",null,[l,e("p",null,[a("演示"),h,a("的版本是"),p,a("，远程仓库地址是"),e("a",u,[a("swoole/swoole-src"),n(s)]),a("。")]),g,e("ul",null,[e("li",null,[e("p",null,[e("a",b,[a("稀疏检出和浅克隆"),n(s)])])]),e("li",null,[e("p",null,[e("a",m,[a("git checkout仓库项目某个文件夹"),n(s)])])])])])}const _=o(d,[["render",v],["__file","get-sparse-checkout-the-repository-specified-directory-or-file.html.vue"]]);export{_ as default};
