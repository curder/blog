import{_ as l,M as r,p as i,q as d,R as a,t as s,N as n,a1 as o}from"./framework-ff09ffed.js";const t="/blog/assets/firewalld-start-status-77565008.png",c="/blog/assets/firewalld-stop-status-4a3d872d.png",p={},u=o(`<h1 id="centos7中firewalld防火墙的使用" tabindex="-1"><a class="header-anchor" href="#centos7中firewalld防火墙的使用" aria-hidden="true">#</a> CentOS7中firewalld防火墙的使用</h1><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p><code>firewalld</code>是 CentOS7 的一大特性，最大的好处是：1. 支持动态更新，不用重启服务 2. 加入了防火墙的“zone”概念。</p><p><code>firewalld</code>的字符界面管理工具是 <code>firewall-cmd</code>。</p><p>zone概念： 硬件防火墙默认一般有三个区，firewalld引入这一概念，系统默认存在以下区域：</p><ul><li><code>drop</code>：默认丢弃所有包</li><li><code>block</code>：拒绝所有外部连接，允许内部发起的连接</li><li><code>public</code>：指定外部连接可以进入</li><li><code>external</code>：这个不太明白，功能上和上面相同，允许指定的外部连接</li><li><code>dmz</code>：和硬件防火墙一样，受限制的公共连接可以进入</li><li><code>work</code>：工作区，概念和workgoup一样，也是指定的外部连接允许</li><li><code>home</code>：类似家庭组</li><li><code>internal</code>：信任所有连接</li></ul><h2 id="firewalld管理命令" tabindex="-1"><a class="header-anchor" href="#firewalld管理命令" aria-hidden="true">#</a> firewalld管理命令</h2><p>CentOS 7 和 Fedora 20+ 已经包含了 Firewalld，但是默认没有激活。</p><h3 id="启动并在系统引导时启动该服务" tabindex="-1"><a class="header-anchor" href="#启动并在系统引导时启动该服务" aria-hidden="true">#</a> 启动并在系统引导时启动该服务</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start firewalld
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="停止并禁用" tabindex="-1"><a class="header-anchor" href="#停止并禁用" aria-hidden="true">#</a> 停止并禁用</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop firewalld
<span class="token function">sudo</span> systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看状态" tabindex="-1"><a class="header-anchor" href="#查看状态" aria-hidden="true">#</a> 查看状态</h3><h4 id="简单查看" tabindex="-1"><a class="header-anchor" href="#简单查看" aria-hidden="true">#</a> 简单查看</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--state</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>输出应该是 <code>running</code> 或者 <code>not running</code>。</p></blockquote><h3 id="查看守护进程状态" tabindex="-1"><a class="header-anchor" href="#查看守护进程状态" aria-hidden="true">#</a> 查看守护进程状态</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+t+'" alt="firewalld启用状态"></p><p><img src="'+c+`" alt="firewalld禁用状态"></p><h3 id="重新加载配置" tabindex="-1"><a class="header-anchor" href="#重新加载配置" aria-hidden="true">#</a> 重新加载配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p><code>firewalld</code>默认配置文件有两个。</p><ol><li><p><code>/usr/lib/firewalld/</code> 如默认区域和公用服务。在使用中尽量避免修改它们，因为每次 firewall 软件包在更新的时候都会覆盖这些文件。</p></li><li><p><code>/etc/firewalld/</code> 保存系统配置文件。 这些文件中的配置将覆盖默认配置。</p></li></ol><h3 id="配置集" tabindex="-1"><a class="header-anchor" href="#配置集" aria-hidden="true">#</a> 配置集</h3><p>firewalld 使用两个配置集：<strong>运行时</strong>和<strong>持久</strong>。 在系统重新启动或重新启动 firewalld 时，不会保留运行时的配置更改，而对持久配置集的更改不会应用于正在运行的系统。</p><p>默认情况下，<code>firewall-cmd</code> 命令适用于运行时配置，但在执行命令的时候加上 <code>--permanent</code> 参数将保存到持久配置中。可以选择下面的方式之一进行持久化配置：</p><ol><li>将规则同时添加到持久规则集和运行时规则集中</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-service<span class="token operator">=</span>http <span class="token parameter variable">--permanent</span>
<span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-service<span class="token operator">=</span>http
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将规则添加到持久规则集中并重新加载 firewalld</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-service<span class="token operator">=</span>http <span class="token parameter variable">--permanent</span>
<span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用<code>reload</code>命令重载配置的时候会删除所有运行时配置并应用永久配置。因为 firewalld 动态管理规则集，所以它不会破坏现有的连接和会话。</p></blockquote><h2 id="centos7-开放端口" tabindex="-1"><a class="header-anchor" href="#centos7-开放端口" aria-hidden="true">#</a> CentOs7 开放端口</h2><h3 id="开放端口" tabindex="-1"><a class="header-anchor" href="#开放端口" aria-hidden="true">#</a> 开放端口</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令含义：</p><ul><li><p><code>--zone</code> 作用域</p></li><li><p><code>--add-port=80/tcp</code> 添加端口，格式为：端口/通讯协议</p></li><li><p><code>--permanent</code> 永久生效，没加此参数重启 firewall 后修改的配置失效</p></li></ul><h3 id="允许或者拒绝任意端口-协议" tabindex="-1"><a class="header-anchor" href="#允许或者拒绝任意端口-协议" aria-hidden="true">#</a> 允许或者拒绝任意端口/协议</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">12345</span>/tcp <span class="token parameter variable">--permanent</span>
<span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">12345</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>允许或者禁用 12345 端口的 TCP 流量</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">12345</span>/udp <span class="token parameter variable">--permanent</span>
<span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">12345</span>/udp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>允许或禁用 12345 端口的 UDP 流量。</p></blockquote><h3 id="查看端口的tcp协议是否被允许" tabindex="-1"><a class="header-anchor" href="#查看端口的tcp协议是否被允许" aria-hidden="true">#</a> 查看端口的tcp协议是否被允许</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --query-port<span class="token operator">=</span><span class="token number">8080</span>/tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看所有打开的端口" tabindex="-1"><a class="header-anchor" href="#查看所有打开的端口" aria-hidden="true">#</a> 查看所有打开的端口</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --list-ports
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="屏蔽-解封ip" tabindex="-1"><a class="header-anchor" href="#屏蔽-解封ip" aria-hidden="true">#</a> 屏蔽/解封IP</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd  --add-rich-rule<span class="token operator">=</span><span class="token string">&quot;rule family=&#39;ipv4&#39; source address=&#39;114.114.114.114&#39; reject&quot;</span>  <span class="token comment"># 临时屏蔽某个ip，重启失效</span>
firewall-cmd  --add-rich-rule<span class="token operator">=</span><span class="token string">&quot;rule family=&#39;ipv4&#39; source address=&#39;114.114.114.114&#39; reject&quot;</span>  <span class="token parameter variable">--permanent</span> <span class="token comment"># 永久屏蔽ip，重启依旧生效</span>

firewall-cmd --remove-rich-rule<span class="token operator">=</span><span class="token string">&quot;rule family=&#39;ipv4&#39; source address=&#39;114.114.114.114&#39; reject&quot;</span> <span class="token comment"># 永久删除屏蔽ip，重启失效</span>

firewall-cmd --remove-rich-rule<span class="token operator">=</span><span class="token string">&quot;rule family=&#39;ipv4&#39; source address=&#39;114.114.114.114&#39; reject&quot;</span>  <span class="token parameter variable">--permanent</span> <span class="token comment"># 永久删除屏蔽ip，重启依旧生效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考地址" tabindex="-1"><a class="header-anchor" href="#参考地址" aria-hidden="true">#</a> 参考地址</h2>`,50),h={href:"https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/security_guide/sec-using_firewalls#sec-Introduction_to_firewalld",target:"_blank",rel:"noopener noreferrer"},m={href:"https://linux.cn/article-8098-1.html",target:"_blank",rel:"noopener noreferrer"},b={href:"http://blog.51cto.com/mrxiong2017/2084726",target:"_blank",rel:"noopener noreferrer"};function v(f,k){const e=r("ExternalLinkIcon");return i(),d("div",null,[u,a("ul",null,[a("li",null,[a("p",null,[a("a",h,[s("firewalld官方文档"),n(e)])])]),a("li",null,[a("p",null,[a("a",m,[s("CentOS 上的 FirewallD 简明指南"),n(e)])])]),a("li",null,[a("p",null,[a("a",b,[s("CentOS 7 下使用 FirewallD防火墙的配置与管理"),n(e)])])])])])}const w=l(p,[["render",v],["__file","how-to-use-firewall-package-in-centos7.html.vue"]]);export{w as default};
