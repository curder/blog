import{_ as n,M as o,p as c,q as t,R as a,t as e,N as r,a1 as i}from"./framework-ff09ffed.js";const d={},l=a("h1",{id:"如何在macosx上安装go",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#如何在macosx上安装go","aria-hidden":"true"},"#"),e(" 如何在MacOSX上安装Go")],-1),p=a("h2",{id:"安装homebrew",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装homebrew","aria-hidden":"true"},"#"),e(" 安装Homebrew")],-1),h={href:"http://brew.sh/",target:"_blank",rel:"noopener noreferrer"},u=i(`<h2 id="安装golang" tabindex="-1"><a class="header-anchor" href="#安装golang" aria-hidden="true">#</a> 安装golang</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew update <span class="token operator">&amp;&amp;</span> brew upgrade
brew <span class="token function">install</span> go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h2><h3 id="创建项目目录" tabindex="-1"><a class="header-anchor" href="#创建项目目录" aria-hidden="true">#</a> 创建项目目录</h3><p>创建一个目录作为<code>gopath</code>，这里举例将其命名为<code>go-lang-projects</code>，并在目录创建三个目录<code>bin</code>、<code>src</code>、<code>pkg</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/go-lang-projects/<span class="token punctuation">{</span>bin,pkg,src<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="保存环境变量" tabindex="-1"><a class="header-anchor" href="#保存环境变量" aria-hidden="true">#</a> 保存环境变量</h3><p>如果当前用户shell使用的<code>/bin/bash</code>，则将下面的环境变量写入到<code>~/.bash_profile</code>中，如果使用的是<code>zsh</code>，则将下面的内容写入到<code>~/.zshrc</code>中，下面的操作以<code>~/.zshrc</code>为例。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;# go path&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token string">&quot;export GOROOT=/usr/local/opt/go/libexec&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token string">&quot;export GOPATH=~/go-lang-projects&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">echo</span> <span class="token string">&quot;export PATH=\\<span class="token environment constant">$PATH</span>:\\<span class="token variable">$GOROOT</span>/bin:\\<span class="token variable">$GOPATH</span>/bin&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后使用<code>source</code>命令使配置生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function b(g,m){const s=o("ExternalLinkIcon");return c(),t("div",null,[l,p,a("p",null,[e("在"),a("a",h,[e("Homebrew"),r(s)]),e("复制安装命令，在控制台运行完成安装")]),u])}const k=n(d,[["render",b],["__file","how-to-install-go-lang-on-mac-osx.html.vue"]]);export{k as default};
