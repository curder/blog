import{_ as t,M as l,p as c,q as o,R as a,t as n,N as e,a1 as p}from"./framework-fb0bc66b.js";const i={},d=a("h1",{id:"sublimt插件之emmet快速编写html-css",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#sublimt插件之emmet快速编写html-css","aria-hidden":"true"},"#"),n(" Sublimt插件之Emmet快速编写HTML/CSS")],-1),u=a("p",null,"在开发前端项目时，常常需要编写大量的HTML/CSS代码，标签、属性等使用常规方式一个一个敲打效率极低。",-1),r={href:"https://emmet.io/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://emmet.io/download/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.emmet.io/cheat-sheet/",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>用<code>Package Control</code>安装<code>Emmet</code>（<code>⌘(Command) + ⇧(Shift) + P</code> –&gt; 输入 <code>install</code>…打开<code>Package Control</code> -&gt; 输入<code>Emmet</code>后回车进入安装）。</p><h2 id="插件使用" tabindex="-1"><a class="header-anchor" href="#插件使用" aria-hidden="true">#</a> 插件使用</h2><p><code>Emmet</code>常用于快速编辑 HTML 、 CSS 代码，它会根据当前文件的解析格式来判断是使用 HTML 语法还是 CSS 语法来解析。</p><p>如果是一个临时文件比如使用<code>⌘ + N</code>打开的新文件，可以通过指令设置它的文件类型，操作方法是使用 <code>⌘ + ⇧ + P</code> 呼出面板，输入<code>Set Syntax</code>然后就可以选择当前要解析的文件类型。</p><h3 id="html之class或者id元素" tabindex="-1"><a class="header-anchor" href="#html之class或者id元素" aria-hidden="true">#</a> HTML之Class或者ID元素<code>.</code> <code>#</code></h3><blockquote><p>下面的指令只需要设置好文件类型，写好后默认按Tab键后会按预期生成结构。</p></blockquote><ul><li>生成ID元素的div</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>div#container
#container // 默认生成的标签就是div，所以这里也可以省略
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>生成ID的元素使用<code>#</code></p></blockquote><ul><li>生成Class</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>div.container
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>生成Class的元素使用<code>.</code></p></blockquote><ul><li>同时生成Class和ID</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>div#container.container
div#container.container.items

/
/
多个class亦同理
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="html之兄弟元素" tabindex="-1"><a class="header-anchor" href="#html之兄弟元素" aria-hidden="true">#</a> HTML之兄弟元素<code>+</code></h3><p>生成标签的兄弟标签，即平级元素，使用指令 <code>+</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>header + div.container + footer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>得到下面的HTML结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="html之后代元素" tabindex="-1"><a class="header-anchor" href="#html之后代元素" aria-hidden="true">#</a> HTML之后代元素<code>&gt;</code></h3><p><code>&gt;</code>表示后面要生成的内容是当前标签的后代。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>div.nav &gt; ul &gt; li
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>得到下面的HTML结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="html之上级元素" tabindex="-1"><a class="header-anchor" href="#html之上级元素" aria-hidden="true">#</a> HTML之上级元素<code>^</code></h3><p>上级 （Climb-up）元素是什么意思呢？前面咱们说过了生成下级元素的符号<code>&gt;</code>，当使用 <code>div&gt;ul&gt;li</code> 的指令之后，再继续写下去，那么后续内容都是在 li 下级的。如果我想编写一个跟 ul 平级的 span 标签，那么我需要先用 <code>^</code> 提升一下层次</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>div.nav &gt; ul &gt; li ^ span
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>得到下面的HTML结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果还需要将<code>span</code>上升一个层级，可以使用两个<code>^^</code>继续提升<code>span</code>元素的层级。</p><h3 id="html之重复多份" tabindex="-1"><a class="header-anchor" href="#html之重复多份" aria-hidden="true">#</a> HTML之重复多份<code>*</code></h3><p>特别是在编写一个无序列表导航的时候，<code>ul</code>下面的<code>li</code>肯定不只是一份，通常要生成很多个<code>li</code> 标签。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ul&gt;li*10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就会直接生成10个无序列表项。</p><h3 id="html之分组" tabindex="-1"><a class="header-anchor" href="#html之分组" aria-hidden="true">#</a> HTML之分组<code>()</code></h3><p>Emmet插件中使用<code>()</code>来分组，代表了一个代码块，分组内部的嵌套和层级关系和分组外部无关。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+div.container+footer&gt;div.columns
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>生成的HTML结构如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="html生成之属性-attr-value" tabindex="-1"><a class="header-anchor" href="#html生成之属性-attr-value" aria-hidden="true">#</a> HTML生成之属性<code>[attr=&quot;value&quot;]</code></h3><p>在实际编码中，常常需要附带一些属性，比如<code>a</code>标签的<code>href</code>和<code>title</code>属性。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>a[href=&quot;https://curder.com&quot; title=&quot;Curder&#39;s Blog&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也支持自定义属性</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>div[data-title=&quot;Curder&#39;s Blog&quot; data-content=&quot;SOME CONTENT&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="html生成之编号" tabindex="-1"><a class="header-anchor" href="#html生成之编号" aria-hidden="true">#</a> HTML生成之编号<code>$</code></h3><p>在书写无序列表，我想为5个 <code>li</code> 增加一个 <code>class</code> 属性值 <code>item1</code> ，然后依次递增从 <code>1-5</code>，那么就需要使用 <code>$</code> 符号</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ul&gt;li.item$*5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>$</code>在这里标识一位数字，可以书写多个，如果只书写一个就从<code>1</code>开始，如果出现多个就从<code>0</code>开始。</p><p>如果想生成三位数的序号，那么要写3个<code>$</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ul&gt;li.item$$$*5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>指定从编号开始<code>@</code> 上面说到的都是从1开始的序号，使用 <code>@N</code>，<code>N</code>代表开始的数字。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ul&gt;li.item$@3*5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>倒序<code>@-</code> 上面的都是从小到大进行排序生成的HTML结构，使用<code>@-</code></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ul&gt;li.item$@-3*5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="html生成之文本内容" tabindex="-1"><a class="header-anchor" href="#html生成之文本内容" aria-hidden="true">#</a> HTML生成之文本内容<code>{}</code></h3><p>生成超链接一般要加上可点击的文本内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>a[href=&quot;https://curder.com&quot; title=&quot;Curder&#39;s Blog&quot;]{Curder&#39;s Blog}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>值得注意的是：在编写<code>Emmet</code>指令的时候尽量不要使用空格来排版，因为可能会导致代码无法使用。</p></blockquote><h2 id="html-简写规则简单总结" tabindex="-1"><a class="header-anchor" href="#html-简写规则简单总结" aria-hidden="true">#</a> HTML 简写规则简单总结</h2><ol><li><p><code>E#id</code> 代表<code>id</code>属性</p></li><li><p><code>E.class</code> 代表<code>class</code>属性</p></li><li><p><code>E[attr=foo]</code> 代表某一个特定属性</p></li><li><p><code>E{foo}</code> 代表标签包含的内容是<code>foo</code></p></li><li><p><code>E&gt;N</code> 代表<code>N</code>是<code>E</code>的子元素</p></li><li><p><code>E+N</code> 代表<code>N</code>是<code>E</code>的同级元素</p></li><li><p><code>E^N</code> 代表<code>N</code>是<code>E</code>的上级元素</p></li></ol><blockquote><p><code>E</code>代表HTML对应的标签，比如<code>div</code>。</p></blockquote><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,63),m={href:"https://www.w3cplus.com/tools/emmet-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"},h={href:"http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://youtu.be/5BIAdWNcr8Y",target:"_blank",rel:"noopener noreferrer"};function x(f,q){const s=l("ExternalLinkIcon");return c(),o("div",null,[d,u,a("p",null,[n("还好有"),a("a",r,[n("Emmet"),e(s)]),n("，它提供了相对简单的语法规则。使得编写很少的代码就能生成预期，极大的提高了代码的编写效率，并且它还支持觉得多数的编辑器，"),a("a",g,[n("查看更多"),e(s)]),n("。")]),a("p",null,[n("这里只针对HTML相关的快捷编写方式，更多"),a("a",k,[n("参考这里"),e(s)]),n("。")]),v,a("ul",null,[a("li",null,[a("p",null,[a("a",m,[n("前端开发必备！Emmet使用手册"),e(s)])])]),a("li",null,[a("p",null,[a("a",h,[n("HTML/CSS 速写神器：Emmet"),e(s)])])]),a("li",null,[a("p",null,[a("a",b,[n("Emmet For Faster HTML & CSS Workflow"),e(s)])])])])])}const E=t(i,[["render",x],["__file","sublime-emmet-quickly-write-html-and-css.html.vue"]]);export{E as default};
