import{_ as t,M as r,p as c,q as o,R as n,t as e,N as s,a1 as i}from"./framework-7e09d608.js";const l={},d=n("h1",{id:"在centos上配置-let-s-encrypt-实现站点-ssl",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在centos上配置-let-s-encrypt-实现站点-ssl","aria-hidden":"true"},"#"),e(" 在CentOS上配置 Let's Encrypt 实现站点 SSL")],-1),p={href:"https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"},u={href:"https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"那么如何在自己的网站上使用 Let's Encrypt 实现 SSL。",-1),m={href:"https://certbot.eff.org",target:"_blank",rel:"noopener noreferrer"},b=i('<p>下面的总结全部基于CentOS系统，Web服务器选择Nginx。</p><h2 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件" aria-hidden="true">#</a> 前提条件</h2><ul><li><p>自己拥有一个域名</p></li><li><p><code>*Unix</code>的服务器</p></li></ul><blockquote><p>注意如果你的域名没备案，在购买主机的时候，推荐购买境外的主机。并将域名自己解析到云主机IP。</p></blockquote><h2 id="安装-nginx" tabindex="-1"><a class="header-anchor" href="#安装-nginx" aria-hidden="true">#</a> 安装 Nginx</h2><p>如果机器已经安装过 Nginx 服务的话，建议跳过这步。</p>',6),h={href:"https://fedoraproject.org/wiki/EPEL",target:"_blank",rel:"noopener noreferrer"},g=i(`<p>我们需要Nginx安装的EPEL仓库，因为官方CentOS仓库中不存在Nginx软件包。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> epel-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行完成上面的yum命令安装EPEL仓库。</p><blockquote><p>通过命令<code>yum repolist</code>检查升级的结果。 在列表中应该能看到这行数据<code>epel/x86_64 Extra Packages for Enterprise Linux 7 - x86_64 12400</code>，则表示安装<code>epel</code>成功。</p></blockquote><p>接下来运行下面的命令安装nginx到系统默认位置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认安装的nginx，配置文件在<code>/etc/nginx/conf.d</code>下，日志文件在<code>/var/log/nginx/</code>。</p><h2 id="安装-certbot" tabindex="-1"><a class="header-anchor" href="#安装-certbot" aria-hidden="true">#</a> 安装 Certbot</h2><p>执行命令安装 Certbot 的 Nginx 包。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> certbot-nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置-nginx" tabindex="-1"><a class="header-anchor" href="#配置-nginx" aria-hidden="true">#</a> 配置 Nginx</h2><p>安装完 Nginx 和 Certbot 之后，需要简单配置 Nginx 以便于 Let&#39;s Encrypt 能起作用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vi</span> /etc/nginx/conf.d/examlpe.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 vi 编辑器打开 <code>/etc/nginx/conf.d/examlpe.com</code>，可以直接删除里面的所有内容，然后再添加下面的配置：</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">listen</span> [::]:80</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server_name</span> examlpe.com www.examlpe.com</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意上面的的 <code>example.com</code> 换成您自己的域名。</p></blockquote><p>保存退出之后，执行以下命令来检测 Nginx 的配置文件是否有错</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> nginx <span class="token parameter variable">-t</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果出现类似 <code>syntax ok</code> 这样的语句，就说明 Nginx 的配置文件没有问题。之后就是重新加载 Nginx 的配置文件了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> nginx restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="签发-ssl-证书" tabindex="-1"><a class="header-anchor" href="#签发-ssl-证书" aria-hidden="true">#</a> 签发 SSL 证书</h2><p>前面的两大步配置完成，就可以使用 Let&#39;s Encrypt 签发 SSL 证书了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> certbot <span class="token parameter variable">--nginx</span> <span class="token parameter variable">-d</span> example.com <span class="token parameter variable">-d</span> www.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意上面的的 <code>example.com</code> 换成您自己的域名。</p></blockquote><p>如果你第一次运行 certbot 命令的话，你需要在弹出的窗口输入你的邮箱地址还有需要接受 Let&#39;s Encrypt 的协议。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.
-------------------------------------------------------------------------------
1: No redirect - Make no further changes to the webserver configuration.
2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for
new sites, or if you&#39;re confident your site works on HTTPS. You can undo this
change by editing your web server&#39;s configuration.
-------------------------------------------------------------------------------
Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel):
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有特殊情况建议按下2，无论如何都重定向到HTTPS。</p><p>选择完毕之后，等待 SSL 生成完毕，就会有类似这样的输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/your-domain.com/fullchain.pem. Your cert will
   expire on 2011-12-29. To obtain a new or tweaked version of this
   certificate in the future, simply run certbot again with the
   &quot;certonly&quot; option. To non-interactively renew *all* of your
   certificates, run &quot;certbot renew&quot;
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let&#39;s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在上面的文字中，这个 <code>/etc/letsencrypt/live/example.com/fullchain.pem</code> 路径很重要，就是上面命令生成的 SSL 证书路径。</p><p>其实到这里，访问 example.com 应该就可以看到 https 的效果了。</p>`,31);function x(f,k){const a=r("ExternalLinkIcon");return c(),o("div",null,[d,n("p",null,[e("今天早些时候 Let's Encrypt 的通配证书上线了，从此所有子域名开启"),n("a",p,[e("HTTPS"),s(a)]),e("就简单了。")]),n("p",null,[e("更多信息可以查看这里 "),n("a",u,[e("ACME v2 and Wildcard Certificate Support is Live"),s(a)])]),v,n("p",null,[e("其实安装流程可以通过"),n("a",m,[e("参考这里"),s(a)]),e("获取，这里只是做一个总结。")]),b,n("p",null,[e("EPEL (Extra Packages for Enterprise Linux，企业版Linux的额外软件包) 是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。这个源兼容RHEL及像CentOS和Scientific Linux这样的衍生版本。 更多详细介绍查看这里："),n("a",h,[e("EPEl"),s(a)])]),g])}const E=t(l,[["render",x],["__file","configure-lets-encrypt-to-implement-site-ssl.html.vue"]]);export{E as default};
