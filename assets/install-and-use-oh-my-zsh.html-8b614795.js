import{_ as c,M as i,p as o,q as d,R as s,t as a,N as e,V as r,a1 as l}from"./framework-ff09ffed.js";const h={},u=s("h1",{id:"安装和使用oh-my-zsh",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装和使用oh-my-zsh","aria-hidden":"true"},"#"),a(" 安装和使用Oh-My-Zsh")],-1),p=s("p",null,[a("shell 俗称壳，C语言编写的命令解析器程序，是用户使用 Linux 的桥梁。Linux/Unix 提供了很多种 Shell。常用的 Shell 有这么几种："),s("code",null,"sh"),a("、"),s("code",null,"bash"),a("、"),s("code",null,"csh"),a("等。")],-1),b=s("code",null,"bash",-1),m=s("code",null,"zsh",-1),v={href:"http://ohmyz.sh/",target:"_blank",rel:"noopener noreferrer"},_=l(`<h2 id="安装zsh" tabindex="-1"><a class="header-anchor" href="#安装zsh" aria-hidden="true">#</a> 安装zsh</h2><p>分别介绍一下 Mac、CentOS 和 Ubuntu 下 zsh 的安装。</p><h3 id="安装前的准备" tabindex="-1"><a class="header-anchor" href="#安装前的准备" aria-hidden="true">#</a> 安装前的准备</h3><p>安装前可以打开命令行终端，通过命令查看当前所使用的 SHELL 。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同时可以通过命令<code>cat /etc/shells</code>查看当前环境下所有支持的 SHELL ，在列表中检查系统是否已经安装好<code>zsh</code>。</p><blockquote><p>在 CentOS 和 Ubuntu 上默认没有安装<code>zsh</code>，MacOSX 平台默认自带。</p></blockquote><h3 id="安装zsh-1" tabindex="-1"><a class="header-anchor" href="#安装zsh-1" aria-hidden="true">#</a> 安装zsh</h3><p><code>zsh</code>在 Mac 和 Linux 平台的安装都比较简单，直接通过各自平台的包依赖管理工具执行一条命令即可安装完成。</p>`,9),k={href:"https://brew.sh/index_zh-cn",target:"_blank",rel:"noopener noreferrer"},z=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token function">zsh</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>值得注意的是：zsh 在MacOSX上使用 brew 命令的安装的 zsh 路径在<code>/usr/local/bin/zsh</code>，而系统自带的 zsh 默认是在 /bin/zsh，如果需要使用brew安装的zsh，则在<code>/etc/shells</code>中添加一条记录，<code>/usr/local/bin/zsh</code>，也可以直接使用系统自带的zsh也行。</p></blockquote><ul><li>CentOS下的安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">zsh</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Ubuntu下的安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sodu <span class="token function">apt-get</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">zsh</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="切换到zsh并检查" tabindex="-1"><a class="header-anchor" href="#切换到zsh并检查" aria-hidden="true">#</a> 切换到zsh并检查</h3><ul><li>切换shell为zsh</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chsh <span class="token parameter variable">-s</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">which</span> <span class="token function">zsh</span><span class="token variable">\`</span></span> root <span class="token comment"># 为root用户修改默认shell为zsh</span>

chsh <span class="token parameter variable">-s</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">which</span> <span class="token function">zsh</span><span class="token variable">\`</span></span> <span class="token comment"># 为当前用户修改默认shell为zsh，注意：MacOSX系统使用\`chsh -s /bin/zsh\`即可。</span>

chsh <span class="token parameter variable">-s</span> /bin/bash <span class="token comment"># 恢复bash命令</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>检查是否安装好zsh <ol><li>通过命令<code>cat /etc/shells</code>命令，可以查看一下系统当前所有的SHELL，看看有没有<code>zsh</code>。</li><li>通过命令<code>echo $SHELL</code>命令，查看当前是不是使用<code>zsh</code>环境。</li></ol></li></ul><p>执行上面的命令可能需要输入当前用户的密码后确认切换至 zsh ，然后注销当前会话并重新连接后查看是否真正切换至 zsh。</p><p>至此，zsh 的安装与切换已经完毕，下面开始安装和配置<code>oh-my-zsh</code>。</p><h2 id="oh-my-zsh的安装" tabindex="-1"><a class="header-anchor" href="#oh-my-zsh的安装" aria-hidden="true">#</a> Oh-My-Zsh的安装</h2><p>curl 和 wget 两种安装方式二选一即可</p><ul><li>通过curl进行安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>通过wget进行安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">wget</span> https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh <span class="token parameter variable">-O</span> -<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装成功后显示一个如下的欢迎界面：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Looking for an existing zsh config...
Using the Oh My Zsh template file and adding it to ~/.zshrc
         __                                     __
  ____  / /_     ____ ___  __  __   ____  _____/ /_
 / __ \\/ __ \\   / __ \`__ \\/ / / /  /_  / / ___/ __ \\
/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /
\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/
                        /____/                       ....is now installed!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，Oh-My-Zsh 的安装已经完毕。</p><h2 id="定制oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#定制oh-my-zsh" aria-hidden="true">#</a> 定制Oh-My-Zsh</h2><h3 id="基本配置" tabindex="-1"><a class="header-anchor" href="#基本配置" aria-hidden="true">#</a> 基本配置</h3><p>Oh-My-Zsh的默认配置在<code>~/.zshrc</code>文件中配置可以配置，修改默认的基本配置:</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">ZSH_THEME</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;robbyrussell&quot;  # zsh主题，可以配置为后面的Dracula主题</span>
<span class="token key attr-name">export UPDATE_ZSH_DAYS</span> <span class="token punctuation">=</span> <span class="token value attr-value">30 # 30天检查更新zsh</span>
<span class="token key attr-name">HIST_STAMPS</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;yyyy-mm-dd&quot;  # 历史记录时间格式</span>
<span class="token key attr-name">export LANG</span> <span class="token punctuation">=</span> <span class="token value attr-value">en_US.UTF-8   # 语言</span>

<span class="token key attr-name">plugins</span> <span class="token punctuation">=</span> <span class="token value attr-value">(git autojump zsh-autosuggestions) # 开启常用插件(这些插件都包含在oh-my-zsh中)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),g=s("code",null,"autojump",-1),f={href:"https://github.com/zsh-users/zsh-autosuggestions",target:"_blank",rel:"noopener noreferrer"},y=s("blockquote",null,[s("p",null,[s("code",null,"Oh-My-Zsh"),a("插件目录路径在"),s("code",null,"~/.oh-my-zsh/plugins"),a("目录下。")])],-1),x=s("h3",{id:"安装dracula主题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装dracula主题","aria-hidden":"true"},"#"),a(" 安装Dracula主题")],-1),S={href:"https://draculatheme.com/",target:"_blank",rel:"noopener noreferrer"},L=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> dracula.zip <span class="token parameter variable">-c</span> --no-check-certificate https://github.com/dracula/zsh/archive/master.zip

<span class="token function">unzip</span> dracula.zip <span class="token comment"># 解压缩</span>

<span class="token function">mv</span> zsh-master/dracula.zsh-theme ~/.oh-my-zsh/themes/ <span class="token comment"># 将dracula.zsh-theme移动到oh-my-zsh主题目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>wget参数解释 <code>-O</code>：自定义存储的文件名 <code>-c</code>：支持断点续传 <code>--no-check-certificate</code>：忽略 https 验证</p></blockquote><p>安装好以后打开<code>~/.zshrc</code>文件修改文件中<code>ZSH_THEME</code>的配置为：<code>dracula</code>，重新打开一个终端或者使用命令<code>source ~/.zshrc</code>重载配置。</p><h3 id="插件相关" tabindex="-1"><a class="header-anchor" href="#插件相关" aria-hidden="true">#</a> 插件相关</h3>`,4),M=l(`<h2 id="手动升级oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#手动升级oh-my-zsh" aria-hidden="true">#</a> 手动升级Oh-My-Zsh</h2><p>执行下面的命令手动升级</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>upgrade_oh_my_zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="卸载oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#卸载oh-my-zsh" aria-hidden="true">#</a> 卸载Oh-My-Zsh</h2><p>如果想卸载 Oh-My-Zsh, 从命令行运行下面的命令， 这将删除本身和恢复系统以前的<code>bash</code>或者<code>zsh</code>配置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>uninstall_oh_my_zsh <span class="token function">zsh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考地址" tabindex="-1"><a class="header-anchor" href="#参考地址" aria-hidden="true">#</a> 参考地址</h2>`,7),O={href:"http://yijiebuyi.com/blog/b9b5e1ebb719f22475c38c4819ab8151.html",target:"_blank",rel:"noopener noreferrer"},q={href:"http://ju.outofmemory.cn/entry/273093",target:"_blank",rel:"noopener noreferrer"};function Z(w,E){const n=i("ExternalLinkIcon"),t=i("RouterLink");return o(),d("div",null,[u,p,s("p",null,[a("通常来说不管是 Mac 还是 CentOS 或者是 Ubuntu 等类 Unix 系统，默认的 SHELL 都是"),b,a("。但是真正强大的SHELL是"),m,a("，但是由于配置比较繁琐，在出现 Oh My Zsh 之前有比较少的人使用。 "),s("a",v,[a("Oh My Zsh"),e(n)]),a(" 的简单配置能让我们快速使用zsh这个SHELL给开发者带来很多愉悦，节省时间。")]),_,s("ul",null,[s("li",null,[a("Mac下的安装 在Mac系统下默认自带zsh，我们可以使用 "),s("a",k,[a("brew"),e(n)]),a(" 命令更新一下。")])]),z,s("blockquote",null,[s("p",null,[g,a(" 命令能够记住我们在命令终端输入的命令，在我们下次使用的时候配合 "),s("a",f,[a("zsh-autosuggestions"),e(n)]),a(" 可以在我们输入命令时给出一些提示，加快我们的命令敲入速度，非常棒。")])]),y,x,s("p",null,[s("a",S,[a("Dracula"),e(n)]),a("在很多编辑器上都可以使用，更多信息可以参考官网")]),L,s("p",null,[a("Oh-My-Zsh的强大之处是安装各种插件加速我们在命令行终端的体验，更多插件相关的安装和使用请"),e(t,{to:"/others/oh-my-zsh-common-plugins.html"},{default:r(()=>[a("查看这里")]),_:1}),a("。")]),M,s("ul",null,[s("li",null,[s("p",null,[s("a",O,[a("oh-my-zsh配置你的zsh提高shell逼格终极选择"),e(n)])])]),s("li",null,[s("p",null,[s("a",q,[a("centos7 安装zsh和使用oh-my-zsh"),e(n)])])])])])}const U=c(h,[["render",Z],["__file","install-and-use-oh-my-zsh.html.vue"]]);export{U as default};
