import{_ as t,r as p,o,c,b as n,a as e,F as i,d as s,e as l}from"./app.ae01a4a3.js";const u={},r=n("h1",{id:"console-\u547D\u4EE4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#console-\u547D\u4EE4","aria-hidden":"true"},"#"),s(" Console \u547D\u4EE4")],-1),d=n("p",null,"Console \u7EC4\u4EF6\u5141\u8BB8\u521B\u5EFA command-line \u547D\u4EE4\u3002console\uFF08\u63A7\u5236\u53F0\uFF09\u547D\u4EE4\u53EF\u4EE5\u7528\u4E8E\u4EFB\u4F55\u53CD\u590D\u6267\u884C\u7684\u4EFB\u52A1\uFF0C\u6BD4\u5982 cron-jobs\uFF0Cimports\uFF08\u5BFC\u5165\uFF09\uFF0C\u6216\u5176\u4ED6\u6279\u5904\u7406\u5DE5\u4F5C\u3002",-1),k=n("p",null,"\u793A\u4F8B\u521B\u5EFA\u4E00\u4E2A CreateUserCommand \u547D\u4EE4\u3002",-1),m={href:"https://github.com/curder/symfony-components/tree/console",target:"_blank",rel:"noopener noreferrer"},v=s("GitHub \u5B9E\u4F8B\u4EE3\u7801\u5E93 - curder/symfony-components"),b=l(`<h2 id="\u5B89\u88C5\u524D\u7684\u51C6\u5907" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u524D\u7684\u51C6\u5907" aria-hidden="true">#</a> \u5B89\u88C5\u524D\u7684\u51C6\u5907</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> symfony-components <span class="token comment"># \u521B\u5EFA\u76EE\u5F55</span>
<span class="token builtin class-name">cd</span> symfony-components <span class="token comment"># \u8FDB\u5165\u5230\u5DE5\u4F5C\u76EE\u5F55 </span>

<span class="token function">composer</span> init <span class="token comment"># \u521D\u59CB\u5316 Composer \u4FE1\u606F</span>

<span class="token function">mkdir</span> src/ <span class="token comment"># \u521B\u5EFA\u6E90\u4EE3\u7801\u76EE\u5F55</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>composer.json</code> \u6587\u4EF6\u5982\u4E0B\uFF1A</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;curder/symfony-components&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Discover Symfony Components&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;authors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;curder&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;q.curder@gmail.com&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;php&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt;=7.2.5&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;autoload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;psr-4&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;Curder\\\\&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B89\u88C5" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5" aria-hidden="true">#</a> \u5B89\u88C5</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> require symfony/console @stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\u5982\u679C\u5728 <code>Symfony</code> \u5E94\u7528\u7A0B\u5E8F\u4E4B\u5916\u5B89\u88C5\u8FD9\u4E2A\u7EC4\u4EF6\uFF0C\u5FC5\u987B\u5728\u4EE3\u7801\u4E2D\u5305\u542B <code>vendor/autoload.php</code> \u6587\u4EF6\u6765\u542F\u7528 Composer \u63D0\u4F9B\u7684\u7C7B\u7684\u81EA\u52A8\u52A0\u8F7D\u673A\u5236\u3002</p></blockquote><h2 id="\u521B\u5EFA\u4E00\u4E2Aconsole\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u4E00\u4E2Aconsole\u7A0B\u5E8F" aria-hidden="true">#</a> \u521B\u5EFA\u4E00\u4E2AConsole\u7A0B\u5E8F</h2><p>\u9996\u5148\uFF0C\u9700\u8981\u5EFA\u7ACB\u4E00\u4E2A PHP \u811A\u672C\u6765\u5B9A\u4E49\u63A7\u5236\u53F0\u7A0B\u5E8F\uFF0C\u5728\u9879\u76EE\u7684\u6839\u76EE\u5F55\u4E0B\uFF0C\u5EFA\u7ACB <code>demo</code> \u6587\u4EF6\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>#!/usr/bin/env php

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">require</span> <span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/vendor/autoload.php&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>

<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Symfony Console&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;0.1.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u9879\u76EE\u540D\u79F0\u548C\u7248\u672C</span>

<span class="token comment">// \u6CE8\u518C\u547D\u4EE4</span>
<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateUserCommand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u521B\u5EFA\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u547D\u4EE4" aria-hidden="true">#</a> \u521B\u5EFA\u547D\u4EE4</h2><p>\u547D\u4EE4\u901A\u8FC7\u7C7B\u6765\u5B9A\u4E49\uFF0C\u8FD9\u91CC\u5B9A\u4E49\u4E3A <code>CreateUserCommand</code> \u7C7B\u3002\u7C7B\u7684\u5B9A\u4E49\u9075\u5FAA\u5982\u4E0B\u7ED3\u6784\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Command<span class="token punctuation">\\</span>Command</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Input<span class="token punctuation">\\</span>InputInterface</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Output<span class="token punctuation">\\</span>OutputInterface</span><span class="token punctuation">;</span>
 
<span class="token keyword">class</span> <span class="token class-name-definition class-name">CreateUserCommand</span> <span class="token keyword">extends</span> <span class="token class-name">Command</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">execute</span><span class="token punctuation">(</span><span class="token class-name type-declaration">InputInterface</span> <span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">OutputInterface</span> <span class="token variable">$output</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u914D\u7F6E\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u547D\u4EE4" aria-hidden="true">#</a> \u914D\u7F6E\u547D\u4EE4</h2><h3 id="\u914D\u7F6E\u540D\u79F0\u548C\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u540D\u79F0\u548C\u63CF\u8FF0" aria-hidden="true">#</a> \u914D\u7F6E\u540D\u79F0\u548C\u63CF\u8FF0</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// ...</span>
<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user:create&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8BBE\u7F6E\u547D\u4EE4\u540D\u79F0</span>
         <span class="token operator">-&gt;</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Create new user&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u547D\u4EE4\u7B80\u77ED\u63CF\u8FF0</span>
         <span class="token operator">-&gt;</span><span class="token function">setHelp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;This command allows you to create users...&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD0\u884C\u547D\u4EE4\u65F6\u4F7F\u7528 &quot;--help&quot; \u9009\u9879\u65F6\u7684\u5B8C\u6574\u547D\u4EE4\u63CF\u8FF0</span>
<span class="token comment">//         -&gt;addOption(&#39;is_admin&#39;, &#39;alias&#39;, InputArgument::OPTIONAL, InputOption::VALUE_NONE, &#39;It\\&#39;s admin user.&#39;)</span>
<span class="token comment">//         -&gt;setDefinition([</span>
<span class="token comment">//             new InputArgument(&#39;username&#39;, InputArgument::REQUIRED, &#39;The username of the user.&#39;),</span>
<span class="token comment">//             new InputOption(&#39;is_admin&#39;, &#39;alias&#39;, InputArgument::OPTIONAL, InputOption::VALUE_NONE, &#39;It\\&#39;s admin user.&#39;),</span>
<span class="token comment">//         ])</span>
         <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>setDescription()</code> \u914D\u7F6E\u547D\u4EE4\u7684\u7B80\u5355\u63CF\u8FF0</li><li><code>setHelp()</code> \u8FD0\u884C\u547D\u4EE4\u65F6\u4F7F\u7528 &quot;--help&quot; \u9009\u9879\u65F6\u7684\u5B8C\u6574\u547D\u4EE4\u63CF\u8FF0</li></ul><h3 id="\u914D\u7F6E\u7528\u6237\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u7528\u6237\u8F93\u5165" aria-hidden="true">#</a> \u914D\u7F6E\u7528\u6237\u8F93\u5165</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Input<span class="token punctuation">\\</span>InputArgument</span><span class="token punctuation">;</span>
 
<span class="token comment">// ...</span>
<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span>
        <span class="token comment">// \u914D\u7F6E\u4E00\u4E2A\u5FC5\u987B\u53C2\u6570\uFF0C\u5982\u679C\u662F\u53EF\u9009\u53C2\u6570 InputArgument::OPTIONAL\uFF0C\u5982\u679C\u662F\u6570\u7EC4\u53C2\u6570 InputArgument::IS_ARRAY</span>
        <span class="token operator">-&gt;</span><span class="token function">addArgument</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">InputArgument</span><span class="token operator">::</span><span class="token constant">REQUIRED</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;The username of the user.&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u914D\u7F6E\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u8F93\u51FA" aria-hidden="true">#</a> \u914D\u7F6E\u8F93\u51FA</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">execute</span><span class="token punctuation">(</span><span class="token class-name type-declaration">InputInterface</span> <span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">OutputInterface</span> <span class="token variable">$output</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$output</span><span class="token operator">-&gt;</span><span class="token function">writeln</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;User Creator&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;============&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">// retrieve the argument value using getArgument()</span>
    <span class="token comment">// \u4F7F\u7528 getArgument() \u53D6\u51FA\u53C2\u6570\u503C</span>
    <span class="token variable">$output</span><span class="token operator">-&gt;</span><span class="token function">writeln</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Username: &lt;info&gt;&#39;</span><span class="token operator">.</span><span class="token variable">$input</span><span class="token operator">-&gt;</span><span class="token function">getArgument</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/info&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token keyword">return</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h4><ul><li><code>return self::SUCCESS; // 0</code></li><li><code>return self::FAILURE; // 1</code></li><li><code>return self::INVALID; // 2</code></li></ul><h3 id="\u6267\u884C\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u547D\u4EE4" aria-hidden="true">#</a> \u6267\u884C\u547D\u4EE4</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./demo user:create Curder
User Creator
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>

Username: Curder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5355\u5143\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u5355\u5143\u6D4B\u8BD5" aria-hidden="true">#</a> \u5355\u5143\u6D4B\u8BD5</h2><h3 id="\u524D\u7F6E\u51C6\u5907" tabindex="-1"><a class="header-anchor" href="#\u524D\u7F6E\u51C6\u5907" aria-hidden="true">#</a> \u524D\u7F6E\u51C6\u5907</h3><h4 id="\u5B89\u88C5-phpunit-phpunit" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5-phpunit-phpunit" aria-hidden="true">#</a> \u5B89\u88C5 phpunit/phpunit</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> require --dev phpunit/phpunit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="\u914D\u7F6E-phpunit-xml" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E-phpunit-xml" aria-hidden="true">#</a> \u914D\u7F6E phpunit xml</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phpunit</span> <span class="token attr-name">bootstrap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vendor/autoload.php<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">cacheResult</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">colors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuites</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>testsuite</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Tests<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>tests<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>testsuites</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phpunit</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65AD\u8A00\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u65AD\u8A00\u8F93\u51FA" aria-hidden="true">#</a> \u65AD\u8A00\u8F93\u51FA</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_should_run_user_create_command</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$command_name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user:create&#39;</span><span class="token punctuation">;</span>
        <span class="token comment">// Set up your Application with your command.</span>
        <span class="token variable">$application</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Here&#39;s where you would inject any mocked dependencies as needed.</span>
        <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateUserCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$foundCommand</span> <span class="token operator">=</span> <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$command_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$tester</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Tester<span class="token punctuation">\\</span>CommandTester</span><span class="token punctuation">(</span><span class="token variable">$foundCommand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// &#39;./demo user:create Curder&#39;</span>
        <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token variable">$tester</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;command&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$command_name</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Curder&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token variable">$tester</span><span class="token operator">-&gt;</span><span class="token function">getDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$assertStringContainsString</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Username: Curder&#39;</span><span class="token punctuation">,</span> <span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$assertEquals</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Command<span class="token punctuation">\\</span>Command</span><span class="token operator">::</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4B\u8BD5\u53C2\u6570\u5FC5\u9009" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u53C2\u6570\u5FC5\u9009" aria-hidden="true">#</a> \u6D4B\u8BD5\u53C2\u6570\u5FC5\u9009</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>    <span class="token doc-comment comment">/** <span class="token keyword">@test</span> */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">it_has_require_user_name_argument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">expectException</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Exception<span class="token punctuation">\\</span>RuntimeException</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">expectErrorMessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Not enough arguments (missing: &quot;username&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$command_name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user:create&#39;</span><span class="token punctuation">;</span>
        <span class="token comment">// Set up your Application with your command.</span>
        <span class="token variable">$application</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Here&#39;s where you would inject any mocked dependencies as needed.</span>
        <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateUserCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$foundCommand</span> <span class="token operator">=</span> <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$command_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$tester</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Console<span class="token punctuation">\\</span>Tester<span class="token punctuation">\\</span>CommandTester</span><span class="token punctuation">(</span><span class="token variable">$foundCommand</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Execute the command. This example would be the equivalent of</span>
        <span class="token comment">// &#39;./demo user:create&#39;</span>
        <span class="token variable">$tester</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;command&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$command_name</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,36),h={href:"https://symfony.com/doc/current/components/console.html",target:"_blank",rel:"noopener noreferrer"},g=s("The Console Component \u6587\u6863"),f={href:"https://github.com/curder/symfony-components/tree/console",target:"_blank",rel:"noopener noreferrer"},y=s("curder/symfony-components");function q(C,_){const a=p("ExternalLinkIcon");return o(),c(i,null,[r,d,k,n("p",null,[n("a",m,[v,e(a)])]),b,n("ul",null,[n("li",null,[n("a",h,[g,e(a)])]),n("li",null,[n("a",f,[y,e(a)])])])],64)}var w=t(u,[["render",q],["__file","console.html.vue"]]);export{w as default};
