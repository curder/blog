import{_ as o,r as t,o as c,c as l,b as n,a,w as i,F as r,d as s,e as u}from"./app.00a4b1d3.js";const d={},k=n("h1",{id:"\u5BF9api\u8D44\u6E90\u7684\u7B2C\u4E00\u5370\u8C61",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5BF9api\u8D44\u6E90\u7684\u7B2C\u4E00\u5370\u8C61","aria-hidden":"true"},"#"),s(" \u5BF9API\u8D44\u6E90\u7684\u7B2C\u4E00\u5370\u8C61")],-1),v=s("\u672C\u6587\u539F\u5740\uFF1A"),m={href:"https://hackernoon.com/first-impressions-on-laravel-api-resources-4869b73b7847",target:"_blank",rel:"noopener noreferrer"},b=s("hackernoon.com"),h=s("\u4E0A\u5468"),g={href:"https://medium.com/@taylorotwell",target:"_blank",rel:"noopener noreferrer"},y=s("Taylor Otwell"),f=s("\u6700\u540E\u4ECB\u7ECD\u4E86\u5728Laravel 5.5\u4E0A\u5F00\u53D1API\u65F6\u53EF\u4EE5\u53D6\u4EE3"),w={href:"http://fractal.thephpleague.com/transformers/",target:"_blank",rel:"noopener noreferrer"},_=s("Fractal"),x=s("\u7684\u5F00\u59CB\uFF0C\u8FD9\u7BC7\u6587\u7AE0\u662F\u4F5C\u8005\u7B2C\u4E00\u6B21\u8BD5\u8FD0\u884C\u3002"),$=u(`<h2 id="\u5B89\u88C5\u5E72\u51C0\u7684laravel-5-5\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u5E72\u51C0\u7684laravel-5-5\u9879\u76EE" aria-hidden="true">#</a> \u5B89\u88C5\u5E72\u51C0\u7684Laravel 5.5\u9879\u76EE</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> create-project laravel/laravel responses dev-develop
<span class="token builtin class-name">cd</span> responses
<span class="token function">touch</span> database/database.sqlite
php artisan make:model Post -mfa
php artisan make:resource UsersWithPostsResource
php artisan make:resource PostsResource
php artisan make:controller UsersController --resource
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u66F4\u6539<code>.env</code>\u6587\u4EF6\u4EE5\u4F7F\u7528SQLite\u5E76\u5220\u9664\u6BCF\u4E2A\u5176\u4ED6\u6570\u636E\u5E93\u53D8\u91CF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DB_CONNECTION=sqlite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u51C6\u5907\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#\u51C6\u5907\u6570\u636E\u5E93" aria-hidden="true">#</a> \u51C6\u5907\u6570\u636E\u5E93</h2><ul><li><code>posts</code>\u8FC1\u79FB<code>database/migrations/______create_posts_table.php</code></li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">increments</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">unsignedInteger</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Post Factory <code>database/factories/PostFactory.php</code></li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Faker<span class="token punctuation">\\</span>Generator</span> <span class="token keyword">as</span> Faker<span class="token punctuation">;</span>

<span class="token variable">$factory</span><span class="token operator">-&gt;</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Faker</span> <span class="token variable">$faker</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$faker</span><span class="token operator">-&gt;</span><span class="token property">sentence</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;body&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$faker</span><span class="token operator">-&gt;</span><span class="token property">paragraph</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;user_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7528\u6237\u6709 Posts \u5173\u8054\u5173\u7CFB<code>app/User.php</code></li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">posts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u907F\u514D Posts \u4E0A\u7684\u5927\u91CF\u5206\u914D</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$guarded</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u586B\u5145\u6570\u636E\u5E93</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan migrate:fresh
php artisan tinker
factory<span class="token punctuation">(</span>App<span class="token punctuation">\\</span>Post::class<span class="token punctuation">)</span>-<span class="token operator">&gt;</span>times<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>create<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
factory<span class="token punctuation">(</span>App<span class="token punctuation">\\</span>Post::class<span class="token punctuation">)</span>-<span class="token operator">&gt;</span>times<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>create<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8BBE\u7F6E\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u7F6E\u8DEF\u7531" aria-hidden="true">#</a> \u8BBE\u7F6E\u8DEF\u7531</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">apiResource</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;UsersController&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5C06\u6A21\u578B\u8F6C\u5316\u4E3A\u8D44\u6E90" tabindex="-1"><a class="header-anchor" href="#\u5C06\u6A21\u578B\u8F6C\u5316\u4E3A\u8D44\u6E90" aria-hidden="true">#</a> \u5C06\u6A21\u578B\u8F6C\u5316\u4E3A\u8D44\u6E90</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * Display a listing of the resource.
 *
 * <span class="token keyword">@param</span> <span class="token class-name">User</span> <span class="token parameter">$user</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Response</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">User</span> <span class="token variable">$user</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UsersWithPostsResource</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6709-posts-\u8D44\u6E90\u7684\u7528\u6237" tabindex="-1"><a class="header-anchor" href="#\u6709-posts-\u8D44\u6E90\u7684\u7528\u6237" aria-hidden="true">#</a> \u6709 Posts \u8D44\u6E90\u7684\u7528\u6237</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Resources</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>Json<span class="token punctuation">\\</span>Resource</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersWithPostsResource</span> <span class="token keyword">extends</span> <span class="token class-name">Resource</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Transform the resource into an array.
     *
     * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span>
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">toArray</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Eager load</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token operator">-&gt;</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">email</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;posts&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">PostsResource</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">posts</span><span class="token punctuation">)</span>
            <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="posts-\u8D44\u6E90" tabindex="-1"><a class="header-anchor" href="#posts-\u8D44\u6E90" aria-hidden="true">#</a> Posts \u8D44\u6E90</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Resources</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>Json<span class="token punctuation">\\</span>Resource</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">PostsResource</span> <span class="token keyword">extends</span> <span class="token class-name">Resource</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Transform the resource into an array.
     *
     * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span>
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">toArray</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token operator">-&gt;</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$item</span><span class="token operator">-&gt;</span><span class="token property">title</span>
            <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u8BBA" aria-hidden="true">#</a> \u7ED3\u8BBA</h2><p>\u4E0E<strong>Fractal</strong>\u76F8\u6BD4\uFF0C\u7B2C\u4E00\u4E2A\u660E\u663E\u7684\u533A\u522B\u662F\u8D44\u6E90\u53EF\u4EE5\u8F7B\u677E\u76F4\u63A5\u8BBF\u95EE\u6574\u4E2A\u96C6\u5408\uFF0C\u800C\u4E0D\u662F\u4EE5\u6BCF\u4E2A\u5BF9\u8C61\u4E3A\u57FA\u7840\u3002</p><p>\u8FD9\u610F\u5473\u7740\uFF0C\u5728\u8F6C\u6362\u4E00\u7EC4\u7528\u6237\u65F6\uFF0C\u60A8\u53EF\u4EE5\u8F7B\u677E\u5730\u52A0\u8F7D\u6BCF\u4E2APosts\uFF0C\u800C\u4E0D\u9700\u8981N+1\u4E2A\u67E5\u8BE2\u3002</p><p>\u5D4C\u5957\u8F6C\u6362\u4E5F\u5F88\u7B80\u5355\uFF0C\u56E0\u4E3A\u60A8\u53EF\u4EE5\u751F\u6210\u4E00\u4E2A\u65B0\u7684Resource\u7C7B\uFF0C\u6839\u636E\u9700\u8981\u8F6C\u6362\u6570\u636E\u3002</p><p>\u4E00\u65E6\u6211\u5F00\u59CB\u6DF1\u5165\u6316\u6398\u53EF\u80FD\u6027\uFF0C\u6211\u5E0C\u671B\u5199\u4E00\u7BC7\u66F4\u8BE6\u7EC6\u7684\u6587\u7AE0\u3002</p><h2 id="\u8DDF\u8FDB" tabindex="-1"><a class="header-anchor" href="#\u8DDF\u8FDB" aria-hidden="true">#</a> \u8DDF\u8FDB</h2><p>\u8FD9\u662F\u7B2C\u4E00\u7BC7\u5173\u4E8ELaravel 5.5 API\u8D44\u6E90\u7684\u6587\u7AE0\u3002</p><p>\u4F60\u53EF\u4EE5\u5728\u8FD9\u91CC\u627E\u5230\u5173\u4E8E\u8FD9\u4E2A\u4E3B\u9898\u7684\u7B2C\u4E8C\u7BC7\u6587\u7AE0\uFF1A</p>`,31),q=s("\u5177\u6709\u5D4C\u5957\u5173\u7CFB\u7684API\u8D44\u6E90");function P(R,I){const e=t("ExternalLinkIcon"),p=t("RouterLink");return c(),l(r,null,[k,n("blockquote",null,[n("p",null,[v,n("a",m,[b,a(e)])])]),n("p",null,[h,n("a",g,[y,a(e)]),f,n("a",w,[_,a(e)]),x]),$,n("p",null,[a(p,{to:"/languages/laravel/api/reusable-api-resource-with-nested-relationship-laravel-5-5.html"},{default:i(()=>[q]),_:1})])],64)}var F=o(d,[["render",P],["__file","first-impressions-on-laravel-api-resources.html.vue"]]);export{F as default};
